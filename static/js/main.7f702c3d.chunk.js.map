{"version":3,"sources":["images/shareIcon.svg","images/whiteHeartIcon.svg","images/blackHeartIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/profileIcon.svg","images/searchIcon.svg","services/fetchAPIFood.js","services/fetchAPIDrink.js","redux/actions/foodActions.js","components/Footer.js","redux/actions/searchBarActions.js","redux/actions/drinkActions.js","components/SearchBar.js","components/Header.js","components/FoodCards.js","components/FoodCategories.js","components/DrinkCards.js","components/DrinkCategories.js","components/FoodCard.js","components/DrinkCard.js","components/ShareButton.js","components/FavoriteButton.js","components/FoodDetailsCard.js","components/DrinkRecomendation.js","components/DrinkShareButton.js","components/DrinkFavoriteButton.js","components/DrinkDetailsCard.js","components/FoodRecomendation.js","components/StartRecipe.js","components/DrinkStartRecipe.js","pages/Foods.js","pages/Drinks.js","pages/DoneRecipes.js","components/ReturnButton.js","pages/DrinkDetails.js","components/IngredientsDrinkInProgress.js","components/DrinkInProgressCard.js","pages/DrinkInProgress.js","pages/Explore.js","pages/ExploreDrinks.js","pages/ExploreDrinksIngredients.js","pages/ExploreFoodByArea.js","pages/ExploreFoodIngredients.js","pages/ExploreFoods.js","pages/FavoriteRecipes.js","pages/FoodDetails.js","components/IngredientsFoodInProgress.js","components/FoodInProgressCard.js","pages/FoodInProgress.js","pages/Login.js","pages/Profile.js","pages/NotFound.js","App.js","serviceWorker.js","redux/reducers/drinkReducer.js","redux/reducers/foodReducer.js","redux/reducers/searchBarReducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["module","exports","urlIngredients","urlName","urlCategory","urlCategoryFilter","urlFirstLetter","urlId","urlFoodRandom","urlFoodArea","fetchAPIName","name","a","fetch","response","json","resolve","meals","console","log","fetchAPICategory","category","fetchAPICategoryFilter","fetchAPIByID","id","fetchFoodRandom","idMeal","fetchFoodIngredient","fetchFoodArea","fetchAPIFirstLetter","letter","fetchFoodIngredientSearch","ingredient","fetchSearchFoodByArea","area","drinkRandom","drinks","fetchDrinkRandom","idDrink","fetchDrinkIngredient","fetchDrinkIngredientSearch","foodListSuccess","payload","type","fetchFoodList","dispatch","returnFetch","updateCategory","fetchFoodID","saveFavoritesRedux","renderFoodIngredient","Footer","data-testid","className","to","src","drinkIcon","alt","exploreIcon","mealIcon","Component","saveSearchResults","drinkListSuccess","fetchDrinkList","fetchDrinkID","renderDrinkIngredient","SearchBar","state","food","handleSearchClick","bind","checkResults","this","checkHistory","props","query","selectedFilter","executeSearchFoodAction","executeSearchDrinkAction","length","alert","searchResults","history","saveFoodList","saveDrinkList","push","setState","location","pathname","includes","queryAction","selectedFilterAction","Form","Group","class","Control","placeholder","value","onChange","target","htmlFor","Button","variant","onClick","connect","searchBarReducer","filter","ingredientsResult","nameResults","firstLetterResults","executeFoodSearch","fetchDrinkName","fetchDrinkFirstLetter","executeDrinkSearch","results","withRouter","Header","showInput","renderSearchBar","searchIcon","title","search","profileIcon","renderSearchButton","FoodCards","foodCardsList","map","item","index","key","height","width","strMealThumb","strMeal","FoodCategories","foodReducer","filterByAll","filterByCategory","actionFetchFoodList","actionUpdateCategory","actionFetchFoodByCategory","selectedCategory","foodCategories","size","strCategory","foodCategoriesList","fetchFoodListByCategory","DrinkCards","drinkCardsList","Card","style","Img","strDrinkThumb","Body","Title","strDrink","DrinkCategories","drinkReducer","actionFetchDrinkList","actionFetchDrinkByCategory","drinkCategories","drinkCategoriesList","fetchDrinkListByCategory","FoodCard","DrinkCard","drink","copy","require","ShareButton","clipboardMessage","test","clipBoard","shareIcon","FavoriteButton","whiteHeart","handleFavoriteClick","setFavoriteIcon","handleHeart","favoriteMeals","JSON","parse","localStorage","getItem","find","favoriteRecipes","removeRecipes","prevState","whiteHeartIcon","blackHeartIcon","genericObj","strArea","alcoholicOrNot","image","setItem","stringify","newFavoriteRecipes","saveFavoriteRecipe","removeFavoriteRecipe","FoodDetailsCard","foodDetails","ingredients","measurements","array","Array","of","Object","entries","strInstructions","strYoutube","DrinkRecomendation","drinkRecomendations","Carousel","Item","DrinkShareButton","DrinkFavoriteButton","favoriteCocktails","strAlcoholic","DrinkDetailsCard","drinkDetails","FoodRecomendation","foodRecomendations","StartRecipe","doneRecipes","recipesInProgress","prototype","hasOwnProperty","call","checkRecipesStatus","DrinkStartRecipe","cocktails","Foods","actionFetchCategories","ingredientQuery","actionFetchIngredientFoodList","actionFoodIngredient","ingredientFoodQuery","fetchFoodCategory","fetchFoodIngredientList","Drinks","actionFetchIngredientDrinkList","ingredientDrinkQuery","actionDrinkIngredient","fetchDrinkCategory","fetchDrinkIngredientList","DoneRecipes","saveState","getFilters","filterButtons","doneDate","tags","ReturnButton","goBack","DrinkDetails","match","params","fetchDrinkByID","fetchFood","fetchRecomendations","fetchFoodRecomendations","IngredientesDrinkInProgress","ingredientsArrayList","handleOnchange","saveInLocalStorage","prevProps","is","markedBox","checked","previousState","Number","box","inProgressRecipes","keys","saveDoneRecipesAction","some","disabled","date","Date","toLocaleDateString","strTags","split","newDoneRecipes","saveDoneRecipe","DrinkInProgressCard","IngredientsDrinkInProgress","DrinkInProgress","Explore","ExploreDrinks","redirectRandomDrink","randomDrinkIdResult","randomDrink","ExploreDrinksIngredients","actionfetchDrinkIngredient","fetchDrinkIngredients","strIngredient1","drinkIngredients","ExploreFoodByArea","handleFoodByArea","actionFetchSearchFoodArea","foodArea","fetchSearchFoodArea","ExploreFoodIngredients","actionfetchFoodIngredient","idIngredient","redirectFoodIngredient","strIngredient","foodIngredients","ExploreFoods","redirectRandomFood","randomFoodIdResult","randomFood","FavoriteRecipes","updateFavorites","FilterList","favorites","list","FoodDetails","fetchFoodByID","fetchDrink","fetchDrinkRecomendations","IngredientsFoodInProgress","meal","FoodInProgressCard","FoodInProgress","Login","email","password","valid","handleChangeForm","loginUser","validateLogin","e","preventDefault","controlId","renderLoginForm","Profile","getEmail","userEmail","clear","NotFound","App","exact","path","component","render","Boolean","window","hostname","INITIAL_STATE","action","slice","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f702c3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","const urlIngredients = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\nconst urlName = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\nconst urlCategory = 'https://www.themealdb.com/api/json/v1/1/list.php?c=';\nconst urlCategoryFilter = 'https://www.themealdb.com/api/json/v1/1/filter.php?c=';\nconst urlFirstLetter = 'https://www.themealdb.com/api/json/v1/1/search.php?f=';\nconst urlId = 'https://www.themealdb.com/api/json/v1/1/lookup.php?i=';\nconst urlFoodRandom = 'https://www.themealdb.com/api/json/v1/1/random.php';\nconst urlFoodArea = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\nconst urlIngredientsFilter = 'https://www.themealdb.com/api/json/v1/1/filter.php?i=';\nconst urlSearchFoodByArea = 'https://www.themealdb.com/api/json/v1/1/filter.php?a=';\n\nexport async function fetchAPIName(name) {\n  try {\n    const response = await fetch(`${urlName}${name}`);\n    const resolve = await response.json();\n    return resolve.meals;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchAPICategory(category) {\n  try {\n    const response = await fetch(`${urlCategory}${category}`);\n    const resolve = await response.json();\n    return resolve.meals;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchAPICategoryFilter(category) {\n  try {\n    const response = await fetch(`${urlCategoryFilter}${category}`);\n    const resolve = await response.json();\n    return resolve.meals;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchAPIByID(id) {\n  try {\n    const response = await fetch(`${urlId}${id}`);\n    const resolve = await response.json();\n    return resolve.meals;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchFoodRandom() {\n  try {\n    const response = await fetch(`${urlFoodRandom}`);\n    const resolve = await response.json();\n    return resolve.meals[0].idMeal;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchFoodIngredient() {\n  try {\n    const response = await fetch(`${urlIngredients}`);\n    const resolve = await response.json();\n    return resolve.meals;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchFoodArea() {\n  try {\n    const response = await fetch(`${urlFoodArea}`);\n    const resolve = await response.json();\n    return resolve.meals;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchAPIFirstLetter(letter) {\n  try {\n    const response = await fetch(`${urlFirstLetter}${letter}`);\n    const resolve = await response.json();\n    return resolve.meals;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchFoodIngredientSearch(ingredient) {\n  try {\n    const response = await fetch(`${urlIngredientsFilter}${ingredient}`);\n    const resolve = await response.json();\n    return resolve.meals;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchSearchFoodByArea(area) {\n  try {\n    const response = await fetch(`${urlSearchFoodByArea}${area}`);\n    const resolve = await response.json();\n    return resolve.meals;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n","const urlIngredients = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\nconst urlName = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst urlCategory = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=';\nconst urlCategoryFilter = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=';\nconst urlFirstLetter = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?f=';\nconst urlId = 'https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=';\nconst drinkRandom = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\nconst urlIngredientsFilter = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=';\n\nexport async function fetchAPIName(name) {\n  try {\n    const response = await fetch(`${urlName}${name}`);\n    const resolve = await response.json();\n    return resolve.drinks;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchAPICategory(category) {\n  try {\n    const response = await fetch(`${urlCategory}${category}`);\n    const resolve = await response.json();\n    return resolve.drinks;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchAPICategoryFilter(category) {\n  try {\n    const response = await fetch(`${urlCategoryFilter}${category}`);\n    const resolve = await response.json();\n    return resolve.drinks;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchAPIByID(id) {\n  try {\n    const response = await fetch(`${urlId}${id}`);\n    const resolve = await response.json();\n    return resolve.drinks;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchDrinkRandom() {\n  try {\n    const response = await fetch(`${drinkRandom}`);\n    const resolve = await response.json();\n    return resolve.drinks[0].idDrink;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchDrinkIngredient() {\n  try {\n    const response = await fetch(`${urlIngredients}`);\n    const resolve = await response.json();\n    return resolve.drinks;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchDrinkIngredientSearch(ingredient) {\n  try {\n    const response = await fetch(`${urlIngredientsFilter}${ingredient}`);\n    const resolve = await response.json();\n    return resolve.drinks;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\nexport async function fetchAPIFirstLetter(letter) {\n  try {\n    const response = await fetch(`${urlFirstLetter}${letter}`);\n    const resolve = await response.json();\n    return resolve.drinks;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n","import { fetchAPIName, fetchAPICategory,\n  fetchAPICategoryFilter, fetchAPIByID,\n  fetchFoodRandom, fetchFoodIngredient,\n  fetchFoodArea, fetchFoodIngredientSearch,\n  fetchSearchFoodByArea } from '../../services/fetchAPIFood';\nimport { fetchAPIName as fetchRecomendations } from '../../services/fetchAPIDrink';\n\nexport const FOOD_LIST_SUCCESS = 'FOOD_LIST_SUCCESS';\nexport const FOOD_CATEGORY_SUCCESS = 'FOOD_CATEGORY_SUCCESS';\nexport const FOOD_LIST_CATEGORY_SUCCESS = 'FOOD_LIST_CATEGORY_SUCCESS';\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY';\nexport const FOOD_DETAILS_ID_SUCCESS = 'FOOD_DETAILS_ID_SUCCESS';\nexport const DRINK_RECOMENDATIONS_SUCCESS = 'DRINK_RECOMENDATIONS_SUCCESS';\nexport const FOOD_INGREDIENTS = 'FOOD_INGREDIENTS';\nexport const FOOD_AREA = 'FOOD_AREA';\nexport const SAVE_FAVORITES = 'SAVE_FAVORITES';\nexport const RENDER_FOOD_INGREDIENTS = 'RENDER_FOOD_INGREDIENTS';\nexport const SEARCH_FOOD_AREA = 'SEARCH_FOOD_AREA';\n\nexport const foodListSuccess = (payload) => ({\n  type: FOOD_LIST_SUCCESS,\n  payload,\n});\n\nexport const fetchFoodList = (name) => async (dispatch) => {\n  const returnFetch = await fetchAPIName(name);\n  dispatch(foodListSuccess(returnFetch));\n};\n\nconst foodCategorySuccess = (payload) => ({\n  type: FOOD_CATEGORY_SUCCESS,\n  payload,\n});\n\nexport const fetchFoodCategory = (category) => async (dispatch) => {\n  const returnFetch = await fetchAPICategory(category);\n  dispatch(foodCategorySuccess(returnFetch));\n};\n\nconst foodListByCategorySuccess = (payload) => ({\n  type: FOOD_LIST_CATEGORY_SUCCESS,\n  payload,\n});\n\nconst drinkRecomendations = (payload) => ({\n  type: DRINK_RECOMENDATIONS_SUCCESS,\n  payload,\n});\n\nexport const fetchDrinkRecomendations = (name) => async (dispatch) => {\n  const returnFetch = await fetchRecomendations(name);\n  dispatch(drinkRecomendations(returnFetch));\n};\n\nexport const updateCategory = (payload) => ({\n  type: UPDATE_CATEGORY,\n  payload,\n});\n\nexport const fetchFoodListByCategory = (category) => async (dispatch) => {\n  dispatch(updateCategory(category));\n  const returnFetch = await fetchAPICategoryFilter(category);\n  dispatch(foodListByCategorySuccess(returnFetch));\n};\n\nconst foodDetailsIDSuccess = (payload) => ({\n  type: FOOD_DETAILS_ID_SUCCESS,\n  payload,\n});\n\nexport const fetchFoodID = (id) => async (dispatch) => {\n  const returnFetch = await fetchAPIByID(id);\n  dispatch(foodDetailsIDSuccess(returnFetch));\n};\n\nexport const saveFavoritesRedux = (payload) => ({\n  type: SAVE_FAVORITES,\n  payload,\n});\n\nexport const saveFavoriteRecipe = (id) => async (dispatch) => {\n  const returnFetch = await fetchAPIByID(id);\n  const genericObj = {\n    id: returnFetch[0].idMeal,\n    type: 'comida',\n    area: returnFetch[0].strArea,\n    category: returnFetch[0].strCategory,\n    alcoholicOrNot: '',\n    name: returnFetch[0].strMeal,\n    image: returnFetch[0].strMealThumb,\n  };\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (favoriteRecipes === null) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([genericObj]));\n    dispatch(saveFavoritesRedux(genericObj));\n  } else {\n    const newFavoriteRecipes = [...favoriteRecipes, genericObj];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n    dispatch(saveFavoritesRedux(newFavoriteRecipes));\n  }\n};\n\nexport const removeFavoriteRecipe = (id) => (dispatch) => {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const newFavoriteRecipes = favoriteRecipes\n    .filter((item) => !(item.id === id && item.type === 'comida'));\n  localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n  dispatch(saveFavoritesRedux(newFavoriteRecipes));\n};\n\nexport const randomFoodId = () => async () => {\n  const returnFetch = await fetchFoodRandom();\n  return returnFetch;\n};\n\nconst searchFoodIngredient = (payload) => ({\n  type: FOOD_INGREDIENTS,\n  payload,\n});\n\nexport const foodIngredient = () => async (dispatch) => {\n  const returnFetch = await fetchFoodIngredient();\n  dispatch(searchFoodIngredient(returnFetch));\n};\n\nconst foodArea = (payload) => ({\n  type: FOOD_AREA,\n  payload,\n});\n\nexport const fetchFoodAreaSuccess = () => async (dispatch) => {\n  const returnFetch = await fetchFoodArea();\n  dispatch(foodArea(returnFetch));\n};\n\nexport const renderFoodIngredient = (payload) => ({\n  type: RENDER_FOOD_INGREDIENTS,\n  payload,\n});\n\nexport const fetchFoodIngredientList = (ingredient) => async (dispatch) => {\n  const returnFetch = await fetchFoodIngredientSearch(ingredient);\n  dispatch(foodListSuccess(returnFetch));\n};\n\nexport const saveDoneRecipe = (id) => async () => {\n  const returnFetch = await fetchAPIByID(id);\n  const date = new Date();\n  const genericObj = {\n    id: returnFetch[0].idMeal,\n    type: 'comida',\n    area: returnFetch[0].strArea,\n    category: returnFetch[0].strCategory,\n    alcoholicOrNot: '',\n    name: returnFetch[0].strMeal,\n    image: returnFetch[0].strMealThumb,\n    doneDate: date.toLocaleDateString('pt-BR'),\n    tags: returnFetch[0].strTags ? returnFetch[0].strTags.split(',') : '',\n  };\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  if (doneRecipes === null) {\n    localStorage.setItem('doneRecipes', JSON.stringify([genericObj]));\n  } else {\n    const newDoneRecipes = [...doneRecipes, genericObj];\n    localStorage.setItem('doneRecipes', JSON.stringify(newDoneRecipes));\n  }\n};\n\nexport const searchFoodByArea = (payload) => ({\n  type: SEARCH_FOOD_AREA,\n  payload,\n});\n\nexport const fetchSearchFoodArea = (area) => async (dispatch) => {\n  const returnFetch = await fetchSearchFoodByArea(area);\n  dispatch(searchFoodByArea(returnFetch));\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\nimport '../Footer.css';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer data-testid=\"footer\" className=\"footer\">\n        <Link to=\"/bebidas\">\n          <button type=\"button\" className=\"buttons\">\n            <img src={ drinkIcon } alt=\"drinkIcon\" data-testid=\"drinks-bottom-btn\" />\n          </button>\n        </Link>\n        <Link to=\"/explorar\">\n          <button type=\"button\" className=\"buttons\">\n            <img src={ exploreIcon } alt=\"exploreIcon\" data-testid=\"explore-bottom-btn\" />\n          </button>\n        </Link>\n        <Link to=\"/comidas\">\n          <button type=\"button\" className=\"buttons\">\n            <img src={ mealIcon } alt=\"mealIcon\" data-testid=\"food-bottom-btn\" />\n          </button>\n        </Link>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import { fetchAPIName, fetchFoodIngredientSearch,\n  fetchAPIFirstLetter } from '../../services/fetchAPIFood';\nimport { fetchDrinkIngredientSearch, fetchAPIFirstLetter as fetchDrinkFirstLetter,\n  fetchAPIName as fetchDrinkName } from '../../services/fetchAPIDrink';\n\nexport const UPDATE_QUERY = 'UPDATE_QUERY';\nexport const UPDATE_SELECTED_FILTER = 'UPDATE_SELECTED_FILTER';\nexport const SAVE_SEARCH_RESULTS = 'SAVE_SEARCH_RESULTS';\n\nexport const updateQuery = (payload) => ({\n  type: UPDATE_QUERY,\n  payload,\n});\n\nexport const updateSelectedFilter = (payload) => ({\n  type: UPDATE_SELECTED_FILTER,\n  payload,\n});\n\nconst saveSearchResults = (payload) => ({\n  type: SAVE_SEARCH_RESULTS,\n  payload,\n});\n\nexport const executeFoodSearch = (query, filter) => async (dispatch) => {\n  switch (filter) {\n  case 'ingredient': {\n    const ingredientsResult = await fetchFoodIngredientSearch(query);\n    await dispatch(saveSearchResults(ingredientsResult));\n    break;\n  }\n  default:\n  case 'name': {\n    const nameResults = await fetchAPIName(query);\n    await dispatch(saveSearchResults(nameResults));\n    break;\n  }\n  case 'firstLetter': {\n    const firstLetterResults = await fetchAPIFirstLetter(query);\n    await dispatch(saveSearchResults(firstLetterResults));\n    break;\n  }\n  }\n};\n\nexport const executeDrinkSearch = (query, filter) => async (dispatch) => {\n  switch (filter) {\n  case 'ingredient': {\n    const ingredientsResult = await fetchDrinkIngredientSearch(query);\n    await dispatch(saveSearchResults(ingredientsResult));\n    break;\n  }\n  default:\n  case 'name': {\n    const nameResults = await fetchDrinkName(query);\n    await dispatch(saveSearchResults(nameResults));\n    break;\n  }\n  case 'firstLetter': {\n    const firstLetterResults = await fetchDrinkFirstLetter(query);\n    console.log(firstLetterResults);\n    await dispatch(saveSearchResults(firstLetterResults));\n    break;\n  }\n  }\n};\n","import { fetchAPIName, fetchAPICategory,\n  fetchAPICategoryFilter, fetchAPIByID,\n  fetchDrinkRandom, fetchDrinkIngredient,\n  fetchDrinkIngredientSearch } from '../../services/fetchAPIDrink';\nimport { fetchAPIName as fetchRecomendations } from '../../services/fetchAPIFood';\n\nexport const DRINK_LIST_SUCCESS = 'DRINK_LIST_SUCCESS';\nexport const DRINK_CATEGORY_SUCCESS = 'DRINK_CATEGORY_SUCCESS';\nexport const DRINK_LIST_CATEGORY_SUCCESS = 'DRINK_LIST_CATEGORY_SUCCESS';\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY';\nexport const DRINK_DETAILS_ID_SUCCESS = 'DRINK_DETAILS_ID_SUCCESS';\nexport const FOOD_RECOMENDATIONS_SUCCESS = 'FOOD_RECOMENDATIONS_SUCCESS';\nexport const DRINK_INGREDIENTS = 'DRINK_INGREDIENTS';\nexport const SAVE_FAVORITES = 'SAVE_FAVORITES';\nexport const RENDER_DRINK_INGREDIENTS = 'RENDER_DRINK_INGREDIENTS';\n\nexport const drinkListSuccess = (payload) => ({\n  type: DRINK_LIST_SUCCESS,\n  payload,\n});\n\nexport const fetchDrinkList = (name) => async (dispatch) => {\n  const returnFetch = await fetchAPIName(name);\n  dispatch(drinkListSuccess(returnFetch));\n};\n\nconst drinkCategorySuccess = (payload) => ({\n  type: DRINK_CATEGORY_SUCCESS,\n  payload,\n});\n\nexport const fetchDrinkCategory = (category) => async (dispatch) => {\n  const returnFetch = await fetchAPICategory(category);\n  dispatch(drinkCategorySuccess(returnFetch));\n};\n\nconst drinkListByCategorySuccess = (payload) => ({\n  type: DRINK_LIST_CATEGORY_SUCCESS,\n  payload,\n});\n\nexport const updateCategory = (payload) => ({\n  type: UPDATE_CATEGORY,\n  payload,\n});\n\nexport const fetchDrinkListByCategory = (category) => async (dispatch) => {\n  dispatch(updateCategory(category));\n  const returnFetch = await fetchAPICategoryFilter(category);\n  dispatch(drinkListByCategorySuccess(returnFetch));\n};\n\nconst drinkDetailsIDSuccess = (payload) => ({\n  type: DRINK_DETAILS_ID_SUCCESS,\n  payload,\n});\n\nexport const fetchDrinkID = (id) => async (dispatch) => {\n  const returnFetch = await fetchAPIByID(id);\n  dispatch(drinkDetailsIDSuccess(returnFetch));\n};\n\nconst foodRecomendations = (payload) => ({\n  type: FOOD_RECOMENDATIONS_SUCCESS,\n  payload,\n});\n\nexport const fetchFoodRecomendations = (name) => async (dispatch) => {\n  const returnFetch = await fetchRecomendations(name);\n  dispatch(foodRecomendations(returnFetch));\n};\n\nexport const saveFavoritesRedux = (payload) => ({\n  type: SAVE_FAVORITES,\n  payload,\n});\n\nexport const saveFavoriteRecipe = (id) => async (dispatch) => {\n  const returnFetch = await fetchAPIByID(id);\n  const genericObj = {\n    id: returnFetch[0].idDrink,\n    type: 'bebida',\n    area: '',\n    category: returnFetch[0].strCategory,\n    alcoholicOrNot: returnFetch[0].strAlcoholic,\n    name: returnFetch[0].strDrink,\n    image: returnFetch[0].strDrinkThumb,\n  };\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (favoriteRecipes === null) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([genericObj]));\n    dispatch(saveFavoritesRedux(genericObj));\n  } else {\n    const newFavoriteRecipes = [...favoriteRecipes, genericObj];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n    dispatch(saveFavoritesRedux(newFavoriteRecipes));\n  }\n};\n\nexport const removeFavoriteRecipe = (id) => (dispatch) => {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const newFavoriteRecipes = favoriteRecipes\n    .filter((item) => !(item.id === id && item.type === 'bebida'));\n  localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n  dispatch(saveFavoritesRedux(newFavoriteRecipes));\n};\n\nexport const randomDrinkId = () => async () => {\n  const returnFetch = await fetchDrinkRandom();\n  return returnFetch;\n};\n\nconst searchDrinkIngredients = (payload) => ({\n  type: DRINK_INGREDIENTS,\n  payload,\n});\n\nexport const drinkIngredients = () => async (dispatch) => {\n  const returnFetch = await fetchDrinkIngredient();\n  dispatch(searchDrinkIngredients(returnFetch));\n};\n\nexport const renderDrinkIngredient = (payload) => ({\n  type: RENDER_DRINK_INGREDIENTS,\n  payload,\n});\n\nexport const fetchDrinkIngredientList = (ingredient) => async (dispatch) => {\n  const returnFetch = await fetchDrinkIngredientSearch(ingredient);\n  dispatch(drinkListSuccess(returnFetch));\n};\n\nexport const saveDoneRecipe = (id) => async () => {\n  const returnFetch = await fetchAPIByID(id);\n  const date = new Date();\n  const genericObj = {\n    id: returnFetch[0].idDrink,\n    type: 'bebida',\n    area: '',\n    category: returnFetch[0].strCategory,\n    alcoholicOrNot: returnFetch[0].strAlcoholic,\n    name: returnFetch[0].strDrink,\n    image: returnFetch[0].strDrinkThumb,\n    doneDate: date.toLocaleDateString('pt-BR'),\n    tags: returnFetch[0].strTags ? returnFetch[0].strTags.split(',') : '',\n  };\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  if (doneRecipes === null) {\n    localStorage.setItem('doneRecipes', JSON.stringify([genericObj]));\n  } else {\n    const newDoneRecipes = [...doneRecipes, genericObj];\n    localStorage.setItem('doneRecipes', JSON.stringify(newDoneRecipes));\n  }\n};\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Button, Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { executeFoodSearch, updateQuery, executeDrinkSearch,\n  updateSelectedFilter } from '../redux/actions/searchBarActions';\nimport { foodListSuccess } from '../redux/actions/foodActions';\nimport { drinkListSuccess } from '../redux/actions/drinkActions';\nimport '../SearchBar.css';\n\nclass SearchBar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      food: false,\n    };\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n    this.checkResults = this.checkResults.bind(this);\n  }\n\n  componentDidMount() {\n    this.checkHistory();\n  }\n\n  async handleSearchClick() {\n    const { query, selectedFilter, executeSearchFoodAction,\n      executeSearchDrinkAction } = this.props;\n    const { food } = this.state;\n    if (selectedFilter === 'firstLetter' && query.length !== 1) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n      return;\n    }\n    if (food) {\n      await executeSearchFoodAction(query, selectedFilter);\n    } else {\n      await executeSearchDrinkAction(query, selectedFilter);\n    }\n    this.checkResults();\n  }\n\n  checkResults() {\n    const { searchResults, history, saveFoodList, saveDrinkList } = this.props;\n    const { food } = this.state;\n    if (searchResults === null) {\n      console.log(searchResults);\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n      return;\n    } if (searchResults.length === 1) {\n      if (food) {\n        history.push(`/comidas/${searchResults[0].idMeal}`);\n      } else {\n        history.push(`/bebidas/${searchResults[0].idDrink}`);\n      }\n      return;\n    }\n    if (food) {\n      saveFoodList(searchResults);\n    } else {\n      saveDrinkList(searchResults);\n    }\n  }\n\n  checkHistory() {\n    const { history } = this.props;\n    this.setState({\n      food: history.location.pathname.includes('comidas'),\n    });\n  }\n\n  render() {\n    const { queryAction, selectedFilterAction, query, history } = this.props;\n    console.log(history.location.pathname.includes('comidas'));\n    return (\n      <Form className=\"searchBar\">\n        <Form.Group class=\"mb-3\">\n          <Form.Control\n            type=\"text\"\n            data-testid=\"search-input\"\n            placeholder=\"Faça sua pequisa\"\n            value={ query }\n            onChange={ ({ target }) => queryAction(target.value) }\n          />\n          <label htmlFor=\"search-ingredient\">\n            <input\n              className=\"input\"\n              name=\"filter\"\n              id=\"search-ingredient\"\n              value=\"ingredient\"\n              type=\"radio\"\n              data-testid=\"ingredient-search-radio\"\n              onChange={ () => selectedFilterAction('ingredient') }\n            />\n            Ingrediente\n          </label>\n          <label htmlFor=\"search-nome\">\n            <input\n              className=\"input\"\n              name=\"filter\"\n              id=\"search-nome\"\n              value=\"name\"\n              type=\"radio\"\n              data-testid=\"name-search-radio\"\n              onChange={ () => selectedFilterAction('name') }\n            />\n            Nome\n          </label>\n          <label htmlFor=\"search-first-letter\">\n            <input\n              className=\"input\"\n              name=\"filter\"\n              id=\"search-first-letter\"\n              value=\"firstLetter\"\n              type=\"radio\"\n              data-testid=\"first-letter-search-radio\"\n              onChange={ () => selectedFilterAction('firstLetter') }\n            />\n            Primeira Letra\n          </label>\n          <Button\n            className=\"searchBar-button\"\n            variant=\"outline-dark\"\n            type=\"button\"\n            data-testid=\"exec-search-btn\"\n            onClick={ () => this.handleSearchClick() }\n          >\n            Buscar\n          </Button>\n\n        </Form.Group>\n\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  query: state.searchBarReducer.query,\n  selectedFilter: state.searchBarReducer.selectedFilter,\n  searchResults: state.searchBarReducer.searchResults,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  queryAction: (query) => dispatch(updateQuery(query)),\n  selectedFilterAction: (filter) => dispatch(updateSelectedFilter(filter)),\n  executeSearchFoodAction: (query, filter) => dispatch(executeFoodSearch(query, filter)),\n  executeSearchDrinkAction:\n   (query, filter) => dispatch(executeDrinkSearch(query, filter)),\n  saveFoodList: (results) => dispatch(foodListSuccess(results)),\n  saveDrinkList: (results) => dispatch(drinkListSuccess(results)),\n});\n\nSearchBar.propTypes = {\n  history: PropTypes.Object,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SearchBar));\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBar from './SearchBar';\nimport '../Header.css';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showInput: false,\n    };\n    this.renderSearchBar = this.renderSearchBar.bind(this);\n  }\n\n  renderSearchButton() {\n    return (\n      <button\n        className=\"button\"\n        onClick={ this.renderSearchBar }\n        type=\"button\"\n      >\n        <img src={ searchIcon } alt=\"searchIcon\" data-testid=\"search-top-btn\" />\n      </button>\n    );\n  }\n\n  renderSearchBar() {\n    this.setState(({ showInput }) => ({\n      showInput: !showInput,\n    }));\n  }\n\n  render() {\n    const { title, search } = this.props;\n    const { showInput } = this.state;\n    return (\n      <header className=\"header\">\n        <Link to=\"/perfil\">\n          <button type=\"button\" className=\"button\">\n            <img src={ profileIcon } alt=\"profileIcon\" data-testid=\"profile-top-btn\" />\n          </button>\n        </Link>\n        <h1\n          data-testid=\"page-title\"\n          className=\"title-header\"\n        >\n          { title }\n        </h1>\n        { search ? this.renderSearchButton()\n          : <button type=\"button\" className=\"button-1\">X</button> }\n        { showInput ? <SearchBar /> : '' }\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  location: PropTypes.Object,\n}.isRequired;\n\nexport default withRouter(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass FoodCards extends Component {\n  render() {\n    const { foodCardsList } = this.props;\n    return (\n      <ul>\n        { foodCardsList.map((item, index) => (\n          <li key={ item.idMeal } data-testid={ `${index}-recipe-card` }>\n            <Link to={ `/comidas/${item.idMeal}` }>\n              <img\n                height=\"200px\"\n                width=\"200px\"\n                data-testid={ `${index}-card-img` }\n                src={ item.strMealThumb }\n                alt=\"Imagem da receita pronta\"\n              />\n              <h3 data-testid={ `${index}-card-name` }>{ item.strMeal }</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodCardsList: state.foodReducer.foodCardsList,\n});\n\nFoodCards.propTypes = {\n  foodCardsList: PropTypes.array,\n}.isRequired;\n\nexport default connect(mapStateToProps, null)(FoodCards);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { fetchFoodListByCategory, updateCategory, fetchFoodList,\n} from '../redux/actions/foodActions';\n\nclass FoodCategories extends Component {\n  constructor() {\n    super();\n    this.filterByAll = this.filterByAll.bind(this);\n    this.filterByCategory = this.filterByCategory.bind(this);\n  }\n\n  filterByAll() {\n    const { actionFetchFoodList, actionUpdateCategory } = this.props;\n    actionUpdateCategory('All');\n    actionFetchFoodList('');\n  }\n\n  filterByCategory(category) {\n    const { actionFetchFoodByCategory, selectedCategory } = this.props;\n    if (category === selectedCategory) {\n      this.filterByAll();\n    } else {\n      actionFetchFoodByCategory(category);\n    }\n  }\n\n  render() {\n    const { foodCategories } = this.props;\n    return (\n      <div className=\"category-div\">\n        <Button\n          size=\"sm\"\n          variant=\"outline-dark\"\n          className=\"category-buttons\"\n          type=\"button\"\n          name=\"category\"\n          data-testid=\"All-category-filter\"\n          onClick={ this.filterByAll }\n        >\n          All\n        </Button>\n        { foodCategories.map((item) => (\n          <Button\n            size=\"sm\"\n            variant=\"outline-dark\"\n            className=\"category-buttons\"\n            type=\"button\"\n            name=\"category\"\n            key={ item.strCategory }\n            data-testid={ `${item.strCategory}-category-filter` }\n            onClick={ () => this.filterByCategory(item.strCategory) }\n          >\n            { item.strCategory }\n          </Button>\n        )) }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodCategories: state.foodReducer.foodCategoriesList,\n  selectedCategory: state.foodReducer.selectedCategory,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionFetchFoodByCategory: (category) => dispatch(fetchFoodListByCategory(category)),\n  actionFetchFoodList: (name) => dispatch(fetchFoodList(name)),\n  actionUpdateCategory: (category) => dispatch(updateCategory(category)),\n});\n\nFoodCategories.propTypes = {\n  actionFetchFoodList: PropTypes.func,\n  actionFetchFoodByCategory: PropTypes.func,\n  actionUpdateCategory: PropTypes.func,\n  foodCategories: PropTypes.array,\n  selectedCategory: PropTypes.array,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodCategories);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport '../FoodsAndDrinks.css';\n\nclass DrinkCards extends Component {\n  render() {\n    const { drinkCardsList } = this.props;\n    return (\n      <ul>\n        { drinkCardsList.map((item, index) => (\n          <Card\n            style={ { width: '14rem' } }\n            key={ item.idDrink }\n            data-testid={ `${index}-recipe-card` }\n            className=\"recipes-cards\"\n          >\n            <Link to={ `/bebidas/${item.idDrink}` }>\n              <Card.Img\n                className=\"img-card\"\n                variant=\"top\"\n                height=\"200px\"\n                width=\"200px\"\n                data-testid={ `${index}-card-img` }\n                src={ item.strDrinkThumb }\n                alt=\"Imagem da bebida pronta\"\n              />\n              <Card.Body>\n                <Card.Title\n                  data-testid={ `${index}-card-name` }\n                  className=\"title\"\n                >\n                  { item.strDrink }\n                </Card.Title>\n              </Card.Body>\n            </Link>\n          </Card>\n        ))}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  drinkCardsList: state.drinkReducer.drinkCardsList,\n});\n\nDrinkCards.propTypes = {\n  drinkCardsList: PropTypes.array,\n}.isRequired;\n\nexport default connect(mapStateToProps, null)(DrinkCards);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { fetchDrinkListByCategory, updateCategory, fetchDrinkList,\n} from '../redux/actions/drinkActions';\n\nclass DrinkCategories extends Component {\n  constructor() {\n    super();\n    this.filterByAll = this.filterByAll.bind(this);\n    this.filterByCategory = this.filterByCategory.bind(this);\n  }\n\n  filterByAll() {\n    const { actionFetchDrinkList, actionUpdateCategory } = this.props;\n    actionUpdateCategory('All');\n    actionFetchDrinkList('');\n  }\n\n  filterByCategory(category) {\n    const { actionFetchDrinkByCategory, selectedCategory } = this.props;\n    if (category === selectedCategory) {\n      this.filterByAll();\n    } else {\n      actionFetchDrinkByCategory(category);\n    }\n  }\n\n  render() {\n    const { drinkCategories } = this.props;\n    return (\n      <div className=\"category-div\">\n        <Button\n          size=\"sm\"\n          variant=\"outline-dark\"\n          className=\"category-drink-buttons\"\n          type=\"button\"\n          name=\"category\"\n          data-testid=\"All-category-filter\"\n          onClick={ this.filterByAll }\n        >\n          All\n        </Button>\n        { drinkCategories.map((item) => (\n          <Button\n            size=\"sm\"\n            variant=\"outline-dark\"\n            className=\"category-drink-buttons\"\n            type=\"button\"\n            name=\"category\"\n            key={ item.strCategory }\n            data-testid={ `${item.strCategory}-category-filter` }\n            onClick={ () => this.filterByCategory(item.strCategory) }\n          >\n            { item.strCategory }\n          </Button>\n        )) }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  drinkCategories: state.drinkReducer.drinkCategoriesList,\n  selectedCategory: state.drinkReducer.selectedCategory,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionFetchDrinkByCategory: (category) => dispatch(fetchDrinkListByCategory(category)),\n  actionFetchDrinkList: (name) => dispatch(fetchDrinkList(name)),\n  actionUpdateCategory: (category) => dispatch(updateCategory(category)),\n});\n\nDrinkCategories.propTypes = {\n  actionFetchDrinkList: PropTypes.func,\n  actionFetchDrinkByCategory: PropTypes.func,\n  actionUpdateCategory: PropTypes.func,\n  drinkCategories: PropTypes.array,\n  selectedCategory: PropTypes.array,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrinkCategories);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport '../FoodsAndDrinks.css';\n\nclass FoodCard extends Component {\n  render() {\n    const { food, index } = this.props;\n    return (\n      <Card\n        style={ { width: '14rem' } }\n        data-testid={ `${index}-recipe-card` }\n        className=\"recipes-cards\"\n      >\n        <Link to={ `/comidas/${food.idMeal}` }>\n          <Card.Img\n            className=\"img-card\"\n            variant=\"top\"\n            height=\"200px\"\n            width=\"200px\"\n            data-testid={ `${index}-card-img` }\n            src={ food.strMealThumb }\n            alt=\"Imagem da receita pronta\"\n          />\n          <Card.Body>\n            <Card.Title\n              data-testid={ `${index}-card-name` }\n              className=\"title\"\n            >\n              { food.strMeal }\n            </Card.Title>\n          </Card.Body>\n        </Link>\n      </Card>\n    );\n  }\n}\n\nFoodCard.propTypes = {\n  food: PropTypes.object,\n  index: PropTypes.number,\n}.isRequired;\n\nexport default FoodCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport '../FoodsAndDrinks.css';\n\nclass DrinkCard extends Component {\n  render() {\n    const { drink, index } = this.props;\n    return (\n      <Card\n        style={ { width: '14rem' } }\n        data-testid={ `${index}-recipe-card` }\n        className=\"recipes-cards\"\n      >\n        <Link to={ `/bebidas/${drink.idDrink}` }>\n          <Card.Img\n            className=\"img-card\"\n            variant=\"top\"\n            height=\"200px\"\n            width=\"200px\"\n            data-testid={ `${index}-card-img` }\n            src={ drink.strDrinkThumb }\n            alt=\"Imagem da bebida pronta\"\n          />\n          <Card.Body>\n            <Card.Title\n              data-testid={ `${index}-card-name` }\n              className=\"title\"\n            >\n              { drink.strDrink }\n            </Card.Title>\n          </Card.Body>\n        </Link>\n      </Card>\n    );\n  }\n}\n\nDrinkCard.propTypes = {\n  drink: PropTypes.object,\n  index: PropTypes.number,\n}.isRequired;\n\nexport default DrinkCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\n\nconst copy = require('clipboard-copy');\n\nclass ShareButton extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      clipboardMessage: false,\n    };\n  }\n\n  clipBoard() {\n    const { id } = this.props;\n    copy(`http://localhost:3000/comidas/${id}`);\n    this.setState({\n      clipboardMessage: true,\n    });\n  }\n\n  render() {\n    const { clipboardMessage } = this.state;\n    const { test } = this.props;\n    return (\n      <>\n        <p>{ clipboardMessage ? 'Link copiado!' : '' }</p>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={ () => this.clipBoard() }\n        >\n          <img\n            data-testid={ test }\n            src={ shareIcon }\n            alt=\"share icon\"\n            width=\"120%\"\n          />\n        </button>\n      </>\n    );\n  }\n}\n\nShareButton.propTypes = {\n  id: PropTypes.string,\n  test: PropTypes.string,\n}.isRequired;\n\nexport default ShareButton;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { saveFavoriteRecipe, removeFavoriteRecipe } from '../redux/actions/foodActions';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nclass FavoriteButton extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      whiteHeart: true,\n    };\n\n    this.handleFavoriteClick = this.handleFavoriteClick.bind(this);\n    this.setFavoriteIcon = this.setFavoriteIcon.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleHeart();\n    const { id } = this.props;\n    const favoriteMeals = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favoriteMeals && favoriteMeals.find((item) => item.id === id)) {\n      this.setFavoriteIcon();\n    }\n  }\n\n  componentDidUpdate() {\n    this.handleHeart();\n  }\n\n  handleHeart() {\n    const { id } = this.props;\n    const { whiteHeart } = this.state;\n    const favoriteMeals = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (whiteHeart && favoriteMeals && favoriteMeals.find((item) => item.id === id)) {\n      this.setFavoriteIcon();\n    }\n  }\n\n  handleFavoriteClick() {\n    const { favoriteRecipes, id, removeRecipes } = this.props;\n    const { whiteHeart } = this.state;\n    if (whiteHeart === true) {\n      favoriteRecipes(id);\n    }\n    if (whiteHeart === false) {\n      removeRecipes(id);\n    }\n    this.setState((prevState) => ({\n      whiteHeart: !prevState.whiteHeart,\n    }));\n  }\n\n  setFavoriteIcon() {\n    this.setState({\n      whiteHeart: false,\n    });\n  }\n\n  render() {\n    const { whiteHeart } = this.state;\n    const { test } = this.props;\n    return (\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={ () => this.handleFavoriteClick() }\n      >\n        <img\n          data-testid={ test }\n          src={ whiteHeart ? whiteHeartIcon : blackHeartIcon }\n          alt=\"favorite food button\"\n          width=\"120%\"\n        />\n      </button>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  favoriteRecipes: (id) => dispatch(saveFavoriteRecipe(id)),\n  removeRecipes: (id) => dispatch(removeFavoriteRecipe(id)),\n});\n\nFavoriteButton.propTypes = {\n  id: PropTypes.number,\n  favoriteRecipes: PropTypes.func,\n  removeRecipes: PropTypes.func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(FavoriteButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Card from 'react-bootstrap/Card';\nimport ShareButton from './ShareButton';\nimport FavoriteButton from './FavoriteButton';\n// import '../FoodAndDrinkDetails.css';\n\nclass FoodDetailsCard extends Component {\n  render() {\n    const { foodDetails } = this.props;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(foodDetails));\n    if (array[0].length > 0) {\n      ingredients = array[0].filter((item) => item[0].includes('strIngredient'))\n        .filter((item) => item[1]).map((item) => item[1]);\n      measurements = array[0].filter((item) => item[0].includes('strMeasure'))\n        .filter((item) => item[1]).map((item) => item[1]);\n    }\n    return (\n      <div className=\"div-details\">\n        <Card\n          style={ { width: '16rem' } }\n          className=\"food-details-card\"\n        >\n          <Card.Img\n            variant=\"top\"\n            height=\"250px\"\n            width=\"300px\"\n            data-testid=\"recipe-photo\"\n            src={ foodDetails.strMealThumb }\n            alt=\"Foto do prato\"\n          />\n          <Card.Body>\n            <Card.Title\n              className=\"recipe-title\"\n              data-testid=\"recipe-title\"\n            >\n              { foodDetails.strMeal }\n            </Card.Title>\n            <ShareButton test=\"share-btn\" id={ foodDetails.idMeal } />\n            <FavoriteButton test=\"favorite-btn\" id={ foodDetails.idMeal } />\n            <p data-testid=\"recipe-category\">{ foodDetails.strCategory }</p>\n            <ul>\n              { ingredients\n                .map((item, index) => (item\n                  ? (\n                    <li\n                      data-testid={ `${index}-ingredient-name-and-measure` }\n                      key={ index }\n                    >\n                      {`${item} - ${measurements[index]}`}\n                    </li>)\n                  : ''))}\n            </ul>\n            <p\n              data-testid=\"instructions\"\n              className=\"instructions\"\n            >\n              { foodDetails.strInstructions }\n            </p>\n          </Card.Body>\n          <iframe\n            data-testid=\"video\"\n            width=\"300px\"\n            height=\"250px\"\n            title=\"Vídeo da Receita\"\n            src={ foodDetails.strYoutube }\n          />\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodDetails: state.foodReducer.foodDetails,\n});\n\nFoodDetailsCard.propTypes = {\n  foodDetails: PropTypes.shape({\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    strYoutube: PropTypes.string,\n    idMeal: PropTypes.string,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps)(FoodDetailsCard);\n","import React, { Component } from 'react';\nimport PropTypes, { object } from 'prop-types';\nimport { connect } from 'react-redux';\nimport Carousel from 'react-bootstrap/Carousel';\nimport '../FoodAndDrinkDetails.css';\n\nclass DrinkRecomendation extends Component {\n  render() {\n    const { drinkRecomendations } = this.props;\n    return (\n      <div className=\"carousel\">\n        <Carousel variant=\"dark\">\n          <Carousel.Item>\n            <img\n              className=\"d-block w-75 img-carousel\"\n              data-testid=\"0-recomendation-card\"\n              src={ drinkRecomendations.length && drinkRecomendations[0].strDrinkThumb }\n              alt=\"First slide\"\n            />\n            <h3\n              data-testid=\"0-recomendation-title\"\n              className=\"title-recomendation\"\n            >\n              {drinkRecomendations.length && drinkRecomendations[0].strDrink}\n            </h3>\n            <img\n              className=\"d-block w-75 img-carousel\"\n              data-testid=\"1-recomendation-card\"\n              src={ drinkRecomendations.length && drinkRecomendations[1].strDrinkThumb }\n              alt=\"First slide\"\n            />\n            <h3\n              data-testid=\"1-recomendation-title\"\n              className=\"title-recomendation\"\n            >\n              {drinkRecomendations.length && drinkRecomendations[1].strDrink}\n            </h3>\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"d-block w-75 img-carousel\"\n              data-testid=\"2-recomendation-card\"\n              src={ drinkRecomendations.length && drinkRecomendations[2].strDrinkThumb }\n              alt=\"First slide\"\n            />\n            <h3\n              data-testid=\"2-recomendation-title\"\n              className=\"title-recomendation\"\n            >\n              {drinkRecomendations.length && drinkRecomendations[2].strDrink}\n            </h3>\n            <img\n              className=\"d-block w-75 img-carousel\"\n              data-testid=\"3-recomendation-card\"\n              src={ drinkRecomendations.length && drinkRecomendations[3].strDrinkThumb }\n              alt=\"First slide\"\n            />\n            <h3\n              data-testid=\"3-recomendation-title\"\n              className=\"title-recomendation\"\n            >\n              {drinkRecomendations.length && drinkRecomendations[3].strDrink}\n            </h3>\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"d-block w-75 img-carousel\"\n              data-testid=\"4-recomendation-card\"\n              src={ drinkRecomendations.length && drinkRecomendations[4].strDrinkThumb }\n              alt=\"First slide\"\n            />\n            <h3\n              data-testid=\"4-recomendation-title\"\n              className=\"title-recomendation\"\n            >\n              {drinkRecomendations.length && drinkRecomendations[4].strDrink}\n            </h3>\n            <img\n              className=\"d-block w-75 img-carousel\"\n              data-testid=\"5-recomendation-card\"\n              src={ drinkRecomendations.length && drinkRecomendations[5].strDrinkThumb }\n              alt=\"First slide\"\n            />\n            <h3\n              data-testid=\"5-recomendation-title\"\n              className=\"title-recomendation\"\n            >\n              {drinkRecomendations.length && drinkRecomendations[5].strDrink}\n            </h3>\n          </Carousel.Item>\n        </Carousel>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  drinkRecomendations: state.foodReducer.drinkRecomendations,\n});\n\nDrinkRecomendation.propTypes = {\n  drinkRecomendations: PropTypes.arrayOf(object),\n}.isRequired;\n\nexport default connect(mapStateToProps)(DrinkRecomendation);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\n\nconst copy = require('clipboard-copy');\n\nclass DrinkShareButton extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      clipboardMessage: false,\n    };\n  }\n\n  clipBoard() {\n    const { id } = this.props;\n    copy(`http://localhost:3000/bebidas/${id}`);\n    this.setState({\n      clipboardMessage: true,\n    });\n  }\n\n  render() {\n    const { clipboardMessage } = this.state;\n    const { test } = this.props;\n    return (\n      <>\n        <p>{ clipboardMessage ? 'Link copiado!' : '' }</p>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={ () => this.clipBoard() }\n        >\n          <img\n            data-testid={ test }\n            src={ shareIcon }\n            alt=\"share icon\"\n            width=\"120%\"\n          />\n        </button>\n      </>\n    );\n  }\n}\n\nDrinkShareButton.propTypes = {\n  id: PropTypes.string,\n  test: PropTypes.string,\n}.isRequired;\n\nexport default DrinkShareButton;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { saveFavoriteRecipe, removeFavoriteRecipe } from '../redux/actions/drinkActions';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nclass DrinkFavoriteButton extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      whiteHeart: true,\n    };\n\n    this.handleFavoriteClick = this.handleFavoriteClick.bind(this);\n    this.setFavoriteIcon = this.setFavoriteIcon.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props;\n    const { whiteHeart } = this.state;\n    const favoriteMeals = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (whiteHeart && favoriteMeals && favoriteMeals.find((item) => item.id === id)) {\n      this.setFavoriteIcon();\n    }\n  }\n\n  componentDidUpdate() {\n    const { id } = this.props;\n    const { whiteHeart } = this.state;\n    const favoriteCocktails = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (whiteHeart && favoriteCocktails\n      && favoriteCocktails.find((item) => item.id === id)) {\n      this.setFavoriteIcon();\n    }\n  }\n\n  handleFavoriteClick() {\n    const { favoriteRecipes, id, removeRecipes } = this.props;\n    const { whiteHeart } = this.state;\n    if (whiteHeart === true) {\n      favoriteRecipes(id);\n    }\n    if (whiteHeart === false) {\n      removeRecipes(id);\n    }\n    this.setState((prevState) => ({\n      whiteHeart: !prevState.whiteHeart,\n    }));\n  }\n\n  setFavoriteIcon() {\n    this.setState({\n      whiteHeart: false,\n    });\n  }\n\n  render() {\n    const { whiteHeart } = this.state;\n    const { test } = this.props;\n    return (\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={ () => this.handleFavoriteClick() }\n      >\n        <img\n          data-testid={ test }\n          src={ whiteHeart ? whiteHeartIcon : blackHeartIcon }\n          alt=\"favorite food button\"\n          width=\"120%\"\n        />\n      </button>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  favoriteRecipes: (id) => dispatch(saveFavoriteRecipe(id)),\n  removeRecipes: (id) => dispatch(removeFavoriteRecipe(id)),\n});\n\nDrinkFavoriteButton.propTypes = {\n  id: PropTypes.number,\n  favoriteRecipes: PropTypes.func,\n  removeRecipes: PropTypes.func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(DrinkFavoriteButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Card from 'react-bootstrap/Card';\nimport DrinkShareButton from './DrinkShareButton';\nimport DrinkFavoriteButton from './DrinkFavoriteButton';\nimport '../FoodAndDrinkDetails.css';\n\nclass DrinkDetailsCard extends Component {\n  render() {\n    const { drinkDetails } = this.props;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(drinkDetails));\n    if (array[0].length > 0) {\n      ingredients = array[0].filter((item) => item[0].includes('strIngredient'))\n        .filter((item) => item[1]).map((item) => item[1]);\n      measurements = array[0].filter((item) => item[0].includes('strMeasure'))\n        .filter((item) => item[1]).map((item) => item[1]);\n    }\n    return (\n      <div className=\"div-details\">\n        <Card\n          style={ { width: '16rem' } }\n          className=\"drink-details-card\"\n        >\n          <Card.Img\n            variant=\"top\"\n            height=\"250px\"\n            width=\"300px\"\n            data-testid=\"recipe-photo\"\n            src={ drinkDetails.strDrinkThumb }\n            alt=\"Foto do prato\"\n          />\n          <Card.Body>\n            <Card.Title\n              className=\"recipe-title\"\n              data-testid=\"recipe-title\"\n            >\n              { drinkDetails.strDrink }\n            </Card.Title>\n            <DrinkShareButton test=\"share-btn\" id={ drinkDetails.idDrink } />\n            <DrinkFavoriteButton test=\"favorite-btn\" id={ drinkDetails.idDrink } />\n            <p data-testid=\"recipe-category\">{ drinkDetails.strAlcoholic }</p>\n            <ul>\n              { ingredients\n                .map((item, index) => (item\n                  ? (\n                    <li\n                      data-testid={ `${index}-ingredient-name-and-measure` }\n                      key={ index }\n                    >\n                      {`${item} - ${measurements[index]}`}\n                    </li>)\n                  : ''))}\n            </ul>\n            <p\n              data-testid=\"instructions\"\n            >\n              { drinkDetails.strInstructions }\n            </p>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  drinkDetails: state.drinkReducer.drinkDetails,\n});\n\nDrinkDetailsCard.propTypes = {\n  drinkDetails: PropTypes.shape({\n    strDrinkThumb: PropTypes.string,\n    strDrink: PropTypes.string,\n    strAlcoholic: PropTypes.string,\n    strInstructions: PropTypes.string,\n    idDrink: PropTypes.string,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps)(DrinkDetailsCard);\n","import React, { Component } from 'react';\nimport PropTypes, { object } from 'prop-types';\nimport { connect } from 'react-redux';\nimport Carousel from 'react-bootstrap/Carousel';\nimport '../FoodAndDrinkDetails.css';\n\nclass FoodRecomendation extends Component {\n  render() {\n    const { foodRecomendations } = this.props;\n    return (\n      <div className=\"carousel\">\n        <Carousel>\n          <Carousel.Item>\n            <img\n              className=\"d-block w-75 img-carousel\"\n              data-testid=\"0-recomendation-card\"\n              src={ foodRecomendations.length && foodRecomendations[0].strMealThumb }\n              alt=\"First slide\"\n            />\n            <h3\n              data-testid=\"0-recomendation-title\"\n              className=\"title-recomendation\"\n            >\n              {foodRecomendations.length && foodRecomendations[0].strMeal}\n            </h3>\n            <img\n              className=\"d-block w-75 img-carousel\"\n              data-testid=\"1-recomendation-card\"\n              src={ foodRecomendations.length && foodRecomendations[1].strMealThumb }\n              alt=\"First slide\"\n            />\n            <h3\n              data-testid=\"1-recomendation-title\"\n              className=\"title-recomendation\"\n            >\n              {foodRecomendations.length && foodRecomendations[1].strMeal}\n            </h3>\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"d-block w-75 img-carousel\"\n              data-testid=\"2-recomendation-card\"\n              src={ foodRecomendations.length && foodRecomendations[2].strMealThumb }\n              alt=\"First slide\"\n            />\n            <h3\n              data-testid=\"2-recomendation-title\"\n              className=\"title-recomendation\"\n            >\n              {foodRecomendations.length && foodRecomendations[2].strMeal}\n            </h3>\n            <img\n              className=\"d-block w-75 img-carousel\"\n              data-testid=\"3-recomendation-card\"\n              src={ foodRecomendations.length && foodRecomendations[3].strMealThumb }\n              alt=\"First slide\"\n            />\n            <h3\n              data-testid=\"3-recomendation-title\"\n              className=\"title-recomendation\"\n            >\n              {foodRecomendations.length && foodRecomendations[3].strMeal}\n            </h3>\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"d-block w-75 img-carousel\"\n              data-testid=\"4-recomendation-card\"\n              src={ foodRecomendations.length && foodRecomendations[4].strMealThumb }\n              alt=\"First slide\"\n            />\n            <h3\n              data-testid=\"4-recomendation-title\"\n              className=\"title-recomendation\"\n            >\n              {foodRecomendations.length && foodRecomendations[4].strMeal}\n            </h3>\n            <img\n              className=\"d-block w-75 img-carousel\"\n              data-testid=\"5-recomendation-card\"\n              src={ foodRecomendations.length && foodRecomendations[5].strMealThumb }\n              alt=\"First slide\"\n            />\n            <h3\n              data-testid=\"5-recomendation-title\"\n              className=\"title-recomendation\"\n            >\n              {foodRecomendations.length && foodRecomendations[5].strMeal}\n            </h3>\n          </Carousel.Item>\n        </Carousel>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodRecomendations: state.drinkReducer.foodRecomendations,\n});\n\nFoodRecomendation.propTypes = {\n  foodRecomendations: PropTypes.arrayOf(object),\n}.isRequired;\n\nexport default connect(mapStateToProps)(FoodRecomendation);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport '../StartRecipe.css';\n\nclass StartRecipe extends Component {\n  checkRecipesStatus() {\n    const { id } = this.props;\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (doneRecipes && doneRecipes.find((item) => item.id === id)) {\n      return '';\n    }\n    if (recipesInProgress\n      && Object.prototype.hasOwnProperty.call(recipesInProgress.meals, id)) {\n      return (\n        <Link to={ `/comidas/${id}/in-progress` }>\n          <Button\n            className=\"start-recipe\"\n            data-testid=\"start-recipe-btn\"\n            variant=\"warning\"\n          >\n            Continuar Receita\n          </Button>\n        </Link>\n      );\n    }\n    return (\n      <Link to={ `/comidas/${id}/in-progress` }>\n        <Button\n          className=\"start-recipe\"\n          data-testid=\"start-recipe-btn\"\n          variant=\"warning\"\n        >\n          Iniciar Receita\n        </Button>\n      </Link>\n    );\n  }\n\n  render() {\n    return (\n      this.checkRecipesStatus()\n    );\n  }\n}\n\nStartRecipe.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default StartRecipe;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport '../StartRecipe.css';\n\nclass DrinkStartRecipe extends Component {\n  checkRecipesStatus() {\n    const { id } = this.props;\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (doneRecipes && doneRecipes.find((item) => item.id === id)) {\n      return '';\n    }\n    if (recipesInProgress\n      && Object.prototype.hasOwnProperty.call(recipesInProgress.cocktails, id)) {\n      return (\n        <Link to={ `/bebidas/${id}/in-progress` }>\n          <Button\n            className=\"start-recipe\"\n            data-testid=\"start-recipe-btn\"\n            variant=\"warning\"\n          >\n            Continuar Receita\n          </Button>\n        </Link>\n      );\n    }\n    return (\n      <Link to={ `/bebidas/${id}/in-progress` }>\n        <Button\n          className=\"start-recipe\"\n          data-testid=\"start-recipe-btn\"\n          variant=\"warning\"\n        >\n          Iniciar Receita\n        </Button>\n      </Link>\n    );\n  }\n\n  render() {\n    return (\n      this.checkRecipesStatus()\n    );\n  }\n}\n\nDrinkStartRecipe.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default DrinkStartRecipe;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchFoodCategory, fetchFoodList,\n  fetchFoodIngredientList, renderFoodIngredient } from '../redux/actions/foodActions';\nimport { FoodCard, FoodCategories, Header, Footer } from '../components';\n\nclass Foods extends Component {\n  componentDidMount() {\n    const { actionFetchFoodList, actionFetchCategories,\n      ingredientQuery, actionFetchIngredientFoodList,\n      actionFoodIngredient } = this.props;\n    if (ingredientQuery === '') {\n      actionFetchFoodList('');\n    } else {\n      actionFetchIngredientFoodList(ingredientQuery);\n      actionFoodIngredient('');\n    }\n    actionFetchCategories('list');\n  }\n\n  render() {\n    const { foodCardsList } = this.props;\n    return (\n      <main className=\"foods\">\n        <Header title=\"Comidas\" search />\n        <FoodCategories />\n        <div className=\"card-list-container\">\n          { foodCardsList.map((item, index) => (\n            <FoodCard key={ item.idMeal } food={ item } index={ index } />)) }\n        </div>\n        <Footer />\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodCardsList: state.foodReducer.foodCardsList,\n  ingredientQuery: state.foodReducer.ingredientFoodQuery,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionFetchFoodList: (name) => dispatch(fetchFoodList(name)),\n  actionFetchCategories: (category) => dispatch(fetchFoodCategory(category)),\n  actionFetchIngredientFoodList: (ingredient) => {\n    dispatch(fetchFoodIngredientList(ingredient));\n  },\n  actionFoodIngredient: (ingredient) => dispatch(renderFoodIngredient(ingredient)),\n});\n\nFoods.propTypes = {\n  actionFetchFoodList: PropTypes.func,\n  actionFetchCategories: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Foods);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchDrinkCategory, fetchDrinkList,\n  fetchDrinkIngredientList, renderDrinkIngredient } from '../redux/actions/drinkActions';\nimport { DrinkCategories, Header, Footer, DrinkCard } from '../components';\n\nclass Drinks extends Component {\n  componentDidMount() {\n    const { actionFetchDrinkList, actionFetchCategories,\n      actionFetchIngredientDrinkList, ingredientDrinkQuery,\n      actionDrinkIngredient } = this.props;\n    if (ingredientDrinkQuery === '') {\n      actionFetchDrinkList('');\n    } else {\n      actionFetchIngredientDrinkList(ingredientDrinkQuery);\n      actionDrinkIngredient('');\n    }\n    actionFetchCategories('list');\n  }\n\n  render() {\n    const { drinkCardsList } = this.props;\n    return (\n      <div>\n        <Header title=\"Bebidas\" search />\n        <DrinkCategories />\n        <div className=\"card-list-container\">\n          { drinkCardsList.map((item, index) => (\n            <DrinkCard key={ item.idDrink } drink={ item } index={ index } />)) }\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  drinkCardsList: state.drinkReducer.drinkCardsList,\n  ingredientDrinkQuery: state.drinkReducer.ingredientDrinkQuery,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionFetchDrinkList: (name) => dispatch(fetchDrinkList(name)),\n  actionFetchCategories: (category) => dispatch(fetchDrinkCategory(category)),\n  actionFetchIngredientDrinkList: (ingredient) => {\n    dispatch(fetchDrinkIngredientList(ingredient));\n  },\n  actionDrinkIngredient: (ingredient) => dispatch(renderDrinkIngredient(ingredient)),\n});\n\nDrinks.propTypes = {\n  actionFetchDrinkList: PropTypes.func,\n  actionFetchCategories: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Drinks);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Header from '../components/Header';\nimport ShareButton from '../components/ShareButton';\n// import '../FoodsAndDrinks.css';\n\nexport default class DoneRecipes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      doneRecipes: [],\n      filter: '',\n    };\n    this.saveState = this.saveState.bind(this);\n  }\n\n  componentDidMount() {\n    this.saveState();\n  }\n\n  saveState() {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    this.setState({\n      doneRecipes,\n    });\n  }\n\n  filterButtons(getFilters) {\n    this.setState({\n      filter: getFilters,\n    });\n  }\n\n  render() {\n    const { doneRecipes, filter } = this.state;\n    return (\n      <div>\n        <Header title=\"Receitas Feitas\" search={ false } />\n        <div className=\"div-category-filter\">\n          <Button\n            size=\"sm\"\n            variant=\"outline-dark\"\n            className=\"category-buttons-filter\"\n            data-testid=\"filter-by-all-btn\"\n            onClick={ () => this.filterButtons('') }\n          >\n            All\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"outline-dark\"\n            className=\"category-buttons-filter\"\n            data-testid=\"filter-by-food-btn\"\n            onClick={ () => this.filterButtons('comida') }\n          >\n            Food\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"outline-dark\"\n            className=\"category-buttons-filter\"\n            data-testid=\"filter-by-drink-btn\"\n            onClick={ () => this.filterButtons('bebida') }\n          >\n            Drinks\n          </Button>\n        </div>\n        <div className=\"card-list-container\">\n          {doneRecipes && doneRecipes.filter((item) => item.type.includes(filter))\n            .map((item, index) => {\n              if (item.type === 'comida') {\n                return (\n                  <Card\n                    key={ index }\n                    style={ { width: '16rem' } }\n                    className=\"done-recipes-card\"\n                  >\n                    <li>\n                      <Link to={ `/comidas/${item.id}` }>\n                        <Card.Img\n                          variant=\"top\"\n                          height=\"200px\"\n                          width=\"300px\"\n                          data-testid={ `${index}-horizontal-image` }\n                          src={ item.image }\n                          alt=\"card-img\"\n                        />\n                      </Link>\n                      <Card.Body>\n                        <Card.Title\n                          className=\"done-recipe-title\"\n                          data-testid={ `${index}-horizontal-top-text` }\n                        >\n                          {`${item.area} - ${item.category}`}\n                        </Card.Title>\n                        <Card.Title\n                          data-testid={ `${index}-horizontal-name` }\n                        >\n                          <Link to={ `/comidas/${item.id}` }>\n                            {item.name}\n                          </Link>\n                        </Card.Title>\n                        <Card.Title\n                          data-testid={ `${index}-horizontal-done-date` }\n                        >\n                          {`Feita em: ${item.doneDate}`}\n                        </Card.Title>\n                        <Card.Title\n                          data-testid={ `${index}-${item.tags[0]}-horizontal-tag` }\n                        >\n                          {item.tags[0]}\n                        </Card.Title>\n                        <Card.Title\n                          data-testid={ `${index}-${item.tags[1]}-horizontal-tag` }\n                        >\n                          {item.tags[1]}\n                        </Card.Title>\n                        <ShareButton\n                          test={ `${index}-horizontal-share-btn` }\n                          id={ item.id }\n                        />\n                      </Card.Body>\n                    </li>\n                  </Card>\n                );\n              }\n              return (\n                <Card\n                  style={ { width: '16rem' } }\n                  className=\"done-recipes-card\"\n                  key={ index }\n                >\n                  <li>\n                    <Link to={ `/bebidas/${item.id}` }>\n                      <Card.Img\n                        variant=\"top\"\n                        height=\"200px\"\n                        width=\"300px\"\n                        data-testid={ `${index}-horizontal-image` }\n                        src={ item.image }\n                        alt=\"card-img\"\n                      />\n                    </Link>\n                    <Card.Body>\n                      <Card.Title\n                        className=\"done-recipe-title\"\n                        data-testid={ `${index}-horizontal-top-text` }\n                      >\n                        {item.alcoholicOrNot}\n                      </Card.Title>\n                      <Card.Title\n                        data-testid={ `${index}-horizontal-name` }\n                      >\n                        <Link to={ `/bebidas/${item.id}` }>\n                          {item.name}\n                        </Link>\n                      </Card.Title>\n                      <Card.Title\n                        data-testid={ `${index}-horizontal-done-date` }\n                      >\n                        {`Feita em: ${item.doneDate}`}\n                      </Card.Title>\n                      <ShareButton\n                        test={ `${index}-horizontal-share-btn` }\n                        id={ item.id }\n                      />\n                    </Card.Body>\n                  </li>\n                </Card>\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../ReturnButton.css';\n\nclass ReturnButton extends Component {\n  render() {\n    const { history } = this.props;\n    return (\n      <button className=\"return-button\" type=\"button\" onClick={ () => history.goBack() }>\n        {'<'}\n      </button>\n    );\n  }\n}\n\nReturnButton.propTypes = {\n  history: PropTypes.func.isRequired,\n};\n\nexport default withRouter(ReturnButton);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { DrinkDetailsCard, FoodRecomendation, DrinkStartRecipe } from '../components';\nimport { fetchDrinkID, fetchFoodRecomendations } from '../redux/actions/drinkActions';\nimport ReturnButton from '../components/ReturnButton';\n\nclass DrinkDetails extends Component {\n  componentDidMount() {\n    const { match: { params: { id } }, fetchDrinkByID, fetchFood } = this.props;\n    fetchDrinkByID(id);\n    fetchFood('');\n  }\n\n  render() {\n    const { match: { params: { id } } } = this.props;\n    return (\n      <div>\n        <ReturnButton />\n        <DrinkDetailsCard />\n        <FoodRecomendation />\n        <DrinkStartRecipe id={ id } />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchDrinkByID: (id) => dispatch(fetchDrinkID(id)),\n  fetchFood: (name) => dispatch(fetchFoodRecomendations(name)),\n});\n\nDrinkDetails.propTypes = {\n  fetchDrinkByID: PropTypes.func,\n  fetchFood: PropTypes.func,\n  match: PropTypes.object,\n}.isRequire;\n\nexport default connect(null, mapDispatchToProps)(DrinkDetails);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../RecipesInProgress.css';\nimport Button from 'react-bootstrap/Button';\nimport { saveDoneRecipe } from '../redux/actions/drinkActions';\n\nclass IngredientesDrinkInProgress extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredientsArrayList: [0],\n    };\n    this.handleOnchange = this.handleOnchange.bind(this);\n    this.saveInLocalStorage = this.saveInLocalStorage.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { drinkDetails } = this.props;\n    if (!Object.is(prevProps.drinkDetails, drinkDetails)) {\n      this.markedBox();\n    }\n  }\n\n  handleOnchange({ target }) {\n    const { checked, value } = target;\n    if (checked) {\n      this.setState((previousState) => ({\n        ingredientsArrayList: [...previousState.ingredientsArrayList, Number(value)],\n      }), () => this.saveInLocalStorage());\n    } else {\n      this.setState((previousState) => ({\n        ingredientsArrayList: previousState.ingredientsArrayList\n          .filter((box) => box !== Number(value)),\n      }), () => this.saveInLocalStorage());\n    }\n  }\n\n  saveInLocalStorage() {\n    const { drinkDetails } = this.props;\n    const { ingredientsArrayList } = this.state;\n    let inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (!inProgressRecipes) {\n      inProgressRecipes = {\n        cocktails: {},\n        meals: {},\n      };\n    }\n    inProgressRecipes.cocktails[drinkDetails.idDrink] = ingredientsArrayList;\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  }\n\n  // ableButton(){\n\n  // }\n\n  markedBox() {\n    const { drinkDetails } = this.props;\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (inProgressRecipes && Object.keys(inProgressRecipes.cocktails)\n      .find((cocktails) => Number(cocktails) === Number(drinkDetails.idDrink))) {\n      this.setState({\n        ingredientsArrayList: inProgressRecipes.cocktails[drinkDetails.idDrink],\n      });\n    } else {\n      this.setState({\n        ingredientsArrayList: [],\n      });\n    }\n  }\n\n  saveInDoneRecipes() {\n\n  }\n\n  render() {\n    console.log('qualquer coisa');\n    const { drinkDetails, saveDoneRecipesAction } = this.props;\n    const { ingredientsArrayList } = this.state;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(drinkDetails));\n    if (array[0].length > 0) {\n      ingredients = array[0].filter((item) => item[0].includes('strIngredient'))\n        .filter((item) => item[1]).map((item) => (item[1]));\n      measurements = array[0].filter((item) => item[0].includes('strMeasure'))\n        .filter((item) => item[1]).map((item) => item[1]);\n    }\n    return (\n      <>\n        <ul>\n          { ingredients\n            .map((item, index) => (item\n              ? (\n                <label\n                  htmlFor={ `${index}-check-ingredients` }\n                  className={ ingredientsArrayList\n                    .some((ingredient) => ingredient === index) ? 'checked-button' : '' }\n                  key={ index }\n                  data-testid={ `${index}-ingredient-step` }\n                >\n                  <input\n                    className=\"checkbox\"\n                    type=\"checkbox\"\n                    checked={ ingredientsArrayList\n                      .some((ingredient) => ingredient === index) }\n                    // checked={ item.checked }\n                    onChange={ this.handleOnchange }\n                    value={ index }\n                    id={ `${index}-check-ingredients` }\n                  />\n                  {`${item} - ${measurements[index]}`}\n                </label>\n              )\n              : ''))}\n        </ul>\n        <Link to=\"/receitas-feitas\">\n          <Button\n            className=\"finish-recipe btn btn-warning\"\n            type=\"button\"\n            data-testid=\"finish-recipe-btn\"\n            disabled={ ingredientsArrayList.length !== ingredients.length }\n            onClick={ () => saveDoneRecipesAction(drinkDetails.idDrink) }\n          >\n            {' '}\n            Finalizar Receita\n          </Button>\n        </Link>\n      </>);\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  drinkDetails: state.drinkReducer.drinkDetails,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveDoneRecipesAction: (id) => dispatch(saveDoneRecipe(id)),\n});\n\nIngredientesDrinkInProgress.propTypes = {\n  drinkDetails: PropTypes.shape({\n    strDrinkThumb: PropTypes.string,\n    strDrink: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    idDrink: PropTypes.string,\n  }),\n  saveDoneRecipesAction: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientesDrinkInProgress);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport DrinkShareButton from './DrinkShareButton';\nimport DrinkFavoriteButton from './DrinkFavoriteButton';\nimport IngredientsDrinkInProgress from './IngredientsDrinkInProgress';\nimport '../RecipesInProgress.css';\n\nclass DrinkInProgressCard extends Component {\n  render() {\n    const { drinkDetails } = this.props;\n    return (\n      <div className=\"div-recipes-in-progress\">\n        <Card\n          style={ { width: '16rem' } }\n          className=\"recipes-in-progress\"\n        >\n          <Card.Img\n            variant=\"top\"\n            height=\"250px\"\n            width=\"300px\"\n            data-testid=\"recipe-photo\"\n            src={ drinkDetails.strDrinkThumb }\n            alt=\"imagem da receita\"\n          />\n          <Card.Body>\n            <Card.Title\n              data-testid=\"recipe-title\"\n              className=\"recipe-in-progress-title\"\n            >\n              {drinkDetails.strDrink}\n            </Card.Title>\n            <DrinkShareButton test=\"share-btn\" id={ drinkDetails.idDrink } />\n            <DrinkFavoriteButton test=\"favorite-btn\" id={ drinkDetails.idDrink } />\n            <p data-testid=\"recipe-category\">{ drinkDetails.strCategory }</p>\n            <IngredientsDrinkInProgress />\n            <p\n              data-testid=\"instructions\"\n              className=\"instructions\"\n            >\n              { drinkDetails.strInstructions }\n            </p>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  drinkDetails: state.drinkReducer.drinkDetails,\n});\n\nDrinkInProgressCard.propTypes = {\n  drinkDetails: PropTypes.shape({\n    strDrinkThumb: PropTypes.string,\n    strDrink: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    strYoutube: PropTypes.string,\n    idDrink: PropTypes.string,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps)(DrinkInProgressCard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DrinkInProgressCard from '../components/DrinkInProgressCard';\nimport { fetchDrinkID } from '../redux/actions/drinkActions';\nimport ReturnButton from '../components/ReturnButton';\n\nclass DrinkInProgress extends Component {\n  componentDidMount() {\n    const { match: { params: { id } }, fetchDrinkByID } = this.props;\n    fetchDrinkByID(id);\n  }\n\n  render() {\n    return (\n      <div>\n        <ReturnButton />\n        <DrinkInProgressCard />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchDrinkByID: (id) => dispatch(fetchDrinkID(id)),\n});\n\nDrinkInProgress.propTypes = {\n  fetchDrinkByID: PropTypes.func,\n  match: PropTypes.object,\n}.isRequire;\n\nexport default connect(null, mapDispatchToProps)(DrinkInProgress);\n","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport { Header, Footer } from '../components';\nimport '../Explore-Profile.css';\n\nexport default class Explore extends Component {\n  render() {\n    return (\n      <div>\n        <Header title=\"Explorar\" search={ false } />\n        <div className=\"back-ground\">\n          <div className=\"div-explore\">\n            <Link to=\"/explorar/comidas\">\n              <Button\n                variant=\"outline-secondary\"\n                data-testid=\"explore-food\"\n                className=\"explore-buttons\"\n              >\n                Explorar Comidas\n              </Button>\n            </Link>\n            <Link to=\"/explorar/bebidas\">\n              <Button\n                variant=\"outline-secondary\"\n                data-testid=\"explore-drinks\"\n                className=\"explore-buttons\"\n              >\n                Explorar Bebidas\n              </Button>\n            </Link>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport { randomDrinkId } from '../redux/actions/drinkActions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../ExplorebyFoodandDrink.css';\n\nclass ExploreDrinks extends Component {\n  constructor() {\n    super();\n\n    this.redirectRandomDrink = this.redirectRandomDrink.bind(this);\n  }\n\n  async redirectRandomDrink() {\n    const { randomDrinkIdResult, history } = this.props;\n    const randomDrink = await randomDrinkIdResult();\n    history.push(`/bebidas/${randomDrink}`);\n  }\n\n  render() {\n    return (\n      <div>\n        <Header title=\"Explorar Bebidas\" search={ false } />\n        <div className=\"back-ground-drink\">\n          <div className=\"div-explore\">\n            <Link to=\"/explorar/bebidas/ingredientes\">\n              <Button\n                variant=\"outline-dark\"\n                className=\"explore-buttons\"\n                type=\"button\"\n                data-testid=\"explore-by-ingredient\"\n              >\n                Por Ingredientes\n              </Button>\n            </Link>\n            <Button\n              variant=\"outline-dark\"\n              className=\"explore-buttons\"\n              type=\"button\"\n              data-testid=\"explore-surprise\"\n              onClick={ this.redirectRandomDrink }\n            >\n              Me Surpreenda!\n            </Button>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  randomDrinkIdResult: () => dispatch(randomDrinkId()),\n});\n\nExploreDrinks.propTypes = {\n  randomDrinkIdResult: PropTypes.func,\n  history: PropTypes.object,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(ExploreDrinks);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\nimport { drinkIngredients,\n  renderDrinkIngredient } from '../redux/actions/drinkActions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../ExploreIngredients.css';\n\nclass ExploreDrinksIngredients extends Component {\n  componentDidMount() {\n    const { actionfetchDrinkIngredient } = this.props;\n    actionfetchDrinkIngredient();\n  }\n\n  renderDrinkIngredient(ingredient) {\n    const { history, actionDrinkIngredient } = this.props;\n    actionDrinkIngredient(ingredient);\n    history.push('/bebidas');\n  }\n\n  render() {\n    const { fetchDrinkIngredients } = this.props;\n    return (\n      <div>\n        <Header title=\"Explorar Ingredientes\" search={ false } />\n        <ul>\n          { fetchDrinkIngredients.map((item, index) => (\n            <Button\n              variant=\"outline-dark\"\n              className=\"ingredient-buttons\"\n              type=\"button\"\n              key={ item.strIngredient1 }\n              data-testid={ `${index}-ingredient-card` }\n              onClick={ () => this.renderDrinkIngredient(item.strIngredient1) }\n            >\n              <img\n                src={ `https://www.thecocktaildb.com/images/ingredients/${item.strIngredient1}-Small.png` }\n                alt=\"Drink Ingredients\"\n                data-testid={ `${index}-card-img` }\n                height=\"200px\"\n                width=\"200px\"\n              />\n              <p data-testid={ `${index}-card-name` }>{ item.strIngredient1 }</p>\n            </Button>\n          )) }\n        </ul>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  fetchDrinkIngredients: state.drinkReducer.drinkIngredients,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionfetchDrinkIngredient: () => dispatch(drinkIngredients()),\n  actionDrinkIngredient: (ingredient) => dispatch(renderDrinkIngredient(ingredient)),\n});\n\nExploreDrinksIngredients.propTypes = {\n  fetchDrinkIngredients: PropTypes.arrayOf(PropTypes.string),\n  actionfetchDrinkIngredient: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreDrinksIngredients);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FoodCard from '../components/FoodCard';\nimport { fetchFoodAreaSuccess, fetchFoodList,\n  fetchSearchFoodArea } from '../redux/actions/foodActions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../ExploreIngredients.css';\n\nclass ExploreFoodByArea extends Component {\n  constructor() {\n    super();\n\n    this.handleFoodByArea = this.handleFoodByArea.bind(this);\n  }\n\n  componentDidMount() {\n    const { fetchFoodArea, actionFetchFoodList } = this.props;\n    fetchFoodArea();\n    actionFetchFoodList('');\n  }\n\n  handleFoodByArea({ target }) {\n    const { value } = target;\n    const { actionFetchFoodList,\n      actionFetchSearchFoodArea } = this.props;\n\n    if (value === 'All') {\n      actionFetchFoodList('');\n    } else {\n      actionFetchSearchFoodArea(value);\n    }\n  }\n\n  render() {\n    const { foodArea, foodCardsList } = this.props;\n    return (\n      <div>\n        <Header title=\"Explorar Origem\" search />\n        <select\n          className=\"dropdown\"\n          data-testid=\"explore-by-area-dropdown\"\n          onChange={ this.handleFoodByArea }\n        >\n          <option\n            data-testid=\"All-option\"\n            value=\"All\"\n          >\n            All\n          </option>\n          { foodArea && foodArea.map((item, index) => (\n            <option\n              key={ index }\n              data-testid={ `${item.strArea}-option` }\n              value={ item.strArea }\n            >\n              { item.strArea }\n            </option>\n          )) }\n        </select>\n        <div className=\"card-list-container\">\n          { foodCardsList && foodCardsList.map((item, index) => (\n            <FoodCard key={ item.idMeal } food={ item } index={ index } />)) }\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodArea: state.foodReducer.foodArea,\n  foodCardsList: state.foodReducer.foodCardsList,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchFoodArea: () => dispatch(fetchFoodAreaSuccess()),\n  actionFetchFoodList: (name) => dispatch(fetchFoodList(name)),\n  actionFetchSearchFoodArea: (area) => dispatch(fetchSearchFoodArea(area)),\n});\n\nExploreFoodByArea.propTypes = {\n  foodArea: PropTypes.arrayOf(PropTypes.object),\n  fetchFoodArea: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreFoodByArea);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\nimport { foodIngredient, renderFoodIngredient } from '../redux/actions/foodActions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../ExploreIngredients.css';\n\nclass ExploreFoodIngredients extends Component {\n  componentDidMount() {\n    const { actionfetchFoodIngredient } = this.props;\n    actionfetchFoodIngredient();\n  }\n\n  redirectFoodIngredient(ingredient) {\n    const { history, actionFoodIngredient } = this.props;\n    actionFoodIngredient(ingredient);\n    history.push('/comidas');\n  }\n\n  render() {\n    const { fetchFoodIngredient } = this.props;\n    return (\n      <div>\n        <Header title=\"Explorar Ingredientes\" search={ false } />\n        <ul>\n          { fetchFoodIngredient.map((item, index) => (\n            <Button\n              className=\"ingredient-buttons\"\n              variant=\"outline-dark\"\n              key={ item.idIngredient }\n              data-testid={ `${index}-ingredient-card` }\n              onClick={ () => this.redirectFoodIngredient(item.strIngredient) }\n            >\n              <img\n                src={ `https://www.themealdb.com/images/ingredients/${item.strIngredient}-Small.png` }\n                alt=\"Food Ingredients\"\n                data-testid={ `${index}-card-img` }\n                height=\"200px\"\n                width=\"200px\"\n              />\n              <p data-testid={ `${index}-card-name` }>{ item.strIngredient }</p>\n            </Button>\n          ))}\n        </ul>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  fetchFoodIngredient: state.foodReducer.foodIngredients,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionfetchFoodIngredient: () => dispatch(foodIngredient()),\n  actionFoodIngredient: (ingredient) => dispatch(renderFoodIngredient(ingredient)),\n});\n\nExploreFoodIngredients.propTypes = {\n  fetchFoodIngredient: PropTypes.arrayOf(PropTypes.string),\n  actionfetchFoodIngredient: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreFoodIngredients);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport { randomFoodId } from '../redux/actions/foodActions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../ExplorebyFoodandDrink.css';\n\nclass ExploreFoods extends Component {\n  constructor() {\n    super();\n\n    this.redirectRandomFood = this.redirectRandomFood.bind(this);\n  }\n\n  async redirectRandomFood() {\n    const { randomFoodIdResult, history } = this.props;\n    const randomFood = await randomFoodIdResult();\n    history.push(`/comidas/${randomFood}`);\n  }\n\n  render() {\n    return (\n      <div>\n        <Header title=\"Explorar Comidas\" search={ false } />\n        <div className=\"back-ground-food\">\n          <div className=\"div-explore\">\n            <Link to=\"/explorar/comidas/ingredientes\">\n              <Button\n                variant=\"outline-dark\"\n                type=\"button\"\n                data-testid=\"explore-by-ingredient\"\n                className=\"explore-buttons\"\n              >\n                Por Ingredientes\n              </Button>\n            </Link>\n            <Link to=\"/explorar/comidas/area\">\n              <Button\n                variant=\"outline-dark\"\n                className=\"explore-buttons\"\n                type=\"button\"\n                data-testid=\"explore-by-area\"\n              >\n                Por Local de Origem\n              </Button>\n            </Link>\n            <Button\n              variant=\"outline-dark\"\n              className=\"explore-buttons\"\n              type=\"button\"\n              data-testid=\"explore-surprise\"\n              onClick={ this.redirectRandomFood }\n            >\n              Me Surpreenda!\n            </Button>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  randomFoodIdResult: () => dispatch(randomFoodId()),\n});\n\nExploreFoods.propTypes = {\n  randomFoodIdResult: PropTypes.func,\n  history: PropTypes.object,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(ExploreFoods);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { Header } from '../components';\nimport DrinkFavoriteButton from '../components/DrinkFavoriteButton';\nimport DrinkShareButton from '../components/DrinkShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\nimport ShareButton from '../components/ShareButton';\nimport { saveFavoritesRedux } from '../redux/actions/foodActions';\nimport '../Favorities.css';\n\nclass FavoriteRecipes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filter: '',\n    };\n  }\n\n  componentDidMount() {\n    const { updateFavorites } = this.props;\n    const localFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    updateFavorites(localFavorites);\n  }\n\n  FilterList(filter) {\n    this.setState({\n      filter,\n    });\n  }\n\n  render() {\n    const { favoriteRecipes } = this.props;\n    const { filter } = this.state;\n    return (\n      <div>\n        <Header title=\"Receitas Favoritas\" search={ false } />\n        <div className=\"div-category-filter\">\n          <Button\n            size=\"sm\"\n            variant=\"outline-dark\"\n            className=\"category-buttons-filter\"\n            data-testid=\"filter-by-all-btn\"\n            onClick={ () => this.FilterList('') }\n          >\n            All\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"outline-dark\"\n            className=\"category-buttons-filter\"\n            data-testid=\"filter-by-food-btn\"\n            onClick={ () => this.FilterList('comida') }\n          >\n            Food\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"outline-dark\"\n            className=\"category-buttons-filter\"\n            data-testid=\"filter-by-drink-btn\"\n            onClick={ () => this.FilterList('bebida') }\n          >\n            Drink\n          </Button>\n        </div>\n        <div className=\"card-list-container\">\n          {favoriteRecipes && favoriteRecipes.filter((item) => item.type.includes(filter))\n            .map((item, index) => {\n              if (item.type === 'comida') {\n                return (\n                  <Card\n                    key={ index }\n                    style={ { width: '16rem' } }\n                    className=\"done-recipes-card\"\n                  >\n                    <li key={ item.id }>\n                      <Link to={ `/comidas/${item.id}` }>\n                        <Card.Img\n                          variant=\"top\"\n                          height=\"200px\"\n                          width=\"300px\"\n                          data-testid={ `${index}-horizontal-image` }\n                          src={ item.image }\n                          alt=\"foto da receita\"\n                        />\n                      </Link>\n                      <Card.Body>\n                        <Card.Title\n                          className=\"done-recipe-title\"\n                          data-testid={ `${index}-horizontal-top-text` }\n                        >\n                          { `${item.area} - ${item.category}` }\n                        </Card.Title>\n                        <Card.Title\n                          className=\"done-recipe-title\"\n                          data-testid={ `${index}-horizontal-name` }\n                        >\n                          <Link to={ `/comidas/${item.id}` }>\n                            { item.name }\n                          </Link>\n                        </Card.Title>\n                        <ShareButton\n                          test={ `${index}-horizontal-share-btn` }\n                          id={ item.id }\n                        />\n                        <FavoriteButton\n                          test={ `${index}-horizontal-favorite-btn` }\n                          id={ item.id }\n                        />\n                      </Card.Body>\n                    </li>\n                  </Card>\n                );\n              }\n              return (\n                <Card\n                  style={ { width: '16rem' } }\n                  className=\"done-recipes-card\"\n                  key={ item.id }\n                >\n                  <li>\n                    <Link to={ `/bebidas/${item.id}` }>\n                      <Card.Img\n                        variant=\"top\"\n                        height=\"200px\"\n                        width=\"300px\"\n                        data-testid={ `${index}-horizontal-image` }\n                        src={ item.image }\n                        alt=\"foto da receita\"\n                      />\n                    </Link>\n                    <Card.Body>\n\n                      <Card.Title\n                        className=\"done-recipe-title\"\n                        data-testid={ `${index}-horizontal-top-text` }\n                      >\n                        { item.alcoholicOrNot }\n                      </Card.Title>\n                      <Card.Title\n                        data-testid={ `${index}-horizontal-name` }\n                      >\n                        <Link to={ `/bebidas/${item.id}` }>\n                          { item.name }\n                        </Link>\n                      </Card.Title>\n                      <DrinkShareButton\n                        test={ `${index}-horizontal-share-btn` }\n                        id={ item.id }\n                      />\n                      <DrinkFavoriteButton\n                        test={ `${index}-horizontal-favorite-btn` }\n                        id={ item.id }\n                      />\n                    </Card.Body>\n                  </li>\n                </Card>\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  favoriteRecipes: state.foodReducer.favorites,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateFavorites: (list) => dispatch(saveFavoritesRedux(list)),\n});\n\nFavoriteRecipes.propTypes = {\n  favoriteRecipes: PropTypes.array,\n  updateFavorites: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoriteRecipes);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchFoodID, fetchDrinkRecomendations } from '../redux/actions/foodActions';\nimport { DrinkRecomendation, FoodDetailsCard, StartRecipe } from '../components';\nimport ReturnButton from '../components/ReturnButton';\n\nclass FoodDetails extends Component {\n  componentDidMount() {\n    const { match: { params: { id } }, fetchFoodByID, fetchDrink } = this.props;\n    fetchFoodByID(id);\n    fetchDrink('');\n  }\n\n  render() {\n    const { match: { params: { id } } } = this.props;\n    return (\n      <div>\n        <ReturnButton />\n        <FoodDetailsCard />\n        <DrinkRecomendation />\n        <StartRecipe id={ id } />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchFoodByID: (id) => dispatch(fetchFoodID(id)),\n  fetchDrink: (name) => dispatch(fetchDrinkRecomendations(name)),\n});\n\nFoodDetails.propTypes = {\n  fetchFoodByID: PropTypes.func,\n  fetchDrink: PropTypes.func,\n  match: PropTypes.object,\n}.isRequire;\n\nexport default connect(null, mapDispatchToProps)(FoodDetails);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../RecipesInProgress.css';\nimport Button from 'react-bootstrap/Button';\nimport { saveDoneRecipe } from '../redux/actions/foodActions';\n\nclass IngredientsFoodInProgress extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredientsArrayList: [0],\n    };\n    this.handleOnchange = this.handleOnchange.bind(this);\n    this.saveInLocalStorage = this.saveInLocalStorage.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { foodDetails } = this.props;\n    if (!Object.is(prevProps.foodDetails, foodDetails)) {\n      this.markedBox();\n    }\n  }\n\n  handleOnchange({ target }) {\n    const { checked, value } = target;\n    if (checked) {\n      this.setState((previousState) => ({\n        ingredientsArrayList: [...previousState.ingredientsArrayList, Number(value)],\n      }), () => this.saveInLocalStorage());\n    } else {\n      this.setState((previousState) => ({\n        ingredientsArrayList: previousState.ingredientsArrayList\n          .filter((box) => box !== Number(value)),\n      }), () => this.saveInLocalStorage());\n    }\n  }\n\n  saveInLocalStorage() {\n    const { foodDetails } = this.props;\n    const { ingredientsArrayList } = this.state;\n    let inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (!inProgressRecipes) {\n      inProgressRecipes = {\n        cocktails: {},\n        meals: {},\n      };\n    }\n    inProgressRecipes.meals[foodDetails.idMeal] = ingredientsArrayList;\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  }\n\n  // ableButton(){\n\n  // }\n\n  markedBox() {\n    const { foodDetails } = this.props;\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (inProgressRecipes && Object.keys(inProgressRecipes.meals)\n      .find((meal) => Number(meal) === Number(foodDetails.idMeal))) {\n      this.setState({\n        ingredientsArrayList: inProgressRecipes.meals[foodDetails.idMeal],\n      });\n    } else {\n      this.setState({\n        ingredientsArrayList: [],\n      });\n    }\n  }\n\n  saveInDoneRecipes() {\n\n  }\n\n  render() {\n    console.log('qualquer coisa');\n    const { foodDetails, saveDoneRecipesAction } = this.props;\n    const { ingredientsArrayList } = this.state;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(foodDetails));\n    if (array[0].length > 0) {\n      ingredients = array[0].filter((item) => item[0].includes('strIngredient'))\n        .filter((item) => item[1]).map((item) => (item[1]));\n      measurements = array[0].filter((item) => item[0].includes('strMeasure'))\n        .filter((item) => item[1]).map((item) => item[1]);\n    }\n    return (\n      <>\n        <ul>\n          { ingredients\n            .map((item, index) => (item\n              ? (\n                <label\n                  htmlFor={ `${index}-check-ingredients` }\n                  className={ ingredientsArrayList\n                    .some((ingredient) => ingredient === index) ? 'checked-button' : '' }\n                  key={ index }\n                  data-testid={ `${index}-ingredient-step` }\n                >\n                  <input\n                    className=\"checkbox\"\n                    type=\"checkbox\"\n                    checked={ ingredientsArrayList\n                      .some((ingredient) => ingredient === index) }\n                    // checked={ item.checked }\n                    onChange={ this.handleOnchange }\n                    value={ index }\n                    id={ `${index}-check-ingredients` }\n                  />\n                  {`${item} - ${measurements[index]}`}\n                </label>\n              )\n              : ''))}\n        </ul>\n        <Link to=\"/receitas-feitas\">\n          <Button\n            className=\"finish-recipe btn btn-warning\"\n            data-testid=\"finish-recipe-btn\"\n            disabled={ ingredientsArrayList.length !== ingredients.length }\n            onClick={ () => saveDoneRecipesAction(foodDetails.idMeal) }\n          >\n            {' '}\n            Finalizar Receita\n          </Button>\n        </Link>\n      </>);\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodDetails: state.foodReducer.foodDetails,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveDoneRecipesAction: (id) => dispatch(saveDoneRecipe(id)),\n});\n\nIngredientsFoodInProgress.propTypes = {\n  foodDetails: PropTypes.shape({\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    strYoutube: PropTypes.string,\n    idMeal: PropTypes.string,\n  }),\n  saveDoneRecipesAction: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientsFoodInProgress);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport ShareButton from './ShareButton';\nimport FavoriteButton from './FavoriteButton';\nimport IngredientesFoodInProgress from './IngredientsFoodInProgress';\nimport '../RecipesInProgress.css';\n\nclass FoodInProgressCard extends Component {\n  render() {\n    const { foodDetails } = this.props;\n    return (\n      <div className=\"div-recipes-in-progress\">\n        <Card\n          style={ { width: '16rem' } }\n          className=\"recipes-in-progress\"\n        >\n          <Card.Img\n            variant=\"top\"\n            height=\"250px\"\n            width=\"300px\"\n            data-testid=\"recipe-photo\"\n            src={ foodDetails.strMealThumb }\n            alt=\"imagem da receita\"\n          />\n          <Card.Body>\n            <Card.Title\n              className=\"recipe-in-progress-title\"\n              data-testid=\"recipe-title\"\n            >\n              {foodDetails.strMeal}\n            </Card.Title>\n            <ShareButton test=\"share-btn\" id={ foodDetails.idMeal } />\n            <FavoriteButton test=\"favorite-btn\" id={ foodDetails.idMeal } />\n            <p data-testid=\"recipe-category\">{ foodDetails.strCategory }</p>\n            <IngredientesFoodInProgress />\n            <p\n              data-testid=\"instructions\"\n              className=\"instructions\"\n            >\n              { foodDetails.strInstructions }\n            </p>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  foodDetails: state.foodReducer.foodDetails,\n});\n\nFoodInProgressCard.propTypes = {\n  foodDetails: PropTypes.shape({\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    strYoutube: PropTypes.string,\n    idMeal: PropTypes.string,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps)(FoodInProgressCard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FoodInProgressCard from '../components/FoodInProgressCard';\nimport { fetchFoodID } from '../redux/actions/foodActions';\nimport ReturnButton from '../components/ReturnButton';\n\nclass FoodInProgress extends Component {\n  componentDidMount() {\n    const { match: { params: { id } }, fetchFoodByID } = this.props;\n    fetchFoodByID(id);\n  }\n\n  render() {\n    return (\n      <div>\n        <ReturnButton />\n        <FoodInProgressCard />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchFoodByID: (id) => dispatch(fetchFoodID(id)),\n});\n\nFoodInProgress.propTypes = {\n  fetchFoodByID: PropTypes.func,\n  match: PropTypes.object,\n}.isRequire;\n\nexport default connect(null, mapDispatchToProps)(FoodInProgress);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form } from 'react-bootstrap';\nimport '../Login.css';\nimport 'animate.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      password: '',\n      valid: true,\n    };\n    this.handleChangeForm = this.handleChangeForm.bind(this);\n    this.loginUser = this.loginUser.bind(this);\n  }\n\n  handleChangeForm({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n    this.validateLogin();\n  }\n\n  loginUser(e) {\n    e.preventDefault();\n    const { history } = this.props;\n    const { email } = this.state;\n    localStorage.setItem('user', JSON.stringify({ email }));\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    history.push('/comidas');\n  }\n\n  validateLogin() {\n    const { email, password } = this.state;\n    const minSize = 6;\n    const re = /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/;\n    if (password.length >= minSize && re.test(email)) {\n      this.setState({\n        valid: false,\n      });\n    } else {\n      this.setState({\n        valid: true,\n      });\n    }\n  }\n\n  renderLoginForm() {\n    const { email, password, valid } = this.state;\n    return (\n      <Form className=\"login-form\">\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Digite seu e-mail\"\n            data-testid=\"email-input\"\n            value={ email }\n            onChange={ this.handleChangeForm }\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Digite sua senha\"\n            data-testid=\"password-input\"\n            value={ password }\n            onChange={ this.handleChangeForm }\n          />\n        </Form.Group>\n        <Button\n          className=\"login-button btn btn-warning\"\n          type=\"submit\"\n          size=\"m\"\n          data-testid=\"login-submit-btn\"\n          disabled={ valid }\n          onClick={ this.loginUser }\n        >\n          Entrar\n        </Button>\n      </Form>\n    );\n  }\n\n  render() {\n    return (\n      <main className=\"body-page\">\n        <div className=\"container\">\n          <h1\n            className=\"app-name animate__animated animate__heartBeat animate__repeat-2\"\n          >\n            Beyond Kitchen\n          </h1>\n          <h2 className=\"login\">Login</h2>\n          {this.renderLoginForm()}\n        </div>\n      </main>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Login;\n","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../Explore-Profile.css';\n\nclass Profile extends Component {\n  render() {\n    const getEmail = JSON.parse(localStorage.getItem('user'));\n    let userEmail = '';\n    if (getEmail) {\n      userEmail = getEmail.email;\n    }\n    return (\n      <div>\n        <Header title=\"Perfil\" search={ false } />\n        <div className=\"back-ground\">\n          <div className=\"div-profile\">\n            <p\n              data-testid=\"profile-email\"\n              className=\"user-email\"\n            >\n              { userEmail }\n            </p>\n            <Link to=\"/receitas-feitas\">\n              <Button\n                variant=\"outline-secondary\"\n                data-testid=\"profile-done-btn\"\n                className=\"profile-buttons\"\n              >\n                Receitas Feitas\n              </Button>\n            </Link>\n            <Link to=\"/receitas-favoritas\">\n              <Button\n                variant=\"outline-secondary\"\n                data-testid=\"profile-favorite-btn\"\n                className=\"profile-buttons\"\n              >\n                Receitas Favoritas\n              </Button>\n            </Link>\n            <Link to=\"/\">\n              <Button\n                variant=\"outline-secondary\"\n                data-testid=\"profile-logout-btn\"\n                className=\"profile-buttons\"\n                onClick={ () => localStorage.clear() }\n              >\n                Sair\n              </Button>\n            </Link>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div>\n        Not Found\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { DoneRecipes, DrinkInProgress, Drinks, Explore, ExploreDrinks,\n  ExploreDrinksIngredients, ExploreFoodByArea, ExploreFoodIngredients, ExploreFoods,\n  FavoriteRecipes, FoodDetails, FoodInProgress, Foods, Login, Profile } from './pages';\nimport DrinkDetails from './pages/DrinkDetails';\nimport NotFound from './pages/NotFound';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route exact path=\"/comidas\" component={ Foods } />\n        <Route exact path=\"/bebidas\" component={ Drinks } />\n        <Route\n          exact\n          path=\"/comidas/:id\"\n          render={ (props) => <FoodDetails { ...props } /> }\n        />\n        <Route\n          exact\n          path=\"/bebidas/:id\"\n          render={ (props) => <DrinkDetails { ...props } /> }\n        />\n        <Route\n          exact\n          path=\"/comidas/:id/in-progress\"\n          render={ (props) => <FoodInProgress { ...props } /> }\n        />\n        <Route\n          exact\n          path=\"/bebidas/:id/in-progress\"\n          render={ (props) => <DrinkInProgress { ...props } /> }\n        />\n        <Route exact path=\"/explorar\" component={ Explore } />\n        <Route exact path=\"/explorar/comidas\" component={ ExploreFoods } />\n        <Route exact path=\"/explorar/bebidas\" component={ ExploreDrinks } />\n        <Route\n          exact\n          path=\"/explorar/comidas/ingredientes\"\n          component={ ExploreFoodIngredients }\n        />\n        <Route\n          exact\n          path=\"/explorar/bebidas/ingredientes\"\n          component={ ExploreDrinksIngredients }\n        />\n        <Route path=\"/explorar/comidas/area\" component={ ExploreFoodByArea } />\n        <Route path=\"/perfil\" component={ Profile } />\n        <Route path=\"/receitas-feitas\" component={ DoneRecipes } />\n        <Route path=\"/receitas-favoritas\" component={ FavoriteRecipes } />\n        <Route component={ NotFound } />\n\n      </Switch>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { DRINK_LIST_SUCCESS, DRINK_CATEGORY_SUCCESS,\n  DRINK_LIST_CATEGORY_SUCCESS, UPDATE_CATEGORY,\n  DRINK_DETAILS_ID_SUCCESS, FOOD_RECOMENDATIONS_SUCCESS,\n  DRINK_INGREDIENTS, RENDER_DRINK_INGREDIENTS } from '../actions/drinkActions';\n\nconst INITIAL_STATE = {\n  drinkCardsList: [],\n  drinkCategoriesList: [],\n  selectedCategory: 'All',\n  drinkDetails: {},\n  foodRecomendations: [],\n  drinkIngredients: [],\n  ingredientDrinkQuery: '',\n};\n\nconst CARD_LENGTH = 12;\nconst CATEGORY_LENGTH = 5;\nconst FOOD_RECOMENDATION = 6;\n\nfunction drinkReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case DRINK_LIST_CATEGORY_SUCCESS:\n  case DRINK_LIST_SUCCESS:\n    return {\n      ...state,\n      drinkCardsList: action.payload.slice(0, CARD_LENGTH),\n    };\n  case DRINK_CATEGORY_SUCCESS:\n    return {\n      ...state,\n      drinkCategoriesList: action.payload.slice(0, CATEGORY_LENGTH),\n    };\n  case UPDATE_CATEGORY:\n    return { ...state, selectedCategory: action.payload };\n  case DRINK_DETAILS_ID_SUCCESS:\n    return {\n      ...state,\n      drinkDetails: { ...action.payload[0] },\n    };\n  case FOOD_RECOMENDATIONS_SUCCESS:\n    return { ...state,\n      foodRecomendations: action.payload.slice(0, FOOD_RECOMENDATION) };\n  case DRINK_INGREDIENTS:\n    return { ...state,\n      drinkIngredients: action.payload.slice(0, CARD_LENGTH) };\n  case RENDER_DRINK_INGREDIENTS:\n    return { ...state,\n      ingredientDrinkQuery: action.payload };\n  default:\n    return state;\n  }\n}\n\nexport default drinkReducer;\n","import { FOOD_LIST_SUCCESS, FOOD_CATEGORY_SUCCESS,\n  FOOD_LIST_CATEGORY_SUCCESS, UPDATE_CATEGORY,\n  FOOD_DETAILS_ID_SUCCESS, DRINK_RECOMENDATIONS_SUCCESS,\n  FOOD_INGREDIENTS, FOOD_AREA, SAVE_FAVORITES,\n  RENDER_FOOD_INGREDIENTS, SEARCH_FOOD_AREA,\n} from '../actions/foodActions';\n\nconst INITIAL_STATE = {\n  foodCardsList: [],\n  foodCategoriesList: [],\n  selectedCategory: 'All',\n  foodDetails: {},\n  drinkRecomendations: [],\n  foodIngredients: [],\n  foodArea: [],\n  favorites: [],\n  ingredientFoodQuery: '',\n};\n\nconst CARD_LENGTH = 12;\nconst CATEGORY_LENGTH = 5;\nconst DRINK_RECOMENDATION = 6;\n\nfunction foodReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case FOOD_LIST_CATEGORY_SUCCESS:\n  case SEARCH_FOOD_AREA:\n  case FOOD_LIST_SUCCESS:\n    return {\n      ...state,\n      foodCardsList: action.payload.slice(0, CARD_LENGTH),\n    };\n  case FOOD_CATEGORY_SUCCESS:\n    return {\n      ...state,\n      foodCategoriesList: action.payload.slice(0, CATEGORY_LENGTH),\n    };\n  case UPDATE_CATEGORY:\n    return { ...state, selectedCategory: action.payload };\n  case FOOD_DETAILS_ID_SUCCESS:\n    return {\n      ...state,\n      foodDetails: { ...action.payload[0] },\n    };\n  case DRINK_RECOMENDATIONS_SUCCESS:\n    return { ...state,\n      drinkRecomendations: action.payload.slice(0, DRINK_RECOMENDATION) };\n  case FOOD_INGREDIENTS:\n    return { ...state,\n      foodIngredients: action.payload.slice(0, CARD_LENGTH),\n    };\n  case FOOD_AREA:\n    return { ...state,\n      foodArea: action.payload,\n    };\n  case SAVE_FAVORITES:\n    return { ...state,\n      favorites: action.payload };\n  case RENDER_FOOD_INGREDIENTS:\n    return { ...state,\n      ingredientFoodQuery: action.payload,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default foodReducer;\n","import { UPDATE_QUERY, UPDATE_SELECTED_FILTER,\n  SAVE_SEARCH_RESULTS } from '../actions/searchBarActions';\n\nconst INITIAL_STATE = {\n  query: '',\n  selectedFilter: 'name',\n  searchResults: [],\n};\n\nfunction searchBarReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case UPDATE_QUERY:\n    return { ...state, query: action.payload };\n  case UPDATE_SELECTED_FILTER:\n    return { ...state, selectedFilter: action.payload };\n  case SAVE_SEARCH_RESULTS:\n    return { ...state, searchResults: action.payload };\n  default:\n    return state;\n  }\n}\n\nexport default searchBarReducer;\n","import { combineReducers } from 'redux';\nimport drinkReducer from './drinkReducer';\nimport foodReducer from './foodReducer';\nimport searchBarReducer from './searchBarReducer';\n\nconst reducer = combineReducers({ foodReducer, drinkReducer, searchBarReducer });\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter basename=\"/recipes-app\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}