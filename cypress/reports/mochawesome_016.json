{
  "stats": {
    "suites": 8,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2021-08-05T14:26:58.263Z",
    "end": "2021-08-05T14:27:12.624Z",
    "duration": 14361,
    "testsRegistered": 24,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e818a6c7-b70b-453f-8d95-5503f92cf9f0",
      "title": "",
      "fullFile": "cypress/integration/recipes_list_spec.js",
      "file": "cypress/integration/recipes_list_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "912dddac-6d5b-4a49-a4c5-ab31eeb29ccb",
          "title": "25 - Implemente os elementos da tela principal de receitas respeitando os atributos descritos no protótipo",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A tela tem os data-testids de todos os 12 cards da tela de comidas",
              "fullTitle": "25 - Implemente os elementos da tela principal de receitas respeitando os atributos descritos no protótipo A tela tem os data-testids de todos os 12 cards da tela de comidas",
              "timedOut": null,
              "duration": 2195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nfor (var index = 0; index < 12; index += 1) {\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-recipe-card\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-img\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-name\\\"]\"));\n}\ncy.get('[data-testid=\"12-recipe-card\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-img\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-name\"]').should('not.exist');",
              "err": {},
              "uuid": "ced5193c-ec05-451f-9dd1-67d1fc937c21",
              "parentUUID": "912dddac-6d5b-4a49-a4c5-ab31eeb29ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A tela tem os data-testids de todos os 12 cards da tela de bebidas",
              "fullTitle": "25 - Implemente os elementos da tela principal de receitas respeitando os atributos descritos no protótipo A tela tem os data-testids de todos os 12 cards da tela de bebidas",
              "timedOut": null,
              "duration": 1765,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nfor (var index = 0; index < 12; index += 1) {\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-recipe-card\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-img\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-name\\\"]\"));\n}\ncy.get('[data-testid=\"12-recipe-card\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-img\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-name\"]').should('not.exist');",
              "err": {},
              "uuid": "4f397b33-d2d4-4b6e-affa-913d1be429ec",
              "parentUUID": "912dddac-6d5b-4a49-a4c5-ab31eeb29ccb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ced5193c-ec05-451f-9dd1-67d1fc937c21",
            "4f397b33-d2d4-4b6e-affa-913d1be429ec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3960,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "23ccba0f-0059-4891-80e7-ed93fb313ca7",
          "title": "26 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida, deve-se carregar as 12 primeiras receitas",
              "fullTitle": "26 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card Caso as receitas sejam de comida, deve-se carregar as 12 primeiras receitas",
              "timedOut": null,
              "duration": 526,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "db2f8095-9fe5-4877-855d-59cde22c1db7",
              "parentUUID": "23ccba0f-0059-4891-80e7-ed93fb313ca7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida, deve-se carregar as 12 primeiras receitas",
              "fullTitle": "26 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card Caso as receitas sejam de bebida, deve-se carregar as 12 primeiras receitas",
              "timedOut": null,
              "duration": 278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "ace9586a-a88f-4b04-b550-ff814094f641",
              "parentUUID": "23ccba0f-0059-4891-80e7-ed93fb313ca7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db2f8095-9fe5-4877-855d-59cde22c1db7",
            "ace9586a-a88f-4b04-b550-ff814094f641"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 804,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "92ab7e7d-6aa9-47a9-8b8f-8348923c838f",
          "title": "27 - Implemente os botões de categoria para serem utilizados como filtro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida, deve-se exibir as 5 primeiras categorias de comida",
              "fullTitle": "27 - Implemente os botões de categoria para serem utilizados como filtro Caso as receitas sejam de comida, deve-se exibir as 5 primeiras categorias de comida",
              "timedOut": null,
              "duration": 272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nmealCategoriesMock.meals.slice(0, 5).forEach(function (_ref) {\n  var category = _ref.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\"));\n});\nmealCategoriesMock.meals.slice(5).forEach(function (_ref2) {\n  var category = _ref2.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\")).should('not.exist');\n});",
              "err": {},
              "uuid": "5d445cd4-ce7d-4648-9b8b-ee8d09d820dc",
              "parentUUID": "92ab7e7d-6aa9-47a9-8b8f-8348923c838f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida, deve-se exibir as 5 primeiras categorias de bebida",
              "fullTitle": "27 - Implemente os botões de categoria para serem utilizados como filtro Caso as receitas sejam de bebida, deve-se exibir as 5 primeiras categorias de bebida",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ndrinkCategoriesMock.drinks.slice(0, 5).forEach(function (_ref3) {\n  var category = _ref3.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\"));\n});\ndrinkCategoriesMock.drinks.slice(5).forEach(function (_ref4) {\n  var category = _ref4.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\")).should('not.exist');\n});",
              "err": {},
              "uuid": "3494108c-1210-4646-a9ce-a541373c4a73",
              "parentUUID": "92ab7e7d-6aa9-47a9-8b8f-8348923c838f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d445cd4-ce7d-4648-9b8b-ee8d09d820dc",
            "3494108c-1210-4646-a9ce-a541373c4a73"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 451,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b0f88ce1-afae-45cd-9c6c-0b9a679d9ae5",
          "title": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Beef\", deve-se carregar as 12 primeiras receitas de \"Beef\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Beef\", deve-se carregar as 12 primeiras receitas de \"Beef\"",
              "timedOut": null,
              "duration": 419,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);",
              "err": {},
              "uuid": "65b0a678-9dfc-4c0f-8da4-7c480f3c838d",
              "parentUUID": "b0f88ce1-afae-45cd-9c6c-0b9a679d9ae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Breakfast\", deve-se carregar as 12 primeiras receitas de \"Breakfast\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Breakfast\", deve-se carregar as 12 primeiras receitas de \"Breakfast\"",
              "timedOut": null,
              "duration": 406,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Breakfast-category-filter\"]').click();\ncheckFirstTwelveRecipes(breakfastMealsMock.meals);",
              "err": {},
              "uuid": "0a11bedf-1686-42e5-ad42-83c6882b6fbe",
              "parentUUID": "b0f88ce1-afae-45cd-9c6c-0b9a679d9ae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Chicken\", deve-se carregar as 12 primeiras receitas de \"Chicken\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Chicken\", deve-se carregar as 12 primeiras receitas de \"Chicken\"",
              "timedOut": null,
              "duration": 398,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Chicken-category-filter\"]').click();\ncheckFirstTwelveRecipes(chickenMealsMock.meals);",
              "err": {},
              "uuid": "e72c9bc4-b2a1-4951-b1cb-f662f962c1ee",
              "parentUUID": "b0f88ce1-afae-45cd-9c6c-0b9a679d9ae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Dessert\", deve-se carregar as 12 primeiras receitas de \"Dessert\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Dessert\", deve-se carregar as 12 primeiras receitas de \"Dessert\"",
              "timedOut": null,
              "duration": 397,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Dessert-category-filter\"]').click();\ncheckFirstTwelveRecipes(dessertMealsMock.meals);",
              "err": {},
              "uuid": "49991ae6-1196-47f8-bcac-56a81963f6ba",
              "parentUUID": "b0f88ce1-afae-45cd-9c6c-0b9a679d9ae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Goat\", deve-se carregar as 12 primeiras receitas de \"Goat\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Goat\", deve-se carregar as 12 primeiras receitas de \"Goat\"",
              "timedOut": null,
              "duration": 280,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Goat-category-filter\"]').click();\ncheckFirstTwelveRecipes(goatMealsMock.meals);",
              "err": {},
              "uuid": "c545d05d-2118-4abd-83d7-d4f6882928d1",
              "parentUUID": "b0f88ce1-afae-45cd-9c6c-0b9a679d9ae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Ordinary Drink\", deve-se carregar as 12 primeiras receitas de \"Ordinary Drink\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Ordinary Drink\", deve-se carregar as 12 primeiras receitas de \"Ordinary Drink\"",
              "timedOut": null,
              "duration": 374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);",
              "err": {},
              "uuid": "2416bdb1-27da-466d-9554-c4ccd08496c3",
              "parentUUID": "b0f88ce1-afae-45cd-9c6c-0b9a679d9ae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Cocktail\", deve-se carregar as 12 primeiras receitas de \"Cocktail\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Cocktail\", deve-se carregar as 12 primeiras receitas de \"Cocktail\"",
              "timedOut": null,
              "duration": 373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Cocktail-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocktailDrinksMock.drinks, false);",
              "err": {},
              "uuid": "45aded8c-3984-4d17-955c-3f218cbb5655",
              "parentUUID": "b0f88ce1-afae-45cd-9c6c-0b9a679d9ae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Milk / Float / Shake\", deve-se carregar as 12 primeiras receitas de \"Milk / Float / Shake\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Milk / Float / Shake\", deve-se carregar as 12 primeiras receitas de \"Milk / Float / Shake\"",
              "timedOut": null,
              "duration": 348,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Milk / Float / Shake-category-filter\"]').click();\ncheckFirstTwelveRecipes(milkDrinksMock.drinks, false);",
              "err": {},
              "uuid": "97690489-1245-4cd9-bb0a-34e60bc6e59e",
              "parentUUID": "b0f88ce1-afae-45cd-9c6c-0b9a679d9ae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Other/Unknown\", deve-se carregar as 12 primeiras receitas de \"Other/Unknown\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Other/Unknown\", deve-se carregar as 12 primeiras receitas de \"Other/Unknown\"",
              "timedOut": null,
              "duration": 464,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Other/Unknown-category-filter\"]').click();\ncheckFirstTwelveRecipes(otherDrinksMock.drinks, false);",
              "err": {},
              "uuid": "09dbb516-2088-4aa7-b320-a08d5a6bf44e",
              "parentUUID": "b0f88ce1-afae-45cd-9c6c-0b9a679d9ae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Cocoa\", deve-se carregar as 12 primeiras receitas de \"Cocoa\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Cocoa\", deve-se carregar as 12 primeiras receitas de \"Cocoa\"",
              "timedOut": null,
              "duration": 331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Cocoa-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocoaDrinksMock.drinks, false);",
              "err": {},
              "uuid": "32a90141-b23e-4d7c-aa03-cb86c541a047",
              "parentUUID": "b0f88ce1-afae-45cd-9c6c-0b9a679d9ae5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "65b0a678-9dfc-4c0f-8da4-7c480f3c838d",
            "0a11bedf-1686-42e5-ad42-83c6882b6fbe",
            "e72c9bc4-b2a1-4951-b1cb-f662f962c1ee",
            "49991ae6-1196-47f8-bcac-56a81963f6ba",
            "c545d05d-2118-4abd-83d7-d4f6882928d1",
            "2416bdb1-27da-466d-9554-c4ccd08496c3",
            "45aded8c-3984-4d17-955c-3f218cbb5655",
            "97690489-1245-4cd9-bb0a-34e60bc6e59e",
            "09dbb516-2088-4aa7-b320-a08d5a6bf44e",
            "32a90141-b23e-4d7c-aa03-cb86c541a047"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3790,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bc311f56-d30a-4560-9f63-e827ba30f550",
          "title": "29 - Implemente o filtro como um toggle, que se for selecionado de novo, o app deve retornar as receitas sem nenhum filtro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "fullTitle": "29 - Implemente o filtro como um toggle, que se for selecionado de novo, o app deve retornar as receitas sem nenhum filtro Caso as receitas sejam de comida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "timedOut": null,
              "duration": 542,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "38c54d34-dbd2-497d-b3a7-e1616bb5d79b",
              "parentUUID": "bc311f56-d30a-4560-9f63-e827ba30f550",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "fullTitle": "29 - Implemente o filtro como um toggle, que se for selecionado de novo, o app deve retornar as receitas sem nenhum filtro Caso as receitas sejam de bebida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "timedOut": null,
              "duration": 424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "b7c2f3ba-238c-4aea-94ba-b3d9be45bfd9",
              "parentUUID": "bc311f56-d30a-4560-9f63-e827ba30f550",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38c54d34-dbd2-497d-b3a7-e1616bb5d79b",
            "b7c2f3ba-238c-4aea-94ba-b3d9be45bfd9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 966,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "45f3fc88-2a7f-43d6-9714-54f457d7cc47",
          "title": "30 - Implemente o filtro de categoria para que apenas um seja selecionado por vez",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida apenas um filtro de categoria deve poder ser selecionado por vez",
              "fullTitle": "30 - Implemente o filtro de categoria para que apenas um seja selecionado por vez Caso as receitas sejam de comida apenas um filtro de categoria deve poder ser selecionado por vez",
              "timedOut": null,
              "duration": 540,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);\ncy.get('[data-testid=\"Breakfast-category-filter\"]').click();\ncheckFirstTwelveRecipes(breakfastMealsMock.meals);",
              "err": {},
              "uuid": "cd84f853-de3b-4188-bb8f-5640b741b2f9",
              "parentUUID": "45f3fc88-2a7f-43d6-9714-54f457d7cc47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida apenas um filtro de categoria deve poder ser selecionado por vez",
              "fullTitle": "30 - Implemente o filtro de categoria para que apenas um seja selecionado por vez Caso as receitas sejam de bebida apenas um filtro de categoria deve poder ser selecionado por vez",
              "timedOut": null,
              "duration": 577,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);\ncy.get('[data-testid=\"Cocktail-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocktailDrinksMock.drinks, false);",
              "err": {},
              "uuid": "fb8aed89-7cbb-43ab-a6ab-a7832c0df0fc",
              "parentUUID": "45f3fc88-2a7f-43d6-9714-54f457d7cc47",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cd84f853-de3b-4188-bb8f-5640b741b2f9",
            "fb8aed89-7cbb-43ab-a6ab-a7832c0df0fc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1117,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "03778aff-243a-4a4d-a5c2-acaaad36cf95",
          "title": "31 - Desenvolva o filtro de categorias com a opção de filtrar por todas as categorias",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida deve existir a opção de filtrar por todas as categorias",
              "fullTitle": "31 - Desenvolva o filtro de categorias com a opção de filtrar por todas as categorias Caso as receitas sejam de comida deve existir a opção de filtrar por todas as categorias",
              "timedOut": null,
              "duration": 557,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);\ncy.get('[data-testid=\"All-category-filter\"]').click();\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "dc031f1f-1b16-4810-94ac-d38cd7d98a66",
              "parentUUID": "03778aff-243a-4a4d-a5c2-acaaad36cf95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida deve existir a opção de filtrar por todas as categorias",
              "fullTitle": "31 - Desenvolva o filtro de categorias com a opção de filtrar por todas as categorias Caso as receitas sejam de bebida deve existir a opção de filtrar por todas as categorias",
              "timedOut": null,
              "duration": 502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);\ncy.get('[data-testid=\"All-category-filter\"]').click();\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "55f5463a-4169-4be6-b49e-a5b3e92885e5",
              "parentUUID": "03778aff-243a-4a4d-a5c2-acaaad36cf95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc031f1f-1b16-4810-94ac-d38cd7d98a66",
            "55f5463a-4169-4be6-b49e-a5b3e92885e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1059,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "07f74e97-3ce5-46e2-822b-fba3fa7611c3",
          "title": "32 - Redirecione a pessoa usuária, ao clicar no card, para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida a rota deve mudar para a tela de detalhes da receita",
              "fullTitle": "32 - Redirecione a pessoa usuária, ao clicar no card, para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL Caso as receitas sejam de comida a rota deve mudar para a tela de detalhes da receita",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"0-recipe-card\"]').click();\ncy.location().should(function (loc) {\n  return expect(loc.pathname).to.eq('/comidas/52977');\n});",
              "err": {},
              "uuid": "a2bef311-be4e-4202-912e-fd6a4327a6b6",
              "parentUUID": "07f74e97-3ce5-46e2-822b-fba3fa7611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida a rota deve mudar para a tela de detalhes da receita",
              "fullTitle": "32 - Redirecione a pessoa usuária, ao clicar no card, para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL Caso as receitas sejam de bebida a rota deve mudar para a tela de detalhes da receita",
              "timedOut": null,
              "duration": 260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"0-recipe-card\"]').click();\ncy.location().should(function (loc) {\n  return expect(loc.pathname).to.eq('/bebidas/15997');\n});",
              "err": {},
              "uuid": "f7b765d0-63f1-458f-a5a6-36b6e25ae6a7",
              "parentUUID": "07f74e97-3ce5-46e2-822b-fba3fa7611c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2bef311-be4e-4202-912e-fd6a4327a6b6",
            "f7b765d0-63f1-458f-a5a6-36b6e25ae6a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 495,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}