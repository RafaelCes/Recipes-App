{
  "stats": {
    "suites": 8,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2021-08-10T18:28:56.260Z",
    "end": "2021-08-10T18:29:10.791Z",
    "duration": 14531,
    "testsRegistered": 24,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bd65893f-d1e6-4b5f-a9dd-1c27771938df",
      "title": "",
      "fullFile": "cypress/integration/recipes_list_spec.js",
      "file": "cypress/integration/recipes_list_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7216dc65-ebc1-4b67-b4a6-cf6d7820aa6c",
          "title": "25 - Implemente os elementos da tela principal de receitas respeitando os atributos descritos no protótipo",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A tela tem os data-testids de todos os 12 cards da tela de comidas",
              "fullTitle": "25 - Implemente os elementos da tela principal de receitas respeitando os atributos descritos no protótipo A tela tem os data-testids de todos os 12 cards da tela de comidas",
              "timedOut": null,
              "duration": 1817,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nfor (var index = 0; index < 12; index += 1) {\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-recipe-card\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-img\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-name\\\"]\"));\n}\ncy.get('[data-testid=\"12-recipe-card\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-img\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-name\"]').should('not.exist');",
              "err": {},
              "uuid": "b3b604a1-d769-4566-9fbf-9744616f8b13",
              "parentUUID": "7216dc65-ebc1-4b67-b4a6-cf6d7820aa6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A tela tem os data-testids de todos os 12 cards da tela de bebidas",
              "fullTitle": "25 - Implemente os elementos da tela principal de receitas respeitando os atributos descritos no protótipo A tela tem os data-testids de todos os 12 cards da tela de bebidas",
              "timedOut": null,
              "duration": 545,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nfor (var index = 0; index < 12; index += 1) {\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-recipe-card\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-img\\\"]\"));\n  cy.get(\"[data-testid=\\\"\".concat(index, \"-card-name\\\"]\"));\n}\ncy.get('[data-testid=\"12-recipe-card\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-img\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-name\"]').should('not.exist');",
              "err": {},
              "uuid": "f06c2e77-de75-4c4a-886a-c3a0fd8efd2a",
              "parentUUID": "7216dc65-ebc1-4b67-b4a6-cf6d7820aa6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b3b604a1-d769-4566-9fbf-9744616f8b13",
            "f06c2e77-de75-4c4a-886a-c3a0fd8efd2a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2362,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d99ce667-d7e4-4c9e-95fd-febc51ffabb9",
          "title": "26 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida, deve-se carregar as 12 primeiras receitas",
              "fullTitle": "26 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card Caso as receitas sejam de comida, deve-se carregar as 12 primeiras receitas",
              "timedOut": null,
              "duration": 451,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "3117b4d5-0fb1-481e-b499-664056056c87",
              "parentUUID": "d99ce667-d7e4-4c9e-95fd-febc51ffabb9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida, deve-se carregar as 12 primeiras receitas",
              "fullTitle": "26 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card Caso as receitas sejam de bebida, deve-se carregar as 12 primeiras receitas",
              "timedOut": null,
              "duration": 352,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "b11b62b6-3b0b-4e2c-8e0d-c746f1a82616",
              "parentUUID": "d99ce667-d7e4-4c9e-95fd-febc51ffabb9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3117b4d5-0fb1-481e-b499-664056056c87",
            "b11b62b6-3b0b-4e2c-8e0d-c746f1a82616"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 803,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "42b9c634-8f58-4d4d-b598-95974884bf64",
          "title": "27 - Implemente os botões de categoria para serem utilizados como filtro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida, deve-se exibir as 5 primeiras categorias de comida",
              "fullTitle": "27 - Implemente os botões de categoria para serem utilizados como filtro Caso as receitas sejam de comida, deve-se exibir as 5 primeiras categorias de comida",
              "timedOut": null,
              "duration": 308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nmealCategoriesMock.meals.slice(0, 5).forEach(function (_ref) {\n  var category = _ref.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\"));\n});\nmealCategoriesMock.meals.slice(5).forEach(function (_ref2) {\n  var category = _ref2.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\")).should('not.exist');\n});",
              "err": {},
              "uuid": "8e4fd1d3-e364-4df9-9467-62b7375d51ee",
              "parentUUID": "42b9c634-8f58-4d4d-b598-95974884bf64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida, deve-se exibir as 5 primeiras categorias de bebida",
              "fullTitle": "27 - Implemente os botões de categoria para serem utilizados como filtro Caso as receitas sejam de bebida, deve-se exibir as 5 primeiras categorias de bebida",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ndrinkCategoriesMock.drinks.slice(0, 5).forEach(function (_ref3) {\n  var category = _ref3.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\"));\n});\ndrinkCategoriesMock.drinks.slice(5).forEach(function (_ref4) {\n  var category = _ref4.strCategory;\n  cy.get(\"[data-testid=\\\"\".concat(category, \"-category-filter\\\"]\")).should('not.exist');\n});",
              "err": {},
              "uuid": "630a8842-f887-4493-85c4-29a487bc81dc",
              "parentUUID": "42b9c634-8f58-4d4d-b598-95974884bf64",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e4fd1d3-e364-4df9-9467-62b7375d51ee",
            "630a8842-f887-4493-85c4-29a487bc81dc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 509,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1b6e135f-b24e-440c-ae62-4357352e9134",
          "title": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Beef\", deve-se carregar as 12 primeiras receitas de \"Beef\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Beef\", deve-se carregar as 12 primeiras receitas de \"Beef\"",
              "timedOut": null,
              "duration": 521,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);",
              "err": {},
              "uuid": "b477b9c5-b00f-465d-92e1-a265877ab136",
              "parentUUID": "1b6e135f-b24e-440c-ae62-4357352e9134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Breakfast\", deve-se carregar as 12 primeiras receitas de \"Breakfast\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Breakfast\", deve-se carregar as 12 primeiras receitas de \"Breakfast\"",
              "timedOut": null,
              "duration": 390,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Breakfast-category-filter\"]').click();\ncheckFirstTwelveRecipes(breakfastMealsMock.meals);",
              "err": {},
              "uuid": "788bdfee-1eaa-46db-a3ab-2def9ca30b15",
              "parentUUID": "1b6e135f-b24e-440c-ae62-4357352e9134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Chicken\", deve-se carregar as 12 primeiras receitas de \"Chicken\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Chicken\", deve-se carregar as 12 primeiras receitas de \"Chicken\"",
              "timedOut": null,
              "duration": 502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Chicken-category-filter\"]').click();\ncheckFirstTwelveRecipes(chickenMealsMock.meals);",
              "err": {},
              "uuid": "e066803c-1696-446d-9f96-1b1d4e35061f",
              "parentUUID": "1b6e135f-b24e-440c-ae62-4357352e9134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Dessert\", deve-se carregar as 12 primeiras receitas de \"Dessert\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Dessert\", deve-se carregar as 12 primeiras receitas de \"Dessert\"",
              "timedOut": null,
              "duration": 446,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Dessert-category-filter\"]').click();\ncheckFirstTwelveRecipes(dessertMealsMock.meals);",
              "err": {},
              "uuid": "2c4a45d8-8c95-446f-8616-5a67ef3904ab",
              "parentUUID": "1b6e135f-b24e-440c-ae62-4357352e9134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Goat\", deve-se carregar as 12 primeiras receitas de \"Goat\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Goat\", deve-se carregar as 12 primeiras receitas de \"Goat\"",
              "timedOut": null,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Goat-category-filter\"]').click();\ncheckFirstTwelveRecipes(goatMealsMock.meals);",
              "err": {},
              "uuid": "b66ea286-f3f1-4468-870f-03e030b63962",
              "parentUUID": "1b6e135f-b24e-440c-ae62-4357352e9134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Ordinary Drink\", deve-se carregar as 12 primeiras receitas de \"Ordinary Drink\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Ordinary Drink\", deve-se carregar as 12 primeiras receitas de \"Ordinary Drink\"",
              "timedOut": null,
              "duration": 465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);",
              "err": {},
              "uuid": "b8512e19-d568-4318-a391-b6ab3cb02086",
              "parentUUID": "1b6e135f-b24e-440c-ae62-4357352e9134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Cocktail\", deve-se carregar as 12 primeiras receitas de \"Cocktail\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Cocktail\", deve-se carregar as 12 primeiras receitas de \"Cocktail\"",
              "timedOut": null,
              "duration": 468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Cocktail-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocktailDrinksMock.drinks, false);",
              "err": {},
              "uuid": "b60e56a1-2695-4ccd-ad06-6c79af621d05",
              "parentUUID": "1b6e135f-b24e-440c-ae62-4357352e9134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Milk / Float / Shake\", deve-se carregar as 12 primeiras receitas de \"Milk / Float / Shake\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Milk / Float / Shake\", deve-se carregar as 12 primeiras receitas de \"Milk / Float / Shake\"",
              "timedOut": null,
              "duration": 438,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Milk / Float / Shake-category-filter\"]').click();\ncheckFirstTwelveRecipes(milkDrinksMock.drinks, false);",
              "err": {},
              "uuid": "beb0b7ec-7c52-496b-a2ec-dd04a53adf67",
              "parentUUID": "1b6e135f-b24e-440c-ae62-4357352e9134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Other/Unknown\", deve-se carregar as 12 primeiras receitas de \"Other/Unknown\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Other/Unknown\", deve-se carregar as 12 primeiras receitas de \"Other/Unknown\"",
              "timedOut": null,
              "duration": 504,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Other/Unknown-category-filter\"]').click();\ncheckFirstTwelveRecipes(otherDrinksMock.drinks, false);",
              "err": {},
              "uuid": "ea2d33ae-e46b-41c3-ac78-4f65945b84b7",
              "parentUUID": "1b6e135f-b24e-440c-ae62-4357352e9134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Cocoa\", deve-se carregar as 12 primeiras receitas de \"Cocoa\"",
              "fullTitle": "28 - Implemente o filtro das receitas através da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Cocoa\", deve-se carregar as 12 primeiras receitas de \"Cocoa\"",
              "timedOut": null,
              "duration": 415,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Cocoa-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocoaDrinksMock.drinks, false);",
              "err": {},
              "uuid": "83267687-9198-413d-b962-569edd47ec0a",
              "parentUUID": "1b6e135f-b24e-440c-ae62-4357352e9134",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b477b9c5-b00f-465d-92e1-a265877ab136",
            "788bdfee-1eaa-46db-a3ab-2def9ca30b15",
            "e066803c-1696-446d-9f96-1b1d4e35061f",
            "2c4a45d8-8c95-446f-8616-5a67ef3904ab",
            "b66ea286-f3f1-4468-870f-03e030b63962",
            "b8512e19-d568-4318-a391-b6ab3cb02086",
            "b60e56a1-2695-4ccd-ad06-6c79af621d05",
            "beb0b7ec-7c52-496b-a2ec-dd04a53adf67",
            "ea2d33ae-e46b-41c3-ac78-4f65945b84b7",
            "83267687-9198-413d-b962-569edd47ec0a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4467,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "18cb8ca6-dffd-490f-a09c-ffaaba7def5e",
          "title": "29 - Implemente o filtro como um toggle, que se for selecionado de novo, o app deve retornar as receitas sem nenhum filtro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "fullTitle": "29 - Implemente o filtro como um toggle, que se for selecionado de novo, o app deve retornar as receitas sem nenhum filtro Caso as receitas sejam de comida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "timedOut": null,
              "duration": 478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "547013bd-b5af-4a09-8511-a5eccc30bafc",
              "parentUUID": "18cb8ca6-dffd-490f-a09c-ffaaba7def5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "fullTitle": "29 - Implemente o filtro como um toggle, que se for selecionado de novo, o app deve retornar as receitas sem nenhum filtro Caso as receitas sejam de bebida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "timedOut": null,
              "duration": 519,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "c57cc9ed-ebd2-4a5c-b044-03cf5552433d",
              "parentUUID": "18cb8ca6-dffd-490f-a09c-ffaaba7def5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "547013bd-b5af-4a09-8511-a5eccc30bafc",
            "c57cc9ed-ebd2-4a5c-b044-03cf5552433d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 997,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3c44dfaa-e9e9-4d09-b263-7c565dad4463",
          "title": "30 - Implemente o filtro de categoria para que apenas um seja selecionado por vez",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida apenas um filtro de categoria deve poder ser selecionado por vez",
              "fullTitle": "30 - Implemente o filtro de categoria para que apenas um seja selecionado por vez Caso as receitas sejam de comida apenas um filtro de categoria deve poder ser selecionado por vez",
              "timedOut": null,
              "duration": 594,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);\ncy.get('[data-testid=\"Breakfast-category-filter\"]').click();\ncheckFirstTwelveRecipes(breakfastMealsMock.meals);",
              "err": {},
              "uuid": "3d0b8069-cce3-4698-ace8-2aae080f4d0f",
              "parentUUID": "3c44dfaa-e9e9-4d09-b263-7c565dad4463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida apenas um filtro de categoria deve poder ser selecionado por vez",
              "fullTitle": "30 - Implemente o filtro de categoria para que apenas um seja selecionado por vez Caso as receitas sejam de bebida apenas um filtro de categoria deve poder ser selecionado por vez",
              "timedOut": null,
              "duration": 620,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);\ncy.get('[data-testid=\"Cocktail-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocktailDrinksMock.drinks, false);",
              "err": {},
              "uuid": "06f88273-5eb6-4fdd-9c94-f02b13583ed1",
              "parentUUID": "3c44dfaa-e9e9-4d09-b263-7c565dad4463",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d0b8069-cce3-4698-ace8-2aae080f4d0f",
            "06f88273-5eb6-4fdd-9c94-f02b13583ed1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1214,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "74a672c8-caf5-4fc3-8387-b8269dec9c2c",
          "title": "31 - Desenvolva o filtro de categorias com a opção de filtrar por todas as categorias",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida deve existir a opção de filtrar por todas as categorias",
              "fullTitle": "31 - Desenvolva o filtro de categorias com a opção de filtrar por todas as categorias Caso as receitas sejam de comida deve existir a opção de filtrar por todas as categorias",
              "timedOut": null,
              "duration": 730,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);\ncy.get('[data-testid=\"All-category-filter\"]').click();\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "e2be61fa-2a8e-44d3-b108-460194e2fb79",
              "parentUUID": "74a672c8-caf5-4fc3-8387-b8269dec9c2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida deve existir a opção de filtrar por todas as categorias",
              "fullTitle": "31 - Desenvolva o filtro de categorias com a opção de filtrar por todas as categorias Caso as receitas sejam de bebida deve existir a opção de filtrar por todas as categorias",
              "timedOut": null,
              "duration": 724,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);\ncy.get('[data-testid=\"All-category-filter\"]').click();\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "e8300282-2ef3-42b1-b133-b93b8bb2596f",
              "parentUUID": "74a672c8-caf5-4fc3-8387-b8269dec9c2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e2be61fa-2a8e-44d3-b108-460194e2fb79",
            "e8300282-2ef3-42b1-b133-b93b8bb2596f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1454,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3005a048-54c6-4286-a081-fe70bf794033",
          "title": "32 - Redirecione a pessoa usuária, ao clicar no card, para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida a rota deve mudar para a tela de detalhes da receita",
              "fullTitle": "32 - Redirecione a pessoa usuária, ao clicar no card, para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL Caso as receitas sejam de comida a rota deve mudar para a tela de detalhes da receita",
              "timedOut": null,
              "duration": 297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/comidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"0-recipe-card\"]').click();\ncy.location().should(function (loc) {\n  return expect(loc.pathname).to.eq('/comidas/52977');\n});",
              "err": {},
              "uuid": "1bc6477d-0315-4f6c-b4e3-6542a0c7ab79",
              "parentUUID": "3005a048-54c6-4286-a081-fe70bf794033",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida a rota deve mudar para a tela de detalhes da receita",
              "fullTitle": "32 - Redirecione a pessoa usuária, ao clicar no card, para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL Caso as receitas sejam de bebida a rota deve mudar para a tela de detalhes da receita",
              "timedOut": null,
              "duration": 356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/bebidas', {\n  onBeforeLoad: function onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"0-recipe-card\"]').click();\ncy.location().should(function (loc) {\n  return expect(loc.pathname).to.eq('/bebidas/15997');\n});",
              "err": {},
              "uuid": "63f44c3e-b053-4850-834a-693ade4f794b",
              "parentUUID": "3005a048-54c6-4286-a081-fe70bf794033",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1bc6477d-0315-4f6c-b4e3-6542a0c7ab79",
            "63f44c3e-b053-4850-834a-693ade4f794b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 653,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}