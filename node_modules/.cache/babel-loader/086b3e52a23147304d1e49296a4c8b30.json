{"ast":null,"code":"import { fetchAPIName, fetchAPICategory, fetchAPICategoryFilter } from '../../services/fetchAPI';\nexport const FOOD_LIST_SUCCESS = 'FOOD_LIST_SUCCESS';\nexport const FOOD_CATEGORY_SUCCESS = 'FOOD_CATEGORY_SUCCESS';\nexport const FOOD_LIST_CATEGORY_SUCCESS = 'FOOD_LIST_CATEGORY_SUCCESS';\n\nconst foodListSuccess = payload => ({\n  type: FOOD_LIST_SUCCESS,\n  payload\n});\n\nexport const fetchFoodList = name => async dispatch => {\n  const returnFetch = await fetchAPIName(name);\n  dispatch(foodListSuccess(returnFetch));\n};\n\nconst foodCategorySuccess = payload => ({\n  type: FOOD_CATEGORY_SUCCESS,\n  payload\n});\n\nexport const fetchFoodCategory = category => async dispatch => {\n  const returnFetch = await fetchAPICategory(category);\n  dispatch(foodCategorySuccess(returnFetch));\n};\n\nconst foodListByCategorySuccess = payload => ({\n  type: FOOD_LIST_CATEGORY_SUCCESS,\n  payload\n});\n\nconst updateCategory = payload => ({\n  type: UPDATE_CATEGORY,\n  payload\n});\n\nexport const fetchFoodListByCategory = category => async dispatch => {\n  updateCategory(category);\n  const returnFetch = await fetchAPICategoryFilter(category);\n  dispatch(foodListByCategorySuccess(returnFetch));\n};","map":{"version":3,"sources":["/home/rafael/Documents/projects/sd-011-project-recipes-app/src/redux/actions/index.js"],"names":["fetchAPIName","fetchAPICategory","fetchAPICategoryFilter","FOOD_LIST_SUCCESS","FOOD_CATEGORY_SUCCESS","FOOD_LIST_CATEGORY_SUCCESS","foodListSuccess","payload","type","fetchFoodList","name","dispatch","returnFetch","foodCategorySuccess","fetchFoodCategory","category","foodListByCategorySuccess","updateCategory","UPDATE_CATEGORY","fetchFoodListByCategory"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,EAAyCC,sBAAzC,QAAuE,yBAAvE;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;;AAEP,MAAMC,eAAe,GAAIC,OAAD,KAAc;AACpCC,EAAAA,IAAI,EAAEL,iBAD8B;AAEpCI,EAAAA;AAFoC,CAAd,CAAxB;;AAKA,OAAO,MAAME,aAAa,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACzD,QAAMC,WAAW,GAAG,MAAMZ,YAAY,CAACU,IAAD,CAAtC;AACAC,EAAAA,QAAQ,CAACL,eAAe,CAACM,WAAD,CAAhB,CAAR;AACD,CAHM;;AAKP,MAAMC,mBAAmB,GAAIN,OAAD,KAAc;AACxCC,EAAAA,IAAI,EAAEJ,qBADkC;AAExCG,EAAAA;AAFwC,CAAd,CAA5B;;AAKA,OAAO,MAAMO,iBAAiB,GAAIC,QAAD,IAAc,MAAOJ,QAAP,IAAoB;AACjE,QAAMC,WAAW,GAAG,MAAMX,gBAAgB,CAACc,QAAD,CAA1C;AACAJ,EAAAA,QAAQ,CAACE,mBAAmB,CAACD,WAAD,CAApB,CAAR;AACD,CAHM;;AAKP,MAAMI,yBAAyB,GAAIT,OAAD,KAAc;AAC9CC,EAAAA,IAAI,EAAEH,0BADwC;AAE9CE,EAAAA;AAF8C,CAAd,CAAlC;;AAKA,MAAMU,cAAc,GAAIV,OAAD,KAAc;AACnCC,EAAAA,IAAI,EAAEU,eAD6B;AAEnCX,EAAAA;AAFmC,CAAd,CAAvB;;AAKA,OAAO,MAAMY,uBAAuB,GAAIJ,QAAD,IAAc,MAAOJ,QAAP,IAAoB;AACvEM,EAAAA,cAAc,CAACF,QAAD,CAAd;AACA,QAAMH,WAAW,GAAG,MAAMV,sBAAsB,CAACa,QAAD,CAAhD;AACAJ,EAAAA,QAAQ,CAACK,yBAAyB,CAACJ,WAAD,CAA1B,CAAR;AACD,CAJM","sourcesContent":["import { fetchAPIName, fetchAPICategory, fetchAPICategoryFilter } from '../../services/fetchAPI';\n\nexport const FOOD_LIST_SUCCESS = 'FOOD_LIST_SUCCESS';\nexport const FOOD_CATEGORY_SUCCESS = 'FOOD_CATEGORY_SUCCESS';\nexport const FOOD_LIST_CATEGORY_SUCCESS = 'FOOD_LIST_CATEGORY_SUCCESS';\n\nconst foodListSuccess = (payload) => ({\n  type: FOOD_LIST_SUCCESS,\n  payload,\n});\n\nexport const fetchFoodList = (name) => async (dispatch) => {\n  const returnFetch = await fetchAPIName(name);\n  dispatch(foodListSuccess(returnFetch));\n};\n\nconst foodCategorySuccess = (payload) => ({\n  type: FOOD_CATEGORY_SUCCESS,\n  payload,\n});\n\nexport const fetchFoodCategory = (category) => async (dispatch) => {\n  const returnFetch = await fetchAPICategory(category);\n  dispatch(foodCategorySuccess(returnFetch));\n};\n\nconst foodListByCategorySuccess = (payload) => ({\n  type: FOOD_LIST_CATEGORY_SUCCESS,\n  payload,\n});\n\nconst updateCategory = (payload) => ({\n  type: UPDATE_CATEGORY,\n  payload,\n});\n\nexport const fetchFoodListByCategory = (category) => async (dispatch) => {\n  updateCategory(category);\n  const returnFetch = await fetchAPICategoryFilter(category);\n  dispatch(foodListByCategorySuccess(returnFetch));\n};"]},"metadata":{},"sourceType":"module"}