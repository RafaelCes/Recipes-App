{"ast":null,"code":"import _classCallCheck from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{saveFavoriteRecipe,removeFavoriteRecipe}from'../redux/actions/drinkActions';import whiteHeartIcon from\"../images/whiteHeartIcon.svg\";import blackHeartIcon from\"../images/blackHeartIcon.svg\";var DrinkFavoriteButton=/*#__PURE__*/function(_Component){_inherits(DrinkFavoriteButton,_Component);var _super=_createSuper(DrinkFavoriteButton);function DrinkFavoriteButton(){var _this;_classCallCheck(this,DrinkFavoriteButton);_this=_super.call(this);_this.state={whiteHeart:true};_this.handleFavoriteClick=_this.handleFavoriteClick.bind(_assertThisInitialized(_this));_this.setFavoriteIcon=_this.setFavoriteIcon.bind(_assertThisInitialized(_this));return _this;}_createClass(DrinkFavoriteButton,[{key:\"componentDidMount\",value:function componentDidMount(){var id=this.props.id;var whiteHeart=this.state.whiteHeart;var favoriteMeals=JSON.parse(localStorage.getItem('favoriteRecipes'));if(whiteHeart&&favoriteMeals&&favoriteMeals.find(function(item){return item.id===id;})){this.setFavoriteIcon();}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){var id=this.props.id;var whiteHeart=this.state.whiteHeart;var favoriteCocktails=JSON.parse(localStorage.getItem('favoriteRecipes'));if(whiteHeart&&favoriteCocktails&&favoriteCocktails.find(function(item){return item.id===id;})){this.setFavoriteIcon();}}},{key:\"handleFavoriteClick\",value:function handleFavoriteClick(){var _this$props=this.props,favoriteRecipes=_this$props.favoriteRecipes,id=_this$props.id,removeRecipes=_this$props.removeRecipes;var whiteHeart=this.state.whiteHeart;if(whiteHeart===true){favoriteRecipes(id);}if(whiteHeart===false){removeRecipes(id);}this.setState(function(prevState){return{whiteHeart:!prevState.whiteHeart};});}},{key:\"setFavoriteIcon\",value:function setFavoriteIcon(){this.setState({whiteHeart:false});}},{key:\"render\",value:function render(){var _this2=this;var whiteHeart=this.state.whiteHeart;var test=this.props.test;return/*#__PURE__*/React.createElement(\"button\",{className:\"button\",type:\"button\",onClick:function onClick(){return _this2.handleFavoriteClick();}},/*#__PURE__*/React.createElement(\"img\",{\"data-testid\":test,src:whiteHeart?whiteHeartIcon:blackHeartIcon,alt:\"favorite food button\",width:\"120%\"}));}}]);return DrinkFavoriteButton;}(Component);var mapDispatchToProps=function mapDispatchToProps(dispatch){return{favoriteRecipes:function favoriteRecipes(id){return dispatch(saveFavoriteRecipe(id));},removeRecipes:function removeRecipes(id){return dispatch(removeFavoriteRecipe(id));}};};export default connect(null,mapDispatchToProps)(DrinkFavoriteButton);","map":{"version":3,"sources":["/home/rafael/Documents/projects/Recipes-App/src/components/DrinkFavoriteButton.js"],"names":["React","Component","connect","saveFavoriteRecipe","removeFavoriteRecipe","DrinkFavoriteButton","state","whiteHeart","handleFavoriteClick","bind","setFavoriteIcon","id","props","favoriteMeals","JSON","parse","localStorage","getItem","find","item","favoriteCocktails","favoriteRecipes","removeRecipes","setState","prevState","test","whiteHeartIcon","blackHeartIcon","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { saveFavoriteRecipe, removeFavoriteRecipe } from '../redux/actions/drinkActions';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nclass DrinkFavoriteButton extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      whiteHeart: true,\n    };\n\n    this.handleFavoriteClick = this.handleFavoriteClick.bind(this);\n    this.setFavoriteIcon = this.setFavoriteIcon.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props;\n    const { whiteHeart } = this.state;\n    const favoriteMeals = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (whiteHeart && favoriteMeals && favoriteMeals.find((item) => item.id === id)) {\n      this.setFavoriteIcon();\n    }\n  }\n\n  componentDidUpdate() {\n    const { id } = this.props;\n    const { whiteHeart } = this.state;\n    const favoriteCocktails = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (whiteHeart && favoriteCocktails\n      && favoriteCocktails.find((item) => item.id === id)) {\n      this.setFavoriteIcon();\n    }\n  }\n\n  handleFavoriteClick() {\n    const { favoriteRecipes, id, removeRecipes } = this.props;\n    const { whiteHeart } = this.state;\n    if (whiteHeart === true) {\n      favoriteRecipes(id);\n    }\n    if (whiteHeart === false) {\n      removeRecipes(id);\n    }\n    this.setState((prevState) => ({\n      whiteHeart: !prevState.whiteHeart,\n    }));\n  }\n\n  setFavoriteIcon() {\n    this.setState({\n      whiteHeart: false,\n    });\n  }\n\n  render() {\n    const { whiteHeart } = this.state;\n    const { test } = this.props;\n    return (\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={ () => this.handleFavoriteClick() }\n      >\n        <img\n          data-testid={ test }\n          src={ whiteHeart ? whiteHeartIcon : blackHeartIcon }\n          alt=\"favorite food button\"\n          width=\"120%\"\n        />\n      </button>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  favoriteRecipes: (id) => dispatch(saveFavoriteRecipe(id)),\n  removeRecipes: (id) => dispatch(removeFavoriteRecipe(id)),\n});\n\nDrinkFavoriteButton.propTypes = {\n  id: PropTypes.number,\n  favoriteRecipes: PropTypes.func,\n  removeRecipes: PropTypes.func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(DrinkFavoriteButton);\n"]},"metadata":{},"sourceType":"module"}