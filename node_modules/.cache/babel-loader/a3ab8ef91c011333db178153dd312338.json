{"ast":null,"code":"import _classCallCheck from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{Button}from'react-bootstrap';import{fetchFoodListByCategory,updateCategory,fetchFoodList}from'../redux/actions/foodActions';var FoodCategories=/*#__PURE__*/function(_Component){_inherits(FoodCategories,_Component);var _super=_createSuper(FoodCategories);function FoodCategories(){var _this;_classCallCheck(this,FoodCategories);_this=_super.call(this);_this.filterByAll=_this.filterByAll.bind(_assertThisInitialized(_this));_this.filterByCategory=_this.filterByCategory.bind(_assertThisInitialized(_this));return _this;}_createClass(FoodCategories,[{key:\"filterByAll\",value:function filterByAll(){var _this$props=this.props,actionFetchFoodList=_this$props.actionFetchFoodList,actionUpdateCategory=_this$props.actionUpdateCategory;actionUpdateCategory('All');actionFetchFoodList('');}},{key:\"filterByCategory\",value:function filterByCategory(category){var _this$props2=this.props,actionFetchFoodByCategory=_this$props2.actionFetchFoodByCategory,selectedCategory=_this$props2.selectedCategory;if(category===selectedCategory){this.filterByAll();}else{actionFetchFoodByCategory(category);}}},{key:\"render\",value:function render(){var _this2=this;var foodCategories=this.props.foodCategories;return/*#__PURE__*/React.createElement(\"div\",{className:\"category-div\"},/*#__PURE__*/React.createElement(Button,{size:\"sm\",variant:\"outline-dark\",className:\"category-buttons\",type:\"button\",name:\"category\",\"data-testid\":\"All-category-filter\",onClick:this.filterByAll},\"All\"),foodCategories.map(function(item){return/*#__PURE__*/React.createElement(Button,{size:\"sm\",variant:\"outline-dark\",className:\"category-buttons\",type:\"button\",name:\"category\",key:item.strCategory,\"data-testid\":\"\".concat(item.strCategory,\"-category-filter\"),onClick:function onClick(){return _this2.filterByCategory(item.strCategory);}},item.strCategory);}));}}]);return FoodCategories;}(Component);var mapStateToProps=function mapStateToProps(state){return{foodCategories:state.foodReducer.foodCategoriesList,selectedCategory:state.foodReducer.selectedCategory};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{actionFetchFoodByCategory:function actionFetchFoodByCategory(category){return dispatch(fetchFoodListByCategory(category));},actionFetchFoodList:function actionFetchFoodList(name){return dispatch(fetchFoodList(name));},actionUpdateCategory:function actionUpdateCategory(category){return dispatch(updateCategory(category));}};};export default connect(mapStateToProps,mapDispatchToProps)(FoodCategories);","map":{"version":3,"sources":["/home/rafael/Documents/projects/Recipes-App/src/components/FoodCategories.js"],"names":["React","Component","connect","Button","fetchFoodListByCategory","updateCategory","fetchFoodList","FoodCategories","filterByAll","bind","filterByCategory","props","actionFetchFoodList","actionUpdateCategory","category","actionFetchFoodByCategory","selectedCategory","foodCategories","map","item","strCategory","mapStateToProps","state","foodReducer","foodCategoriesList","mapDispatchToProps","dispatch","name"],"mappings":"0yBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,MAAT,KAAuB,iBAAvB,CACA,OAASC,uBAAT,CAAkCC,cAAlC,CAAkDC,aAAlD,KACO,8BADP,C,GAGMC,CAAAA,c,gHACJ,yBAAc,gDACZ,wBACA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB,CACA,MAAKC,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,+BAAxB,CAHY,aAIb,C,4EAEa,iBAC0C,KAAKE,KAD/C,CACJC,mBADI,aACJA,mBADI,CACiBC,oBADjB,aACiBA,oBADjB,CAEZA,oBAAoB,CAAC,KAAD,CAApB,CACAD,mBAAmB,CAAC,EAAD,CAAnB,CACD,C,0DAEgBE,Q,CAAU,kBAC+B,KAAKH,KADpC,CACjBI,yBADiB,cACjBA,yBADiB,CACUC,gBADV,cACUA,gBADV,CAEzB,GAAIF,QAAQ,GAAKE,gBAAjB,CAAmC,CACjC,KAAKR,WAAL,GACD,CAFD,IAEO,CACLO,yBAAyB,CAACD,QAAD,CAAzB,CACD,CACF,C,uCAEQ,oBACCG,CAAAA,cADD,CACoB,KAAKN,KADzB,CACCM,cADD,CAEP,mBACE,2BAAK,SAAS,CAAC,cAAf,eACE,oBAAC,MAAD,EACE,IAAI,CAAC,IADP,CAEE,OAAO,CAAC,cAFV,CAGE,SAAS,CAAC,kBAHZ,CAIE,IAAI,CAAC,QAJP,CAKE,IAAI,CAAC,UALP,CAME,cAAY,qBANd,CAOE,OAAO,CAAG,KAAKT,WAPjB,QADF,CAYIS,cAAc,CAACC,GAAf,CAAmB,SAACC,IAAD,qBACnB,oBAAC,MAAD,EACE,IAAI,CAAC,IADP,CAEE,OAAO,CAAC,cAFV,CAGE,SAAS,CAAC,kBAHZ,CAIE,IAAI,CAAC,QAJP,CAKE,IAAI,CAAC,UALP,CAME,GAAG,CAAGA,IAAI,CAACC,WANb,CAOE,wBAAiBD,IAAI,CAACC,WAAtB,oBAPF,CAQE,OAAO,CAAG,yBAAM,CAAA,MAAI,CAACV,gBAAL,CAAsBS,IAAI,CAACC,WAA3B,CAAN,EARZ,EAUID,IAAI,CAACC,WAVT,CADmB,EAAnB,CAZJ,CADF,CA6BD,C,4BArD0BnB,S,EAwD7B,GAAMoB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCL,cAAc,CAAEK,KAAK,CAACC,WAAN,CAAkBC,kBADA,CAElCR,gBAAgB,CAAEM,KAAK,CAACC,WAAN,CAAkBP,gBAFF,CAAZ,EAAxB,CAKA,GAAMS,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCX,yBAAyB,CAAE,mCAACD,QAAD,QAAcY,CAAAA,QAAQ,CAACtB,uBAAuB,CAACU,QAAD,CAAxB,CAAtB,EADa,CAExCF,mBAAmB,CAAE,6BAACe,IAAD,QAAUD,CAAAA,QAAQ,CAACpB,aAAa,CAACqB,IAAD,CAAd,CAAlB,EAFmB,CAGxCd,oBAAoB,CAAE,8BAACC,QAAD,QAAcY,CAAAA,QAAQ,CAACrB,cAAc,CAACS,QAAD,CAAf,CAAtB,EAHkB,CAAf,EAA3B,CAcA,cAAeZ,CAAAA,OAAO,CAACmB,eAAD,CAAkBI,kBAAlB,CAAP,CAA6ClB,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { fetchFoodListByCategory, updateCategory, fetchFoodList,\n} from '../redux/actions/foodActions';\n\nclass FoodCategories extends Component {\n  constructor() {\n    super();\n    this.filterByAll = this.filterByAll.bind(this);\n    this.filterByCategory = this.filterByCategory.bind(this);\n  }\n\n  filterByAll() {\n    const { actionFetchFoodList, actionUpdateCategory } = this.props;\n    actionUpdateCategory('All');\n    actionFetchFoodList('');\n  }\n\n  filterByCategory(category) {\n    const { actionFetchFoodByCategory, selectedCategory } = this.props;\n    if (category === selectedCategory) {\n      this.filterByAll();\n    } else {\n      actionFetchFoodByCategory(category);\n    }\n  }\n\n  render() {\n    const { foodCategories } = this.props;\n    return (\n      <div className=\"category-div\">\n        <Button\n          size=\"sm\"\n          variant=\"outline-dark\"\n          className=\"category-buttons\"\n          type=\"button\"\n          name=\"category\"\n          data-testid=\"All-category-filter\"\n          onClick={ this.filterByAll }\n        >\n          All\n        </Button>\n        { foodCategories.map((item) => (\n          <Button\n            size=\"sm\"\n            variant=\"outline-dark\"\n            className=\"category-buttons\"\n            type=\"button\"\n            name=\"category\"\n            key={ item.strCategory }\n            data-testid={ `${item.strCategory}-category-filter` }\n            onClick={ () => this.filterByCategory(item.strCategory) }\n          >\n            { item.strCategory }\n          </Button>\n        )) }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodCategories: state.foodReducer.foodCategoriesList,\n  selectedCategory: state.foodReducer.selectedCategory,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionFetchFoodByCategory: (category) => dispatch(fetchFoodListByCategory(category)),\n  actionFetchFoodList: (name) => dispatch(fetchFoodList(name)),\n  actionUpdateCategory: (category) => dispatch(updateCategory(category)),\n});\n\nFoodCategories.propTypes = {\n  actionFetchFoodList: PropTypes.func,\n  actionFetchFoodByCategory: PropTypes.func,\n  actionUpdateCategory: PropTypes.func,\n  foodCategories: PropTypes.array,\n  selectedCategory: PropTypes.array,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodCategories);\n"]},"metadata":{},"sourceType":"module"}