{"ast":null,"code":"import _classCallCheck from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{fetchDrinkCategory,fetchDrinkList,fetchDrinkIngredientList,renderDrinkIngredient}from'../redux/actions/drinkActions';import{DrinkCategories,Header,Footer,DrinkCard}from'../components';var Drinks=/*#__PURE__*/function(_Component){_inherits(Drinks,_Component);var _super=_createSuper(Drinks);function Drinks(){_classCallCheck(this,Drinks);return _super.apply(this,arguments);}_createClass(Drinks,[{key:\"componentDidMount\",value:function componentDidMount(){var _this$props=this.props,actionFetchDrinkList=_this$props.actionFetchDrinkList,actionFetchCategories=_this$props.actionFetchCategories,actionFetchIngredientDrinkList=_this$props.actionFetchIngredientDrinkList,ingredientDrinkQuery=_this$props.ingredientDrinkQuery,actionDrinkIngredient=_this$props.actionDrinkIngredient;if(ingredientDrinkQuery===''){actionFetchDrinkList('');}else{actionFetchIngredientDrinkList(ingredientDrinkQuery);actionDrinkIngredient('');}actionFetchCategories('list');}},{key:\"render\",value:function render(){var drinkCardsList=this.props.drinkCardsList;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,{title:\"Bebidas\",search:true}),/*#__PURE__*/React.createElement(DrinkCategories,null),/*#__PURE__*/React.createElement(\"div\",{className:\"card-list-container\"},drinkCardsList.map(function(item,index){return/*#__PURE__*/React.createElement(DrinkCard,{key:item.idDrink,drink:item,index:index});})),/*#__PURE__*/React.createElement(Footer,null));}}]);return Drinks;}(Component);var mapStateToProps=function mapStateToProps(state){return{drinkCardsList:state.drinkReducer.drinkCardsList,ingredientDrinkQuery:state.drinkReducer.ingredientDrinkQuery};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{actionFetchDrinkList:function actionFetchDrinkList(name){return dispatch(fetchDrinkList(name));},actionFetchCategories:function actionFetchCategories(category){return dispatch(fetchDrinkCategory(category));},actionFetchIngredientDrinkList:function actionFetchIngredientDrinkList(ingredient){dispatch(fetchDrinkIngredientList(ingredient));},actionDrinkIngredient:function actionDrinkIngredient(ingredient){return dispatch(renderDrinkIngredient(ingredient));}};};export default connect(mapStateToProps,mapDispatchToProps)(Drinks);","map":{"version":3,"sources":["/home/rafael/Documents/projects/Recipes-App/src/pages/Drinks.js"],"names":["React","Component","connect","fetchDrinkCategory","fetchDrinkList","fetchDrinkIngredientList","renderDrinkIngredient","DrinkCategories","Header","Footer","DrinkCard","Drinks","props","actionFetchDrinkList","actionFetchCategories","actionFetchIngredientDrinkList","ingredientDrinkQuery","actionDrinkIngredient","drinkCardsList","map","item","index","idDrink","mapStateToProps","state","drinkReducer","mapDispatchToProps","dispatch","name","category","ingredient"],"mappings":"wnBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,kBAAT,CAA6BC,cAA7B,CACEC,wBADF,CAC4BC,qBAD5B,KACyD,+BADzD,CAEA,OAASC,eAAT,CAA0BC,MAA1B,CAAkCC,MAAlC,CAA0CC,SAA1C,KAA2D,eAA3D,C,GAEMC,CAAAA,M,oQACgB,iBAGU,KAAKC,KAHf,CACVC,oBADU,aACVA,oBADU,CACYC,qBADZ,aACYA,qBADZ,CAEhBC,8BAFgB,aAEhBA,8BAFgB,CAEgBC,oBAFhB,aAEgBA,oBAFhB,CAGhBC,qBAHgB,aAGhBA,qBAHgB,CAIlB,GAAID,oBAAoB,GAAK,EAA7B,CAAiC,CAC/BH,oBAAoB,CAAC,EAAD,CAApB,CACD,CAFD,IAEO,CACLE,8BAA8B,CAACC,oBAAD,CAA9B,CACAC,qBAAqB,CAAC,EAAD,CAArB,CACD,CACDH,qBAAqB,CAAC,MAAD,CAArB,CACD,C,uCAEQ,IACCI,CAAAA,cADD,CACoB,KAAKN,KADzB,CACCM,cADD,CAEP,mBACE,4CACE,oBAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,MAAM,KAA9B,EADF,cAEE,oBAAC,eAAD,MAFF,cAGE,2BAAK,SAAS,CAAC,qBAAf,EACIA,cAAc,CAACC,GAAf,CAAmB,SAACC,IAAD,CAAOC,KAAP,qBACnB,oBAAC,SAAD,EAAW,GAAG,CAAGD,IAAI,CAACE,OAAtB,CAAgC,KAAK,CAAGF,IAAxC,CAA+C,KAAK,CAAGC,KAAvD,EADmB,EAAnB,CADJ,CAHF,cAOE,oBAAC,MAAD,MAPF,CADF,CAWD,C,oBA3BkBpB,S,EA8BrB,GAAMsB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCN,cAAc,CAAEM,KAAK,CAACC,YAAN,CAAmBP,cADD,CAElCF,oBAAoB,CAAEQ,KAAK,CAACC,YAAN,CAAmBT,oBAFP,CAAZ,EAAxB,CAKA,GAAMU,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCd,oBAAoB,CAAE,8BAACe,IAAD,QAAUD,CAAAA,QAAQ,CAACvB,cAAc,CAACwB,IAAD,CAAf,CAAlB,EADkB,CAExCd,qBAAqB,CAAE,+BAACe,QAAD,QAAcF,CAAAA,QAAQ,CAACxB,kBAAkB,CAAC0B,QAAD,CAAnB,CAAtB,EAFiB,CAGxCd,8BAA8B,CAAE,wCAACe,UAAD,CAAgB,CAC9CH,QAAQ,CAACtB,wBAAwB,CAACyB,UAAD,CAAzB,CAAR,CACD,CALuC,CAMxCb,qBAAqB,CAAE,+BAACa,UAAD,QAAgBH,CAAAA,QAAQ,CAACrB,qBAAqB,CAACwB,UAAD,CAAtB,CAAxB,EANiB,CAAf,EAA3B,CAcA,cAAe5B,CAAAA,OAAO,CAACqB,eAAD,CAAkBG,kBAAlB,CAAP,CAA6Cf,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchDrinkCategory, fetchDrinkList,\n  fetchDrinkIngredientList, renderDrinkIngredient } from '../redux/actions/drinkActions';\nimport { DrinkCategories, Header, Footer, DrinkCard } from '../components';\n\nclass Drinks extends Component {\n  componentDidMount() {\n    const { actionFetchDrinkList, actionFetchCategories,\n      actionFetchIngredientDrinkList, ingredientDrinkQuery,\n      actionDrinkIngredient } = this.props;\n    if (ingredientDrinkQuery === '') {\n      actionFetchDrinkList('');\n    } else {\n      actionFetchIngredientDrinkList(ingredientDrinkQuery);\n      actionDrinkIngredient('');\n    }\n    actionFetchCategories('list');\n  }\n\n  render() {\n    const { drinkCardsList } = this.props;\n    return (\n      <div>\n        <Header title=\"Bebidas\" search />\n        <DrinkCategories />\n        <div className=\"card-list-container\">\n          { drinkCardsList.map((item, index) => (\n            <DrinkCard key={ item.idDrink } drink={ item } index={ index } />)) }\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  drinkCardsList: state.drinkReducer.drinkCardsList,\n  ingredientDrinkQuery: state.drinkReducer.ingredientDrinkQuery,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionFetchDrinkList: (name) => dispatch(fetchDrinkList(name)),\n  actionFetchCategories: (category) => dispatch(fetchDrinkCategory(category)),\n  actionFetchIngredientDrinkList: (ingredient) => {\n    dispatch(fetchDrinkIngredientList(ingredient));\n  },\n  actionDrinkIngredient: (ingredient) => dispatch(renderDrinkIngredient(ingredient)),\n});\n\nDrinks.propTypes = {\n  actionFetchDrinkList: PropTypes.func,\n  actionFetchCategories: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Drinks);\n"]},"metadata":{},"sourceType":"module"}