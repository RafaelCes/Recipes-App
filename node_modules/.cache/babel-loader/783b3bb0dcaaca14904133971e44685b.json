{"ast":null,"code":"import _classCallCheck from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{Button}from'react-bootstrap';import{fetchDrinkListByCategory,updateCategory,fetchDrinkList}from'../redux/actions/drinkActions';var DrinkCategories=/*#__PURE__*/function(_Component){_inherits(DrinkCategories,_Component);var _super=_createSuper(DrinkCategories);function DrinkCategories(){var _this;_classCallCheck(this,DrinkCategories);_this=_super.call(this);_this.filterByAll=_this.filterByAll.bind(_assertThisInitialized(_this));_this.filterByCategory=_this.filterByCategory.bind(_assertThisInitialized(_this));return _this;}_createClass(DrinkCategories,[{key:\"filterByAll\",value:function filterByAll(){var _this$props=this.props,actionFetchDrinkList=_this$props.actionFetchDrinkList,actionUpdateCategory=_this$props.actionUpdateCategory;actionUpdateCategory('All');actionFetchDrinkList('');}},{key:\"filterByCategory\",value:function filterByCategory(category){var _this$props2=this.props,actionFetchDrinkByCategory=_this$props2.actionFetchDrinkByCategory,selectedCategory=_this$props2.selectedCategory;if(category===selectedCategory){this.filterByAll();}else{actionFetchDrinkByCategory(category);}}},{key:\"render\",value:function render(){var _this2=this;var drinkCategories=this.props.drinkCategories;return/*#__PURE__*/React.createElement(\"div\",{className:\"category-div\"},/*#__PURE__*/React.createElement(Button,{size:\"sm\",variant:\"outline-dark\",className:\"category-drink-buttons\",type:\"button\",name:\"category\",\"data-testid\":\"All-category-filter\",onClick:this.filterByAll},\"All\"),drinkCategories.map(function(item){return/*#__PURE__*/React.createElement(Button,{size:\"sm\",variant:\"outline-dark\",className:\"category-drink-buttons\",type:\"button\",name:\"category\",key:item.strCategory,\"data-testid\":\"\".concat(item.strCategory,\"-category-filter\"),onClick:function onClick(){return _this2.filterByCategory(item.strCategory);}},item.strCategory);}));}}]);return DrinkCategories;}(Component);var mapStateToProps=function mapStateToProps(state){return{drinkCategories:state.drinkReducer.drinkCategoriesList,selectedCategory:state.drinkReducer.selectedCategory};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{actionFetchDrinkByCategory:function actionFetchDrinkByCategory(category){return dispatch(fetchDrinkListByCategory(category));},actionFetchDrinkList:function actionFetchDrinkList(name){return dispatch(fetchDrinkList(name));},actionUpdateCategory:function actionUpdateCategory(category){return dispatch(updateCategory(category));}};};export default connect(mapStateToProps,mapDispatchToProps)(DrinkCategories);","map":{"version":3,"sources":["/home/rafael/Documents/projects/Recipes-App/src/components/DrinkCategories.js"],"names":["React","Component","connect","Button","fetchDrinkListByCategory","updateCategory","fetchDrinkList","DrinkCategories","filterByAll","bind","filterByCategory","props","actionFetchDrinkList","actionUpdateCategory","category","actionFetchDrinkByCategory","selectedCategory","drinkCategories","map","item","strCategory","mapStateToProps","state","drinkReducer","drinkCategoriesList","mapDispatchToProps","dispatch","name"],"mappings":"0yBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,MAAT,KAAuB,iBAAvB,CACA,OAASC,wBAAT,CAAmCC,cAAnC,CAAmDC,cAAnD,KACO,+BADP,C,GAGMC,CAAAA,e,kHACJ,0BAAc,iDACZ,wBACA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB,CACA,MAAKC,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,+BAAxB,CAHY,aAIb,C,6EAEa,iBAC2C,KAAKE,KADhD,CACJC,oBADI,aACJA,oBADI,CACkBC,oBADlB,aACkBA,oBADlB,CAEZA,oBAAoB,CAAC,KAAD,CAApB,CACAD,oBAAoB,CAAC,EAAD,CAApB,CACD,C,0DAEgBE,Q,CAAU,kBACgC,KAAKH,KADrC,CACjBI,0BADiB,cACjBA,0BADiB,CACWC,gBADX,cACWA,gBADX,CAEzB,GAAIF,QAAQ,GAAKE,gBAAjB,CAAmC,CACjC,KAAKR,WAAL,GACD,CAFD,IAEO,CACLO,0BAA0B,CAACD,QAAD,CAA1B,CACD,CACF,C,uCAEQ,oBACCG,CAAAA,eADD,CACqB,KAAKN,KAD1B,CACCM,eADD,CAEP,mBACE,2BAAK,SAAS,CAAC,cAAf,eACE,oBAAC,MAAD,EACE,IAAI,CAAC,IADP,CAEE,OAAO,CAAC,cAFV,CAGE,SAAS,CAAC,wBAHZ,CAIE,IAAI,CAAC,QAJP,CAKE,IAAI,CAAC,UALP,CAME,cAAY,qBANd,CAOE,OAAO,CAAG,KAAKT,WAPjB,QADF,CAYIS,eAAe,CAACC,GAAhB,CAAoB,SAACC,IAAD,qBACpB,oBAAC,MAAD,EACE,IAAI,CAAC,IADP,CAEE,OAAO,CAAC,cAFV,CAGE,SAAS,CAAC,wBAHZ,CAIE,IAAI,CAAC,QAJP,CAKE,IAAI,CAAC,UALP,CAME,GAAG,CAAGA,IAAI,CAACC,WANb,CAOE,wBAAiBD,IAAI,CAACC,WAAtB,oBAPF,CAQE,OAAO,CAAG,yBAAM,CAAA,MAAI,CAACV,gBAAL,CAAsBS,IAAI,CAACC,WAA3B,CAAN,EARZ,EAUID,IAAI,CAACC,WAVT,CADoB,EAApB,CAZJ,CADF,CA6BD,C,6BArD2BnB,S,EAwD9B,GAAMoB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCL,eAAe,CAAEK,KAAK,CAACC,YAAN,CAAmBC,mBADF,CAElCR,gBAAgB,CAAEM,KAAK,CAACC,YAAN,CAAmBP,gBAFH,CAAZ,EAAxB,CAKA,GAAMS,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCX,0BAA0B,CAAE,oCAACD,QAAD,QAAcY,CAAAA,QAAQ,CAACtB,wBAAwB,CAACU,QAAD,CAAzB,CAAtB,EADY,CAExCF,oBAAoB,CAAE,8BAACe,IAAD,QAAUD,CAAAA,QAAQ,CAACpB,cAAc,CAACqB,IAAD,CAAf,CAAlB,EAFkB,CAGxCd,oBAAoB,CAAE,8BAACC,QAAD,QAAcY,CAAAA,QAAQ,CAACrB,cAAc,CAACS,QAAD,CAAf,CAAtB,EAHkB,CAAf,EAA3B,CAcA,cAAeZ,CAAAA,OAAO,CAACmB,eAAD,CAAkBI,kBAAlB,CAAP,CAA6ClB,eAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { fetchDrinkListByCategory, updateCategory, fetchDrinkList,\n} from '../redux/actions/drinkActions';\n\nclass DrinkCategories extends Component {\n  constructor() {\n    super();\n    this.filterByAll = this.filterByAll.bind(this);\n    this.filterByCategory = this.filterByCategory.bind(this);\n  }\n\n  filterByAll() {\n    const { actionFetchDrinkList, actionUpdateCategory } = this.props;\n    actionUpdateCategory('All');\n    actionFetchDrinkList('');\n  }\n\n  filterByCategory(category) {\n    const { actionFetchDrinkByCategory, selectedCategory } = this.props;\n    if (category === selectedCategory) {\n      this.filterByAll();\n    } else {\n      actionFetchDrinkByCategory(category);\n    }\n  }\n\n  render() {\n    const { drinkCategories } = this.props;\n    return (\n      <div className=\"category-div\">\n        <Button\n          size=\"sm\"\n          variant=\"outline-dark\"\n          className=\"category-drink-buttons\"\n          type=\"button\"\n          name=\"category\"\n          data-testid=\"All-category-filter\"\n          onClick={ this.filterByAll }\n        >\n          All\n        </Button>\n        { drinkCategories.map((item) => (\n          <Button\n            size=\"sm\"\n            variant=\"outline-dark\"\n            className=\"category-drink-buttons\"\n            type=\"button\"\n            name=\"category\"\n            key={ item.strCategory }\n            data-testid={ `${item.strCategory}-category-filter` }\n            onClick={ () => this.filterByCategory(item.strCategory) }\n          >\n            { item.strCategory }\n          </Button>\n        )) }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  drinkCategories: state.drinkReducer.drinkCategoriesList,\n  selectedCategory: state.drinkReducer.selectedCategory,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionFetchDrinkByCategory: (category) => dispatch(fetchDrinkListByCategory(category)),\n  actionFetchDrinkList: (name) => dispatch(fetchDrinkList(name)),\n  actionUpdateCategory: (category) => dispatch(updateCategory(category)),\n});\n\nDrinkCategories.propTypes = {\n  actionFetchDrinkList: PropTypes.func,\n  actionFetchDrinkByCategory: PropTypes.func,\n  actionUpdateCategory: PropTypes.func,\n  drinkCategories: PropTypes.array,\n  selectedCategory: PropTypes.array,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrinkCategories);\n"]},"metadata":{},"sourceType":"module"}