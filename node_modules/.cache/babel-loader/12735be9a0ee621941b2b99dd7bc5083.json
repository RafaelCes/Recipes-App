{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documents/projects/sd-011-project-recipes-app/src/components/Categories.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchFoodListByCategory, updateCategory, fetchFoodList } from '../redux/actions';\n\nclass Categories extends Component {\n  render() {\n    const {\n      foodCategories,\n      actionFetchFoodByCategory,\n      actionFetchFoodList,\n      actionUpdateCategory\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      name: \"category\",\n      onClick: () => {\n        actionUpdateCategory('All');\n        actionFetchFoodList('');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, \"All\"), foodCategories.map(item => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        name: \"category\",\n        key: item.strCategory,\n        \"data-testid\": `${item.strCategory}-category-filter`,\n        onClick: () => actionFetchFoodByCategory(item.strCategory),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, item.strCategory);\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  foodCategories: state.foodReducers.foodCategoriesList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actionFetchFoodByCategory: category => dispatch(fetchFoodListByCategory(category)),\n  actionFetchFoodList: name => dispatch(fetchFoodList(name)),\n  actionUpdateCategory: category => dispatch(updateCategory(category))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","map":{"version":3,"sources":["/home/rafael/Documents/projects/sd-011-project-recipes-app/src/components/Categories.js"],"names":["React","Component","connect","fetchFoodListByCategory","updateCategory","fetchFoodList","Categories","render","foodCategories","actionFetchFoodByCategory","actionFetchFoodList","actionUpdateCategory","props","map","item","strCategory","mapStateToProps","state","foodReducers","foodCategoriesList","mapDispatchToProps","dispatch","category","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,uBAAT,EAAkCC,cAAlC,EAAkDC,aAAlD,QAAuE,kBAAvE;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACjCM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA,yBAAlB;AACHC,MAAAA,mBADG;AACkBC,MAAAA;AADlB,QAC2C,KAAKC,KADtD;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,IAAI,EAAC,UAFL;AAGA,MAAA,OAAO,EAAG,MAAM;AAAED,QAAAA,oBAAoB,CAAC,KAAD,CAApB;AAA6BD,QAAAA,mBAAmB,CAAC,EAAD,CAAnB;AAAyB,OAHxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAQIF,cAAc,CAACK,GAAf,CAAoBC,IAAD,IAAU;AAC7B,0BACA;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,GAAG,EAAGA,IAAI,CAACC,WAHb;AAIE,uBAAc,GAAED,IAAI,CAACC,WAAY,kBAJnC;AAKE,QAAA,OAAO,EAAG,MAAMN,yBAAyB,CAACK,IAAI,CAACC,WAAN,CAL3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOID,IAAI,CAACC,WAPT,CADA;AAWD,KAZC,CARJ,CADF;AAyBD;;AA7BgC;;AAgCnC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,cAAc,EAAES,KAAK,CAACC,YAAN,CAAmBC;AADD,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AAC1CZ,EAAAA,yBAAyB,EAAGa,QAAD,IAAcD,QAAQ,CAAClB,uBAAuB,CAACmB,QAAD,CAAxB,CADP;AAE1CZ,EAAAA,mBAAmB,EAAGa,IAAD,IAAUF,QAAQ,CAAChB,aAAa,CAACkB,IAAD,CAAd,CAFG;AAG1CZ,EAAAA,oBAAoB,EAAGW,QAAD,IAAcD,QAAQ,CAACjB,cAAc,CAACkB,QAAD,CAAf;AAHF,CAAf,CAA3B;;AAMA,eAAepB,OAAO,CAACc,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cd,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchFoodListByCategory, updateCategory, fetchFoodList } from '../redux/actions';\n\nclass Categories extends Component {\n  render() {\n    const { foodCategories, actionFetchFoodByCategory,\n       actionFetchFoodList, actionUpdateCategory } = this.props;\n    return (\n      <div>\n        <button\n        type=\"button\"\n        name=\"category\"\n        onClick={ () => { actionUpdateCategory('All'); actionFetchFoodList('') } }\n        >\n          All\n        </button>\n        { foodCategories.map((item) => {\n          return(\n          <button \n            type=\"button\"\n            name=\"category\"\n            key={ item.strCategory }\n            data-testid={`${item.strCategory}-category-filter`}\n            onClick={ () => actionFetchFoodByCategory(item.strCategory) }\n          >\n            { item.strCategory }\n          </button>\n          );\n        }) }\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodCategories: state.foodReducers.foodCategoriesList,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\nactionFetchFoodByCategory: (category) => dispatch(fetchFoodListByCategory(category)),\nactionFetchFoodList: (name) => dispatch(fetchFoodList(name)),\nactionUpdateCategory: (category) => dispatch(updateCategory(category)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);"]},"metadata":{},"sourceType":"module"}