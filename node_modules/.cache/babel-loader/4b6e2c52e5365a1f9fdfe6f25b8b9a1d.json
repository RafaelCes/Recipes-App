{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documents/projects/sd-011-project-recipes-app/src/components/IngredientesFoodInProgress.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../Footer.css';\n\nclass IngredientesFoodInProgress extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredientsArrayList: []\n    };\n    this.handleOnchange = this.handleOnchange.bind(this);\n    this.saveInLocalStorage = this.saveInLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.markedBox();\n  }\n\n  componentDidUpdate() {}\n\n  handleOnchange({\n    target\n  }) {\n    const {\n      checked,\n      value\n    } = target;\n\n    if (checked) {\n      this.setState(previousState => ({\n        ingredientsArrayList: [...previousState.ingredientsArrayList, Number(value)]\n      }));\n    } else {\n      this.setState(previousState => ({\n        ingredientsArrayList: previousState.ingredientsArrayList.filter(box => box !== Number(value))\n      })).then(() => this.saveInLocalStorage());\n    }\n  }\n\n  saveInLocalStorage() {\n    const {\n      foodDetails\n    } = this.props;\n    const {\n      ingredientsArrayList\n    } = this.state;\n    let inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (!inProgressRecipes) {\n      inProgressRecipes = {\n        cocktails: {},\n        meals: {}\n      };\n    }\n\n    inProgressRecipes.meals[foodDetails.idMeal] = ingredientsArrayList;\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  }\n\n  // ableButton(){\n  // }\n  markedBox() {\n    const {\n      foodDetails\n    } = this.props;\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    console.log(inProgressRecipes, foodDetails);\n\n    if (inProgressRecipes && Object.keys(inProgressRecipes.meals).find(meal => meal === foodDetails)) {\n      console.log(inProgressRecipes);\n      this.setState({\n        ingredientsArrayList: inProgressRecipes.meals[foodDetails.idMeal]\n      });\n    }\n  }\n\n  render() {\n    const {\n      foodDetails\n    } = this.props;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(foodDetails));\n\n    if (array[0].length > 0) {\n      ingredients = array[0].filter(item => item[0].includes('strIngredient')).filter(item => item[1]).map(item => item[1]);\n      measurements = array[0].filter(item => item[0].includes('strMeasure')).filter(item => item[1]).map(item => item[1]);\n    }\n\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, ingredients.map((item, index) => item ? /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: `${index}-check-ingredients`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleOnchange,\n      value: index,\n      id: `${index}-check-ingredients`,\n      type: \"checkbox\",\n      \"data-testid\": `${index}-ingredient-step`,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }), `${item} - ${measurements[index]}`) : ''));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  foodDetails: state.foodReducer.foodDetails\n});\n\nIngredientesFoodInProgress.propTypes = {\n  foodDetails: PropTypes.shape({\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    strYoutube: PropTypes.string,\n    idMeal: PropTypes.string\n  }).isRequired\n};\nexport default connect(mapStateToProps)(IngredientesFoodInProgress);","map":{"version":3,"sources":["/home/rafael/Documents/projects/sd-011-project-recipes-app/src/components/IngredientesFoodInProgress.js"],"names":["React","Component","connect","PropTypes","IngredientesFoodInProgress","constructor","state","ingredientsArrayList","handleOnchange","bind","saveInLocalStorage","componentDidMount","markedBox","componentDidUpdate","target","checked","value","setState","previousState","Number","filter","box","then","foodDetails","props","inProgressRecipes","JSON","parse","localStorage","getItem","cocktails","meals","idMeal","setItem","stringify","console","log","Object","keys","find","meal","render","ingredients","measurements","array","Array","of","entries","length","item","includes","map","index","mapStateToProps","foodReducer","propTypes","shape","strMealThumb","string","strMeal","strCategory","strInstructions","strYoutube","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../Footer.css';\n\nclass IngredientesFoodInProgress extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredientsArrayList: [],\n    }\n  this.handleOnchange = this.handleOnchange.bind(this);\n  this.saveInLocalStorage = this.saveInLocalStorage.bind(this);\n}\n\ncomponentDidMount(){\n  this.markedBox();\n}\n\ncomponentDidUpdate() {\n  \n}\n\n  handleOnchange({ target }) {\n    const { checked, value } = target;\n    if(checked) {\n      this.setState((previousState)=> ({\n        ingredientsArrayList: [...previousState.ingredientsArrayList, Number(value)],\n      }));\n    } else {\n      this.setState((previousState)=> ({\n        ingredientsArrayList: previousState.ingredientsArrayList\n        .filter((box) => box !== Number(value)),\n      }))\n      .then(() => this.saveInLocalStorage());\n    }\n  };\n\n  saveInLocalStorage() {\n    const { foodDetails } = this.props;\n    const { ingredientsArrayList } = this.state;\n    let inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n   if(!inProgressRecipes) {\n    inProgressRecipes = {\n      cocktails: {}, \n      meals: {},\n   }\n    }\n  inProgressRecipes.meals[foodDetails.idMeal] = ingredientsArrayList;\n  localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  };\n\n  // ableButton(){\n\n  // }\n\n  markedBox() {\n    const { foodDetails } = this.props;\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    console.log(inProgressRecipes, foodDetails)\n    if (inProgressRecipes\n      && Object.keys(inProgressRecipes.meals).find((meal)=> meal=== foodDetails)) {\n        console.log(inProgressRecipes);\n    this.setState({\n      ingredientsArrayList: inProgressRecipes.meals[foodDetails.idMeal],\n    });   \n    }\n  }\n\n  render() {\n    const { foodDetails } = this.props;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(foodDetails));\n    if (array[0].length > 0) {\n      ingredients = array[0].filter((item) => item[0].includes('strIngredient'))\n        .filter((item) => item[1]).map((item) => item[1]);\n      measurements = array[0].filter((item) => item[0].includes('strMeasure'))\n        .filter((item) => item[1]).map((item) => item[1]);\n    }\n    return (\n      <ul>\n        { ingredients\n            .map((item, index) => (item\n              ? (\n                <label htmlFor={ `${index}-check-ingredients` }>\n                  <input\n                    onChange={ this.handleOnchange }\n                    value={ index } \n                    id={ `${index}-check-ingredients` }\n                    type=\"checkbox\"\n                    data-testid={ `${index}-ingredient-step` }\n                    key={ index }\n                    />\n             {`${item} - ${measurements[index]}`}\n                </label>\n                )\n                : ''))}\n      </ul>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodDetails: state.foodReducer.foodDetails,\n});\n\nIngredientesFoodInProgress.propTypes = {\n  foodDetails: PropTypes.shape({\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    strYoutube: PropTypes.string,\n    idMeal: PropTypes.string,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps)(IngredientesFoodInProgress);\n"]},"metadata":{},"sourceType":"module"}