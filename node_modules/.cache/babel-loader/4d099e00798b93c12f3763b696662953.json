{"ast":null,"code":"import _regeneratorRuntime from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{fetchAPIName,fetchFoodIngredientSearch,fetchAPIFirstLetter}from'../../services/fetchAPIFood';import{fetchDrinkIngredientSearch,fetchAPIFirstLetter as fetchDrinkFirstLetter,fetchAPIName as fetchDrinkName}from'../../services/fetchAPIDrink';export var UPDATE_QUERY='UPDATE_QUERY';export var UPDATE_SELECTED_FILTER='UPDATE_SELECTED_FILTER';export var SAVE_SEARCH_RESULTS='SAVE_SEARCH_RESULTS';export var updateQuery=function updateQuery(payload){return{type:UPDATE_QUERY,payload:payload};};export var updateSelectedFilter=function updateSelectedFilter(payload){return{type:UPDATE_SELECTED_FILTER,payload:payload};};var saveSearchResults=function saveSearchResults(payload){return{type:SAVE_SEARCH_RESULTS,payload:payload};};export var executeFoodSearch=function executeFoodSearch(query,filter){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var ingredientsResult,nameResults,firstLetterResults;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=filter;_context.next=_context.t0==='ingredient'?3:_context.t0==='name'?9:_context.t0==='firstLetter'?15:9;break;case 3:_context.next=5;return fetchFoodIngredientSearch(query);case 5:ingredientsResult=_context.sent;_context.next=8;return dispatch(saveSearchResults(ingredientsResult));case 8:return _context.abrupt(\"break\",21);case 9:_context.next=11;return fetchAPIName(query);case 11:nameResults=_context.sent;_context.next=14;return dispatch(saveSearchResults(nameResults));case 14:return _context.abrupt(\"break\",21);case 15:_context.next=17;return fetchAPIFirstLetter(query);case 17:firstLetterResults=_context.sent;_context.next=20;return dispatch(saveSearchResults(firstLetterResults));case 20:return _context.abrupt(\"break\",21);case 21:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var executeDrinkSearch=function executeDrinkSearch(query,filter){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var ingredientsResult,nameResults,firstLetterResults;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.t0=filter;_context2.next=_context2.t0==='ingredient'?3:_context2.t0==='name'?9:_context2.t0==='firstLetter'?15:9;break;case 3:_context2.next=5;return fetchDrinkIngredientSearch(query);case 5:ingredientsResult=_context2.sent;_context2.next=8;return dispatch(saveSearchResults(ingredientsResult));case 8:return _context2.abrupt(\"break\",22);case 9:_context2.next=11;return fetchDrinkName(query);case 11:nameResults=_context2.sent;_context2.next=14;return dispatch(saveSearchResults(nameResults));case 14:return _context2.abrupt(\"break\",22);case 15:_context2.next=17;return fetchDrinkFirstLetter(query);case 17:firstLetterResults=_context2.sent;console.log(firstLetterResults);_context2.next=21;return dispatch(saveSearchResults(firstLetterResults));case 21:return _context2.abrupt(\"break\",22);case 22:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/rafael/Documents/projects/Recipes-App/src/redux/actions/searchBarActions.js"],"names":["fetchAPIName","fetchFoodIngredientSearch","fetchAPIFirstLetter","fetchDrinkIngredientSearch","fetchDrinkFirstLetter","fetchDrinkName","UPDATE_QUERY","UPDATE_SELECTED_FILTER","SAVE_SEARCH_RESULTS","updateQuery","payload","type","updateSelectedFilter","saveSearchResults","executeFoodSearch","query","filter","dispatch","ingredientsResult","nameResults","firstLetterResults","executeDrinkSearch","console","log"],"mappings":"iUAAA,OAASA,YAAT,CAAuBC,yBAAvB,CACEC,mBADF,KAC6B,6BAD7B,CAEA,OAASC,0BAAT,CAAqCD,mBAAmB,GAAIE,CAAAA,qBAA5D,CACEJ,YAAY,GAAIK,CAAAA,cADlB,KACwC,8BADxC,CAGA,MAAO,IAAMC,CAAAA,YAAY,CAAG,cAArB,CACP,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,wBAA/B,CACP,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,qBAA5B,CAEP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,OAAD,QAAc,CACvCC,IAAI,CAAEL,YADiC,CAEvCI,OAAO,CAAPA,OAFuC,CAAd,EAApB,CAKP,MAAO,IAAME,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACF,OAAD,QAAc,CAChDC,IAAI,CAAEJ,sBAD0C,CAEhDG,OAAO,CAAPA,OAFgD,CAAd,EAA7B,CAKP,GAAMG,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACH,OAAD,QAAc,CACtCC,IAAI,CAAEH,mBADgC,CAEtCE,OAAO,CAAPA,OAFsC,CAAd,EAA1B,CAKA,MAAO,IAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAQC,MAAR,iGAAmB,iBAAOC,QAAP,mLAC1CD,MAD0C,6BAE7C,YAF6C,iBAQ7C,MAR6C,iBAa7C,aAb6C,yCAGhBf,CAAAA,yBAAyB,CAACc,KAAD,CAHT,QAG1CG,iBAH0C,qCAI1CD,CAAAA,QAAQ,CAACJ,iBAAiB,CAACK,iBAAD,CAAlB,CAJkC,yEAStBlB,CAAAA,YAAY,CAACe,KAAD,CATU,SAS1CI,WAT0C,sCAU1CF,CAAAA,QAAQ,CAACJ,iBAAiB,CAACM,WAAD,CAAlB,CAVkC,2EAcfjB,CAAAA,mBAAmB,CAACa,KAAD,CAdJ,SAc1CK,kBAd0C,sCAe1CH,CAAAA,QAAQ,CAACJ,iBAAiB,CAACO,kBAAD,CAAlB,CAfkC,mGAAnB,gEAA1B,CAqBP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACN,KAAD,CAAQC,MAAR,kGAAmB,kBAAOC,QAAP,wLAC3CD,MAD2C,+BAE9C,YAF8C,kBAQ9C,MAR8C,kBAa9C,aAb8C,0CAGjBb,CAAAA,0BAA0B,CAACY,KAAD,CAHT,QAG3CG,iBAH2C,uCAI3CD,CAAAA,QAAQ,CAACJ,iBAAiB,CAACK,iBAAD,CAAlB,CAJmC,2EASvBb,CAAAA,cAAc,CAACU,KAAD,CATS,SAS3CI,WAT2C,wCAU3CF,CAAAA,QAAQ,CAACJ,iBAAiB,CAACM,WAAD,CAAlB,CAVmC,6EAchBf,CAAAA,qBAAqB,CAACW,KAAD,CAdL,SAc3CK,kBAd2C,gBAejDE,OAAO,CAACC,GAAR,CAAYH,kBAAZ,EAfiD,wBAgB3CH,CAAAA,QAAQ,CAACJ,iBAAiB,CAACO,kBAAD,CAAlB,CAhBmC,sGAAnB,kEAA3B","sourcesContent":["import { fetchAPIName, fetchFoodIngredientSearch,\n  fetchAPIFirstLetter } from '../../services/fetchAPIFood';\nimport { fetchDrinkIngredientSearch, fetchAPIFirstLetter as fetchDrinkFirstLetter,\n  fetchAPIName as fetchDrinkName } from '../../services/fetchAPIDrink';\n\nexport const UPDATE_QUERY = 'UPDATE_QUERY';\nexport const UPDATE_SELECTED_FILTER = 'UPDATE_SELECTED_FILTER';\nexport const SAVE_SEARCH_RESULTS = 'SAVE_SEARCH_RESULTS';\n\nexport const updateQuery = (payload) => ({\n  type: UPDATE_QUERY,\n  payload,\n});\n\nexport const updateSelectedFilter = (payload) => ({\n  type: UPDATE_SELECTED_FILTER,\n  payload,\n});\n\nconst saveSearchResults = (payload) => ({\n  type: SAVE_SEARCH_RESULTS,\n  payload,\n});\n\nexport const executeFoodSearch = (query, filter) => async (dispatch) => {\n  switch (filter) {\n  case 'ingredient': {\n    const ingredientsResult = await fetchFoodIngredientSearch(query);\n    await dispatch(saveSearchResults(ingredientsResult));\n    break;\n  }\n  default:\n  case 'name': {\n    const nameResults = await fetchAPIName(query);\n    await dispatch(saveSearchResults(nameResults));\n    break;\n  }\n  case 'firstLetter': {\n    const firstLetterResults = await fetchAPIFirstLetter(query);\n    await dispatch(saveSearchResults(firstLetterResults));\n    break;\n  }\n  }\n};\n\nexport const executeDrinkSearch = (query, filter) => async (dispatch) => {\n  switch (filter) {\n  case 'ingredient': {\n    const ingredientsResult = await fetchDrinkIngredientSearch(query);\n    await dispatch(saveSearchResults(ingredientsResult));\n    break;\n  }\n  default:\n  case 'name': {\n    const nameResults = await fetchDrinkName(query);\n    await dispatch(saveSearchResults(nameResults));\n    break;\n  }\n  case 'firstLetter': {\n    const firstLetterResults = await fetchDrinkFirstLetter(query);\n    console.log(firstLetterResults);\n    await dispatch(saveSearchResults(firstLetterResults));\n    break;\n  }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}