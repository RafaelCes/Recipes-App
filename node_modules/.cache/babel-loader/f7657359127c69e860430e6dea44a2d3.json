{"ast":null,"code":"import _classCallCheck from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import Card from'react-bootstrap/Card';import ShareButton from'./ShareButton';import FavoriteButton from'./FavoriteButton';// import '../FoodAndDrinkDetails.css';\nvar FoodDetailsCard=/*#__PURE__*/function(_Component){_inherits(FoodDetailsCard,_Component);var _super=_createSuper(FoodDetailsCard);function FoodDetailsCard(){_classCallCheck(this,FoodDetailsCard);return _super.apply(this,arguments);}_createClass(FoodDetailsCard,[{key:\"render\",value:function render(){var foodDetails=this.props.foodDetails;var ingredients=[];var measurements=[];var array=Array.of(Object.entries(foodDetails));if(array[0].length>0){ingredients=array[0].filter(function(item){return item[0].includes('strIngredient');}).filter(function(item){return item[1];}).map(function(item){return item[1];});measurements=array[0].filter(function(item){return item[0].includes('strMeasure');}).filter(function(item){return item[1];}).map(function(item){return item[1];});}return/*#__PURE__*/React.createElement(\"div\",{className:\"div-details\"},/*#__PURE__*/React.createElement(Card,{style:{width:'16rem'},className:\"food-details-card\"},/*#__PURE__*/React.createElement(Card.Img,{variant:\"top\",height:\"250px\",width:\"300px\",\"data-testid\":\"recipe-photo\",src:foodDetails.strMealThumb,alt:\"Foto do prato\"}),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"recipe-title\",\"data-testid\":\"recipe-title\"},foodDetails.strMeal),/*#__PURE__*/React.createElement(ShareButton,{test:\"share-btn\",id:foodDetails.idMeal}),/*#__PURE__*/React.createElement(FavoriteButton,{test:\"favorite-btn\",id:foodDetails.idMeal}),/*#__PURE__*/React.createElement(\"p\",{\"data-testid\":\"recipe-category\"},foodDetails.strCategory),/*#__PURE__*/React.createElement(\"ul\",null,ingredients.map(function(item,index){return item?/*#__PURE__*/React.createElement(\"li\",{\"data-testid\":\"\".concat(index,\"-ingredient-name-and-measure\"),key:index},\"\".concat(item,\" - \").concat(measurements[index])):'';})),/*#__PURE__*/React.createElement(\"p\",{\"data-testid\":\"instructions\",className:\"instructions\"},foodDetails.strInstructions)),/*#__PURE__*/React.createElement(\"iframe\",{\"data-testid\":\"video\",width:\"300px\",height:\"250px\",title:\"V\\xEDdeo da Receita\",src:foodDetails.strYoutube})));}}]);return FoodDetailsCard;}(Component);var mapStateToProps=function mapStateToProps(state){return{foodDetails:state.foodReducer.foodDetails};};export default connect(mapStateToProps)(FoodDetailsCard);","map":{"version":3,"sources":["/home/rafael/Documents/projects/Recipes-App/src/components/FoodDetailsCard.js"],"names":["React","Component","connect","Card","ShareButton","FavoriteButton","FoodDetailsCard","foodDetails","props","ingredients","measurements","array","Array","of","Object","entries","length","filter","item","includes","map","width","strMealThumb","strMeal","idMeal","strCategory","index","strInstructions","strYoutube","mapStateToProps","state","foodReducer"],"mappings":"wnBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA;GAEMC,CAAAA,e,2RACK,IACCC,CAAAA,WADD,CACiB,KAAKC,KADtB,CACCD,WADD,CAEP,GAAIE,CAAAA,WAAW,CAAG,EAAlB,CACA,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CACA,GAAMC,CAAAA,KAAK,CAAGC,KAAK,CAACC,EAAN,CAASC,MAAM,CAACC,OAAP,CAAeR,WAAf,CAAT,CAAd,CACA,GAAII,KAAK,CAAC,CAAD,CAAL,CAASK,MAAT,CAAkB,CAAtB,CAAyB,CACvBP,WAAW,CAAGE,KAAK,CAAC,CAAD,CAAL,CAASM,MAAT,CAAgB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQC,QAAR,CAAiB,eAAjB,CAAV,EAAhB,EACXF,MADW,CACJ,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAAC,CAAD,CAAd,EADI,EACeE,GADf,CACmB,SAACF,IAAD,QAAUA,CAAAA,IAAI,CAAC,CAAD,CAAd,EADnB,CAAd,CAEAR,YAAY,CAAGC,KAAK,CAAC,CAAD,CAAL,CAASM,MAAT,CAAgB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQC,QAAR,CAAiB,YAAjB,CAAV,EAAhB,EACZF,MADY,CACL,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAAC,CAAD,CAAd,EADK,EACcE,GADd,CACkB,SAACF,IAAD,QAAUA,CAAAA,IAAI,CAAC,CAAD,CAAd,EADlB,CAAf,CAED,CACD,mBACE,2BAAK,SAAS,CAAC,aAAf,eACE,oBAAC,IAAD,EACE,KAAK,CAAG,CAAEG,KAAK,CAAE,OAAT,CADV,CAEE,SAAS,CAAC,mBAFZ,eAIE,oBAAC,IAAD,CAAM,GAAN,EACE,OAAO,CAAC,KADV,CAEE,MAAM,CAAC,OAFT,CAGE,KAAK,CAAC,OAHR,CAIE,cAAY,cAJd,CAKE,GAAG,CAAGd,WAAW,CAACe,YALpB,CAME,GAAG,CAAC,eANN,EAJF,cAYE,oBAAC,IAAD,CAAM,IAAN,mBACE,oBAAC,IAAD,CAAM,KAAN,EACE,SAAS,CAAC,cADZ,CAEE,cAAY,cAFd,EAIIf,WAAW,CAACgB,OAJhB,CADF,cAOE,oBAAC,WAAD,EAAa,IAAI,CAAC,WAAlB,CAA8B,EAAE,CAAGhB,WAAW,CAACiB,MAA/C,EAPF,cAQE,oBAAC,cAAD,EAAgB,IAAI,CAAC,cAArB,CAAoC,EAAE,CAAGjB,WAAW,CAACiB,MAArD,EARF,cASE,yBAAG,cAAY,iBAAf,EAAmCjB,WAAW,CAACkB,WAA/C,CATF,cAUE,8BACIhB,WAAW,CACVW,GADD,CACK,SAACF,IAAD,CAAOQ,KAAP,QAAkBR,CAAAA,IAAI,cAEvB,0BACE,wBAAiBQ,KAAjB,gCADF,CAEE,GAAG,CAAGA,KAFR,YAIMR,IAJN,eAIgBR,YAAY,CAACgB,KAAD,CAJ5B,EAFuB,CAQvB,EARC,EADL,CADJ,CAVF,cAsBE,yBACE,cAAY,cADd,CAEE,SAAS,CAAC,cAFZ,EAIInB,WAAW,CAACoB,eAJhB,CAtBF,CAZF,cAyCE,8BACE,cAAY,OADd,CAEE,KAAK,CAAC,OAFR,CAGE,MAAM,CAAC,OAHT,CAIE,KAAK,CAAC,qBAJR,CAKE,GAAG,CAAGpB,WAAW,CAACqB,UALpB,EAzCF,CADF,CADF,CAqDD,C,6BAjE2B3B,S,EAoE9B,GAAM4B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCvB,WAAW,CAAEuB,KAAK,CAACC,WAAN,CAAkBxB,WADG,CAAZ,EAAxB,CAeA,cAAeL,CAAAA,OAAO,CAAC2B,eAAD,CAAP,CAAyBvB,eAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Card from 'react-bootstrap/Card';\nimport ShareButton from './ShareButton';\nimport FavoriteButton from './FavoriteButton';\n// import '../FoodAndDrinkDetails.css';\n\nclass FoodDetailsCard extends Component {\n  render() {\n    const { foodDetails } = this.props;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(foodDetails));\n    if (array[0].length > 0) {\n      ingredients = array[0].filter((item) => item[0].includes('strIngredient'))\n        .filter((item) => item[1]).map((item) => item[1]);\n      measurements = array[0].filter((item) => item[0].includes('strMeasure'))\n        .filter((item) => item[1]).map((item) => item[1]);\n    }\n    return (\n      <div className=\"div-details\">\n        <Card\n          style={ { width: '16rem' } }\n          className=\"food-details-card\"\n        >\n          <Card.Img\n            variant=\"top\"\n            height=\"250px\"\n            width=\"300px\"\n            data-testid=\"recipe-photo\"\n            src={ foodDetails.strMealThumb }\n            alt=\"Foto do prato\"\n          />\n          <Card.Body>\n            <Card.Title\n              className=\"recipe-title\"\n              data-testid=\"recipe-title\"\n            >\n              { foodDetails.strMeal }\n            </Card.Title>\n            <ShareButton test=\"share-btn\" id={ foodDetails.idMeal } />\n            <FavoriteButton test=\"favorite-btn\" id={ foodDetails.idMeal } />\n            <p data-testid=\"recipe-category\">{ foodDetails.strCategory }</p>\n            <ul>\n              { ingredients\n                .map((item, index) => (item\n                  ? (\n                    <li\n                      data-testid={ `${index}-ingredient-name-and-measure` }\n                      key={ index }\n                    >\n                      {`${item} - ${measurements[index]}`}\n                    </li>)\n                  : ''))}\n            </ul>\n            <p\n              data-testid=\"instructions\"\n              className=\"instructions\"\n            >\n              { foodDetails.strInstructions }\n            </p>\n          </Card.Body>\n          <iframe\n            data-testid=\"video\"\n            width=\"300px\"\n            height=\"250px\"\n            title=\"VÃ­deo da Receita\"\n            src={ foodDetails.strYoutube }\n          />\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodDetails: state.foodReducer.foodDetails,\n});\n\nFoodDetailsCard.propTypes = {\n  foodDetails: PropTypes.shape({\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    strYoutube: PropTypes.string,\n    idMeal: PropTypes.string,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps)(FoodDetailsCard);\n"]},"metadata":{},"sourceType":"module"}