{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documents/projects/sd-011-project-recipes-app/src/components/SearchBar.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { executeFoodSearch, updateQuery, executeDrinkSearch, updateSelectedFilter } from '../redux/actions/searchBarActions';\nimport { foodListSuccess } from '../redux/actions/foodActions';\nimport { drinkListSuccess } from '../redux/actions/drinkActions';\n\nclass SearchBar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      food: false\n    };\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n    this.checkResults = this.checkResults.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      history\n    } = this.props;\n    this.setState({\n      food: history.location.pathname.includes('comidas')\n    });\n  }\n\n  checkResults() {\n    const {\n      searchResults,\n      history,\n      saveFoodList,\n      saveDrinkList\n    } = this.props;\n    const {\n      food\n    } = this.state;\n\n    if (searchResults === null) {\n      console.log(searchResults);\n      alert('Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.');\n      return;\n    } else if (searchResults.length === 1) {\n      food ? history.push(`/comidas/${searchResults[0].idMeal}`) : history.push(`/bebidas/${searchResults[0].idDrink}`);\n      return;\n    }\n\n    food ? saveFoodList(searchResults) : saveDrinkList(searchResults);\n  }\n\n  async handleSearchClick() {\n    const {\n      query,\n      selectedFilter,\n      executeSearchFoodAction,\n      executeSearchDrinkAction\n    } = this.props;\n    const {\n      food\n    } = this.state;\n\n    if (selectedFilter === 'firstLetter' && query.length !== 1) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n      return;\n    }\n\n    food ? await executeSearchFoodAction(query, selectedFilter) : await executeSearchDrinkAction(query, selectedFilter);\n    this.checkResults();\n  }\n\n  render() {\n    const {\n      queryAction,\n      selectedFilterAction,\n      query,\n      history\n    } = this.props;\n    console.log(history.location.pathname.includes('comidas'));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"search-input\",\n      placeholder: \"Fa\\xE7a sua pequisa\",\n      value: query,\n      onChange: ({\n        target\n      }) => queryAction(target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search-ingredient\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Ingrediente:\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"filter\",\n      id: \"search-ingredient\",\n      value: \"ingredient\",\n      type: \"radio\",\n      \"data-testid\": \"ingredient-search-radio\",\n      onChange: () => selectedFilterAction(\"ingredient\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search-nome\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Nome:\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"filter\",\n      id: \"search-nome\",\n      value: \"name\",\n      type: \"radio\",\n      \"data-testid\": \"name-search-radio\",\n      onChange: () => selectedFilterAction(\"name\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search-first-letter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Primeira Letra:\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"filter\",\n      id: \"search-first-letter\",\n      value: \"firstLetter\",\n      type: \"radio\",\n      \"data-testid\": \"first-letter-search-radio\",\n      onChange: () => selectedFilterAction(\"firstLetter\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"exec-search-btn\",\n      onClick: () => this.handleSearchClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Buscar\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  query: state.searchBarReducer.query,\n  selectedFilter: state.searchBarReducer.selectedFilter,\n  searchResults: state.searchBarReducer.searchResults\n});\n\nconst mapDispatchToProps = dispatch => ({\n  queryAction: query => dispatch(updateQuery(query)),\n  selectedFilterAction: filter => dispatch(updateSelectedFilter(filter)),\n  executeSearchFoodAction: (query, filter) => dispatch(executeFoodSearch(query, filter)),\n  executeSearchDrinkAction: (query, filter) => dispatch(executeDrinkSearch(query, filter)),\n  saveFoodList: results => dispatch(foodListSuccess(results)),\n  saveDrinkList: results => dispatch(drinkListSuccess(results))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SearchBar));","map":{"version":3,"sources":["/home/rafael/Documents/projects/sd-011-project-recipes-app/src/components/SearchBar.js"],"names":["React","Component","withRouter","connect","executeFoodSearch","updateQuery","executeDrinkSearch","updateSelectedFilter","foodListSuccess","drinkListSuccess","SearchBar","constructor","state","food","handleSearchClick","bind","checkResults","componentDidMount","history","props","setState","location","pathname","includes","searchResults","saveFoodList","saveDrinkList","console","log","alert","length","push","idMeal","idDrink","query","selectedFilter","executeSearchFoodAction","executeSearchDrinkAction","render","queryAction","selectedFilterAction","target","value","mapStateToProps","searchBarReducer","mapDispatchToProps","dispatch","filter","results"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { executeFoodSearch, updateQuery, executeDrinkSearch, updateSelectedFilter } from '../redux/actions/searchBarActions';\nimport { foodListSuccess } from '../redux/actions/foodActions';\nimport { drinkListSuccess } from '../redux/actions/drinkActions';\n\nclass SearchBar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      food: false,\n    }\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n    this.checkResults = this.checkResults.bind(this);\n  }\n\n  componentDidMount() {\n    const { history } = this.props;\n    this.setState({\n      food: history.location.pathname.includes('comidas')\n    });\n  }\n\n  checkResults() {\n    const { searchResults, history, saveFoodList, saveDrinkList } = this.props;\n    const { food } = this.state;\n    if(searchResults === null){\n      console.log(searchResults);\n      alert('Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.');\n      return;\n    } else if (searchResults.length === 1) {\n      (food)? history.push(`/comidas/${searchResults[0].idMeal}`) \n      : history.push(`/bebidas/${searchResults[0].idDrink}`);\n      return;\n    }\n    (food) ? saveFoodList(searchResults)\n    : saveDrinkList(searchResults);\n  }\n  \n\n  async handleSearchClick() { \n    const { query, selectedFilter, executeSearchFoodAction, executeSearchDrinkAction } = this.props;\n    const { food } = this.state;\n    if(selectedFilter === 'firstLetter' && query.length !== 1){\n      alert('Sua busca deve conter somente 1 (um) caracter');\n      return;\n    }\n    (food) ? await executeSearchFoodAction(query, selectedFilter)\n    : await executeSearchDrinkAction(query, selectedFilter);\n    this.checkResults();\n  }\n\n  render() {\n    const { queryAction, selectedFilterAction, query, history } = this.props;\n    console.log(history.location.pathname.includes('comidas'));\n    return (\n      <div>\n        <input\n          type=\"text\"\n          data-testid=\"search-input\"\n          placeholder=\"FaÃ§a sua pequisa\"\n          value={ query }\n          onChange={({target})=> queryAction(target.value) }\n        />\n        <label htmlFor=\"search-ingredient\">\n          Ingrediente:\n          <input\n            name=\"filter\"\n            id=\"search-ingredient\"\n            value=\"ingredient\"\n            type=\"radio\"\n            data-testid=\"ingredient-search-radio\"\n            onChange={()=> selectedFilterAction(\"ingredient\")}\n          />\n        </label>\n        <label htmlFor=\"search-nome\">\n          Nome:\n          <input\n            name=\"filter\"\n            id=\"search-nome\"\n            value=\"name\"\n            type=\"radio\"\n            data-testid=\"name-search-radio\"\n            onChange={()=> selectedFilterAction(\"name\")}\n          />\n        </label>\n        <label htmlFor=\"search-first-letter\">\n          Primeira Letra:\n          <input\n            name=\"filter\"\n            id=\"search-first-letter\"\n            value=\"firstLetter\"\n            type=\"radio\"\n            data-testid=\"first-letter-search-radio\"\n            onChange={()=> selectedFilterAction(\"firstLetter\")}\n          />\n        </label>\n        <button\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n          onClick={ () => this.handleSearchClick() }\n        >\n          Buscar\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  query: state.searchBarReducer.query,\n  selectedFilter: state.searchBarReducer.selectedFilter,\n  searchResults: state.searchBarReducer.searchResults,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  queryAction: (query) => dispatch(updateQuery(query)),\n  selectedFilterAction: (filter) => dispatch(updateSelectedFilter(filter)),\n  executeSearchFoodAction: (query, filter) => dispatch(executeFoodSearch(query, filter)),\n  executeSearchDrinkAction: (query, filter) => dispatch(executeDrinkSearch(query, filter)),\n  saveFoodList: (results) => dispatch(foodListSuccess(results)),\n  saveDrinkList: (results) => dispatch(drinkListSuccess(results)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SearchBar));\n"]},"metadata":{},"sourceType":"module"}