{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documents/projects/sd-011-project-recipes-app/src/components/SearchBar.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { executeSearch, updateQuery, updateSelectedFilter } from '../redux/actions/searchBarActions';\n\nclass SearchBar extends Component {\n  constructor() {\n    super();\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n  }\n\n  async handleSearchClick() {\n    const {\n      query,\n      selectedFilter,\n      executeSearchAction,\n      searcResults,\n      history\n    } = this.props;\n\n    if (selectedFilter === 'firstLetter' && query.length !== 1) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n      return;\n    }\n\n    await executeSearchAction(query, selectedFilter);\n\n    if (searcResults === null) {\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n      return;\n    } else if (searcResults.length === 1) {\n      history.push(`/comidas/${searcResults[0].idMeal}`);\n    }\n  }\n\n  render() {\n    const {\n      queryAction,\n      selectedFilterAction,\n      query\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"search-input\",\n      placeholder: \"Fa\\xE7a sua pequisa\",\n      value: query,\n      onChange: ({\n        target\n      }) => queryAction(target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search-ingredient\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Ingrediente:\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"filter\",\n      id: \"search-ingredient\",\n      value: \"ingredient\",\n      type: \"radio\",\n      \"data-testid\": \"ingredient-search-radio\",\n      onChange: () => selectedFilterAction(\"ingredient\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search-nome\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Nome:\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"filter\",\n      id: \"search-nome\",\n      value: \"name\",\n      type: \"radio\",\n      \"data-testid\": \"name-search-radio\",\n      onChange: () => selectedFilterAction(\"name\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search-first-letter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Primeira Letra:\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"filter\",\n      id: \"search-first-letter\",\n      value: \"firstLetter\",\n      type: \"radio\",\n      \"data-testid\": \"first-letter-search-radio\",\n      onChange: () => selectedFilterAction(\"firstLetter\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"exec-search-btn\",\n      onClick: this.handleSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Buscar\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  query: state.searchBarReducer.query,\n  selectedFilter: state.searchBarReducer.selectedFilter,\n  searcResults: state.searchBarReducer.searcResults\n});\n\nconst mapDispatchToProps = dispatch => ({\n  queryAction: query => dispatch(updateQuery(query)),\n  selectedFilterAction: filter => dispatch(updateSelectedFilter(filter)),\n  executeSearchAction: (query, filter) => dispatch(executeSearch(query, filter))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SearchBar));","map":{"version":3,"sources":["/home/rafael/Documents/projects/sd-011-project-recipes-app/src/components/SearchBar.js"],"names":["React","Component","withRouter","connect","executeSearch","updateQuery","updateSelectedFilter","SearchBar","constructor","handleSearchClick","bind","query","selectedFilter","executeSearchAction","searcResults","history","props","length","alert","push","idMeal","render","queryAction","selectedFilterAction","target","value","mapStateToProps","state","searchBarReducer","mapDispatchToProps","dispatch","filter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { executeSearch, updateQuery, updateSelectedFilter } from '../redux/actions/searchBarActions';\n\nclass SearchBar extends Component {\n  constructor() {\n    super();\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n  }\n\n  async handleSearchClick() { \n    const { query, selectedFilter, executeSearchAction, searcResults, history } = this.props;\n    if(selectedFilter === 'firstLetter' && query.length !== 1){\n      alert('Sua busca deve conter somente 1 (um) caracter');\n      return;\n    }\n    await executeSearchAction(query, selectedFilter);\n    if(searcResults === null){\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n      return;\n    } else if (searcResults.length === 1) {\n      history.push(`/comidas/${searcResults[0].idMeal}`)\n    }\n    \n  }\n  render() {\n    const { queryAction, selectedFilterAction, query } = this.props;\n    return (\n      <div>\n        <input\n          type=\"text\"\n          data-testid=\"search-input\"\n          placeholder=\"Faça sua pequisa\"\n          value={ query }\n          onChange={({target})=> queryAction(target.value) }\n        />\n        <label htmlFor=\"search-ingredient\">\n          Ingrediente:\n          <input\n            name=\"filter\"\n            id=\"search-ingredient\"\n            value=\"ingredient\"\n            type=\"radio\"\n            data-testid=\"ingredient-search-radio\"\n            onChange={()=> selectedFilterAction(\"ingredient\")}\n          />\n        </label>\n        <label htmlFor=\"search-nome\">\n          Nome:\n          <input\n            name=\"filter\"\n            id=\"search-nome\"\n            value=\"name\"\n            type=\"radio\"\n            data-testid=\"name-search-radio\"\n            onChange={()=> selectedFilterAction(\"name\")}\n          />\n        </label>\n        <label htmlFor=\"search-first-letter\">\n          Primeira Letra:\n          <input\n            name=\"filter\"\n            id=\"search-first-letter\"\n            value=\"firstLetter\"\n            type=\"radio\"\n            data-testid=\"first-letter-search-radio\"\n            onChange={()=> selectedFilterAction(\"firstLetter\")}\n          />\n        </label>\n        <button\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n           onClick={ this.handleSearchClick }\n        >\n          Buscar\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  query: state.searchBarReducer.query,\n  selectedFilter: state.searchBarReducer.selectedFilter,\n  searcResults: state.searchBarReducer.searcResults,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  queryAction: (query) => dispatch(updateQuery(query)),\n  selectedFilterAction: (filter) => dispatch(updateSelectedFilter(filter)),\n  executeSearchAction: (query, filter) => dispatch(executeSearch(query, filter)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SearchBar));\n"]},"metadata":{},"sourceType":"module"}