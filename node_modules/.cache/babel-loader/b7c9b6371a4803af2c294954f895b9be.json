{"ast":null,"code":"import _classCallCheck from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{fetchFoodCategory,fetchFoodList,fetchFoodIngredientList,renderFoodIngredient}from'../redux/actions/foodActions';import{FoodCard,FoodCategories,Header,Footer}from'../components';var Foods=/*#__PURE__*/function(_Component){_inherits(Foods,_Component);var _super=_createSuper(Foods);function Foods(){_classCallCheck(this,Foods);return _super.apply(this,arguments);}_createClass(Foods,[{key:\"componentDidMount\",value:function componentDidMount(){var _this$props=this.props,actionFetchFoodList=_this$props.actionFetchFoodList,actionFetchCategories=_this$props.actionFetchCategories,ingredientQuery=_this$props.ingredientQuery,actionFetchIngredientFoodList=_this$props.actionFetchIngredientFoodList,actionFoodIngredient=_this$props.actionFoodIngredient;if(ingredientQuery===''){actionFetchFoodList('');}else{actionFetchIngredientFoodList(ingredientQuery);actionFoodIngredient('');}actionFetchCategories('list');}},{key:\"render\",value:function render(){var foodCardsList=this.props.foodCardsList;return/*#__PURE__*/React.createElement(\"main\",{className:\"foods\"},/*#__PURE__*/React.createElement(Header,{title:\"Comidas\",search:true}),/*#__PURE__*/React.createElement(FoodCategories,null),/*#__PURE__*/React.createElement(\"div\",{className:\"card-list-container\"},foodCardsList.map(function(item,index){return/*#__PURE__*/React.createElement(FoodCard,{key:item.idMeal,food:item,index:index});})),/*#__PURE__*/React.createElement(Footer,null));}}]);return Foods;}(Component);var mapStateToProps=function mapStateToProps(state){return{foodCardsList:state.foodReducer.foodCardsList,ingredientQuery:state.foodReducer.ingredientFoodQuery};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{actionFetchFoodList:function actionFetchFoodList(name){return dispatch(fetchFoodList(name));},actionFetchCategories:function actionFetchCategories(category){return dispatch(fetchFoodCategory(category));},actionFetchIngredientFoodList:function actionFetchIngredientFoodList(ingredient){dispatch(fetchFoodIngredientList(ingredient));},actionFoodIngredient:function actionFoodIngredient(ingredient){return dispatch(renderFoodIngredient(ingredient));}};};export default connect(mapStateToProps,mapDispatchToProps)(Foods);","map":{"version":3,"sources":["/home/rafael/Documents/projects/Recipes-App/src/pages/Foods.js"],"names":["React","Component","connect","fetchFoodCategory","fetchFoodList","fetchFoodIngredientList","renderFoodIngredient","FoodCard","FoodCategories","Header","Footer","Foods","props","actionFetchFoodList","actionFetchCategories","ingredientQuery","actionFetchIngredientFoodList","actionFoodIngredient","foodCardsList","map","item","index","idMeal","mapStateToProps","state","foodReducer","ingredientFoodQuery","mapDispatchToProps","dispatch","name","category","ingredient"],"mappings":"wnBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,iBAAT,CAA4BC,aAA5B,CACEC,uBADF,CAC2BC,oBAD3B,KACuD,8BADvD,CAEA,OAASC,QAAT,CAAmBC,cAAnB,CAAmCC,MAAnC,CAA2CC,MAA3C,KAAyD,eAAzD,C,GAEMC,CAAAA,K,+PACgB,iBAGS,KAAKC,KAHd,CACVC,mBADU,aACVA,mBADU,CACWC,qBADX,aACWA,qBADX,CAEhBC,eAFgB,aAEhBA,eAFgB,CAECC,6BAFD,aAECA,6BAFD,CAGhBC,oBAHgB,aAGhBA,oBAHgB,CAIlB,GAAIF,eAAe,GAAK,EAAxB,CAA4B,CAC1BF,mBAAmB,CAAC,EAAD,CAAnB,CACD,CAFD,IAEO,CACLG,6BAA6B,CAACD,eAAD,CAA7B,CACAE,oBAAoB,CAAC,EAAD,CAApB,CACD,CACDH,qBAAqB,CAAC,MAAD,CAArB,CACD,C,uCAEQ,IACCI,CAAAA,aADD,CACmB,KAAKN,KADxB,CACCM,aADD,CAEP,mBACE,4BAAM,SAAS,CAAC,OAAhB,eACE,oBAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,MAAM,KAA9B,EADF,cAEE,oBAAC,cAAD,MAFF,cAGE,2BAAK,SAAS,CAAC,qBAAf,EACIA,aAAa,CAACC,GAAd,CAAkB,SAACC,IAAD,CAAOC,KAAP,qBAClB,oBAAC,QAAD,EAAU,GAAG,CAAGD,IAAI,CAACE,MAArB,CAA8B,IAAI,CAAGF,IAArC,CAA4C,KAAK,CAAGC,KAApD,EADkB,EAAlB,CADJ,CAHF,cAOE,oBAAC,MAAD,MAPF,CADF,CAWD,C,mBA3BiBpB,S,EA8BpB,GAAMsB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCN,aAAa,CAAEM,KAAK,CAACC,WAAN,CAAkBP,aADC,CAElCH,eAAe,CAAES,KAAK,CAACC,WAAN,CAAkBC,mBAFD,CAAZ,EAAxB,CAKA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCf,mBAAmB,CAAE,6BAACgB,IAAD,QAAUD,CAAAA,QAAQ,CAACxB,aAAa,CAACyB,IAAD,CAAd,CAAlB,EADmB,CAExCf,qBAAqB,CAAE,+BAACgB,QAAD,QAAcF,CAAAA,QAAQ,CAACzB,iBAAiB,CAAC2B,QAAD,CAAlB,CAAtB,EAFiB,CAGxCd,6BAA6B,CAAE,uCAACe,UAAD,CAAgB,CAC7CH,QAAQ,CAACvB,uBAAuB,CAAC0B,UAAD,CAAxB,CAAR,CACD,CALuC,CAMxCd,oBAAoB,CAAE,8BAACc,UAAD,QAAgBH,CAAAA,QAAQ,CAACtB,oBAAoB,CAACyB,UAAD,CAArB,CAAxB,EANkB,CAAf,EAA3B,CAcA,cAAe7B,CAAAA,OAAO,CAACqB,eAAD,CAAkBI,kBAAlB,CAAP,CAA6ChB,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchFoodCategory, fetchFoodList,\n  fetchFoodIngredientList, renderFoodIngredient } from '../redux/actions/foodActions';\nimport { FoodCard, FoodCategories, Header, Footer } from '../components';\n\nclass Foods extends Component {\n  componentDidMount() {\n    const { actionFetchFoodList, actionFetchCategories,\n      ingredientQuery, actionFetchIngredientFoodList,\n      actionFoodIngredient } = this.props;\n    if (ingredientQuery === '') {\n      actionFetchFoodList('');\n    } else {\n      actionFetchIngredientFoodList(ingredientQuery);\n      actionFoodIngredient('');\n    }\n    actionFetchCategories('list');\n  }\n\n  render() {\n    const { foodCardsList } = this.props;\n    return (\n      <main className=\"foods\">\n        <Header title=\"Comidas\" search />\n        <FoodCategories />\n        <div className=\"card-list-container\">\n          { foodCardsList.map((item, index) => (\n            <FoodCard key={ item.idMeal } food={ item } index={ index } />)) }\n        </div>\n        <Footer />\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodCardsList: state.foodReducer.foodCardsList,\n  ingredientQuery: state.foodReducer.ingredientFoodQuery,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionFetchFoodList: (name) => dispatch(fetchFoodList(name)),\n  actionFetchCategories: (category) => dispatch(fetchFoodCategory(category)),\n  actionFetchIngredientFoodList: (ingredient) => {\n    dispatch(fetchFoodIngredientList(ingredient));\n  },\n  actionFoodIngredient: (ingredient) => dispatch(renderFoodIngredient(ingredient)),\n});\n\nFoods.propTypes = {\n  actionFetchFoodList: PropTypes.func,\n  actionFetchCategories: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Foods);\n"]},"metadata":{},"sourceType":"module"}