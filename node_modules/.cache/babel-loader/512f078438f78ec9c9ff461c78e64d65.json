{"ast":null,"code":"import { fetchAPIName, fetchFoodIngredientSearch, fetchAPIFirstLetter } from \"../../services/fetchAPIFood\";\nexport const UPDATE_QUERY = 'UPDATE_QUERY';\nexport const UPDATE_SELECTED_FILTER = 'UPDATE_SELECTED_FILTER';\nexport const SAVE_SEARCH_RESULTS = 'SAVE_SEARCH_RESULTS';\nexport const updateQuery = payload => ({\n  type: UPDATE_QUERY,\n  payload\n});\nexport const updateSelectedFilter = payload => ({\n  type: UPDATE_SELECTED_FILTER,\n  payload\n});\n\nconst saveSearchResults = payload => ({\n  type: SAVE_SEARCH_RESULTS,\n  payload\n});\n\nexport const executeFoodSearch = (query, filter) => async dispatch => {\n  switch (filter) {\n    case 'ingredient':\n    default:\n      const ingredientsResult = await fetchFoodIngredientSearch(query);\n      await dispatch(saveSearchResults(ingredientsResult));\n      break;\n\n    case 'name':\n      const nameResults = await fetchAPIName(query);\n      await dispatch(saveSearchResults(nameResults));\n      break;\n\n    case 'firstLetter':\n      const firstLetterResults = await fetchAPIFirstLetter(query);\n      await dispatch(saveSearchResults(firstLetterResults));\n      break;\n  }\n};\nexport const executeDrinkSearch = (query, filter) => async dispatch => {\n  switch (filter) {\n    case 'ingredient':\n    default:\n      const ingredientsResult = await fetchFoodIngredientSearch(query);\n      await dispatch(saveSearchResults(ingredientsResult));\n      break;\n\n    case 'name':\n      const nameResults = await fetchAPIName(query);\n      await dispatch(saveSearchResults(nameResults));\n      break;\n\n    case 'firstLetter':\n      const firstLetterResults = await fetchAPIFirstLetter(query);\n      await dispatch(saveSearchResults(firstLetterResults));\n      break;\n  }\n};","map":{"version":3,"sources":["/home/rafael/Documents/projects/sd-011-project-recipes-app/src/redux/actions/searchBarActions.js"],"names":["fetchAPIName","fetchFoodIngredientSearch","fetchAPIFirstLetter","UPDATE_QUERY","UPDATE_SELECTED_FILTER","SAVE_SEARCH_RESULTS","updateQuery","payload","type","updateSelectedFilter","saveSearchResults","executeFoodSearch","query","filter","dispatch","ingredientsResult","nameResults","firstLetterResults","executeDrinkSearch"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,yBAAvB,EAAkDC,mBAAlD,QAA6E,6BAA7E;AAEA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,WAAW,GAAIC,OAAD,KAAc;AACvCC,EAAAA,IAAI,EAAEL,YADiC;AAEvCI,EAAAA;AAFuC,CAAd,CAApB;AAKP,OAAO,MAAME,oBAAoB,GAAIF,OAAD,KAAc;AAChDC,EAAAA,IAAI,EAAEJ,sBAD0C;AAEhDG,EAAAA;AAFgD,CAAd,CAA7B;;AAKP,MAAMG,iBAAiB,GAAIH,OAAD,KAAc;AACtCC,EAAAA,IAAI,EAAEH,mBADgC;AAEtCE,EAAAA;AAFsC,CAAd,CAA1B;;AAKA,OAAO,MAAMI,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB,MAAOC,QAAP,IAAoB;AACtE,UAAOD,MAAP;AACE,SAAK,YAAL;AACA;AACE,YAAME,iBAAiB,GAAG,MAAMd,yBAAyB,CAACW,KAAD,CAAzD;AACA,YAAME,QAAQ,CAACJ,iBAAiB,CAACK,iBAAD,CAAlB,CAAd;AACA;;AACF,SAAK,MAAL;AACE,YAAMC,WAAW,GAAG,MAAMhB,YAAY,CAACY,KAAD,CAAtC;AACA,YAAME,QAAQ,CAACJ,iBAAiB,CAACM,WAAD,CAAlB,CAAd;AACA;;AACF,SAAK,aAAL;AACE,YAAMC,kBAAkB,GAAG,MAAMf,mBAAmB,CAACU,KAAD,CAApD;AACA,YAAME,QAAQ,CAACJ,iBAAiB,CAACO,kBAAD,CAAlB,CAAd;AACA;AAbJ;AAiBD,CAlBM;AAoBP,OAAO,MAAMC,kBAAkB,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB,MAAOC,QAAP,IAAoB;AACvE,UAAOD,MAAP;AACE,SAAK,YAAL;AACA;AACE,YAAME,iBAAiB,GAAG,MAAMd,yBAAyB,CAACW,KAAD,CAAzD;AACA,YAAME,QAAQ,CAACJ,iBAAiB,CAACK,iBAAD,CAAlB,CAAd;AACA;;AACF,SAAK,MAAL;AACE,YAAMC,WAAW,GAAG,MAAMhB,YAAY,CAACY,KAAD,CAAtC;AACA,YAAME,QAAQ,CAACJ,iBAAiB,CAACM,WAAD,CAAlB,CAAd;AACA;;AACF,SAAK,aAAL;AACE,YAAMC,kBAAkB,GAAG,MAAMf,mBAAmB,CAACU,KAAD,CAApD;AACA,YAAME,QAAQ,CAACJ,iBAAiB,CAACO,kBAAD,CAAlB,CAAd;AACA;AAbJ;AAiBD,CAlBM","sourcesContent":["import { fetchAPIName, fetchFoodIngredientSearch, fetchAPIFirstLetter } from \"../../services/fetchAPIFood\";\n\nexport const UPDATE_QUERY = 'UPDATE_QUERY';\nexport const UPDATE_SELECTED_FILTER = 'UPDATE_SELECTED_FILTER';\nexport const SAVE_SEARCH_RESULTS = 'SAVE_SEARCH_RESULTS';\n\nexport const updateQuery = (payload) => ({\n  type: UPDATE_QUERY,\n  payload,\n});\n\nexport const updateSelectedFilter = (payload) => ({\n  type: UPDATE_SELECTED_FILTER,\n  payload,\n});\n\nconst saveSearchResults = (payload) => ({\n  type: SAVE_SEARCH_RESULTS,\n  payload,\n});\n\nexport const executeFoodSearch = (query, filter) => async (dispatch) => {\n  switch(filter){\n    case 'ingredient':\n    default:\n      const ingredientsResult = await fetchFoodIngredientSearch(query);\n      await dispatch(saveSearchResults(ingredientsResult));\n      break;\n    case 'name':\n      const nameResults = await fetchAPIName(query);\n      await dispatch(saveSearchResults(nameResults));\n      break;\n    case 'firstLetter':\n      const firstLetterResults = await fetchAPIFirstLetter(query);\n      await dispatch(saveSearchResults(firstLetterResults));\n      break;\n    \n\n  }\n}\n\nexport const executeDrinkSearch = (query, filter) => async (dispatch) => {\n  switch(filter){\n    case 'ingredient':\n    default:\n      const ingredientsResult = await fetchFoodIngredientSearch(query);\n      await dispatch(saveSearchResults(ingredientsResult));\n      break;\n    case 'name':\n      const nameResults = await fetchAPIName(query);\n      await dispatch(saveSearchResults(nameResults));\n      break;\n    case 'firstLetter':\n      const firstLetterResults = await fetchAPIFirstLetter(query);\n      await dispatch(saveSearchResults(firstLetterResults));\n      break;\n    \n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}