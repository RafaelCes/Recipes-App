{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documents/projects/sd-011-project-recipes-app/src/components/SearchBar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateQuery, updateSelectedFilter } from '../redux/actions/searchBarActions';\n\nclass SearchBar extends Component {\n  render() {\n    const {\n      queryAction,\n      selectedFilterAction,\n      query,\n      selectedFilter\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"search-input\",\n      placeholder: \"Fa\\xE7a sua pequisa\",\n      value: query,\n      onChange: ({\n        target\n      }) => queryAction(target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search-ingredient\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, \"Ingrediente:\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"filter\",\n      id: \"search-ingredient\",\n      type: \"radio\",\n      \"data-testid\": \"ingredient-search-radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search-nome\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Nome:\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"filter\",\n      id: \"search-nome\",\n      type: \"radio\",\n      \"data-testid\": \"name-search-radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search-first-letter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Primeira Letra:\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"filter\",\n      id: \"search-first-letter\",\n      type: \"radio\",\n      \"data-testid\": \"first-letter-search-radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"exec-search-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Buscar\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  query: state.searchBarReducer.query,\n  selectedFilter: state.searchBarReducer.selectedFilter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  queryAction: query => dispatch(updateQuery(query)),\n  selectedFilterAction: filter => dispatch(updateSelectedFilter(filter))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);","map":{"version":3,"sources":["/home/rafael/Documents/projects/sd-011-project-recipes-app/src/components/SearchBar.js"],"names":["React","Component","connect","updateQuery","updateSelectedFilter","SearchBar","render","queryAction","selectedFilterAction","query","selectedFilter","props","target","value","mapStateToProps","state","searchBarReducer","mapDispatchToProps","dispatch","filter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,oBAAtB,QAAkD,mCAAlD;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,oBAAf;AAAqCC,MAAAA,KAArC;AAA4CC,MAAAA;AAA5C,QAA+D,KAAKC,KAA1E;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,qBAAY,cAFd;AAGE,MAAA,WAAW,EAAC,qBAHd;AAIE,MAAA,KAAK,EAAGF,KAJV;AAKE,MAAA,QAAQ,EAAE,CAAC;AAACG,QAAAA;AAAD,OAAD,KAAaL,WAAW,CAACK,MAAM,CAACC,KAAR,CALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAO,MAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,EAAE,EAAC,mBAFL;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,qBAAY,yBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CARF,eAiBE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,EAAE,EAAC,aAFL;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,qBAAY,mBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAjBF,eA0BE;AAAO,MAAA,OAAO,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,EAAE,EAAC,qBAFL;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,qBAAY,2BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CA1BF,eAmCE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnCF,CADF;AA4CD;;AA/C+B;;AAkDlC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,KAAK,EAAEM,KAAK,CAACC,gBAAN,CAAuBP,KADI;AAElCC,EAAAA,cAAc,EAAEK,KAAK,CAACC,gBAAN,CAAuBN;AAFL,CAAZ,CAAxB;;AAKA,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACxCX,EAAAA,WAAW,EAAGE,KAAD,IAAWS,QAAQ,CAACf,WAAW,CAACM,KAAD,CAAZ,CADQ;AAExCD,EAAAA,oBAAoB,EAAGW,MAAD,IAAYD,QAAQ,CAACd,oBAAoB,CAACe,MAAD,CAArB;AAFF,CAAf,CAA3B;;AAKA,eAAejB,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CZ,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateQuery, updateSelectedFilter } from '../redux/actions/searchBarActions';\n\nclass SearchBar extends Component {\n  render() {\n    const { queryAction, selectedFilterAction, query, selectedFilter } = this.props;\n    return (\n      <div>\n        <input\n          type=\"text\"\n          data-testid=\"search-input\"\n          placeholder=\"FaÃ§a sua pequisa\"\n          value={ query }\n          onChange={({target})=> queryAction(target.value) }\n        />\n        <label htmlFor=\"search-ingredient\">\n          Ingrediente:\n          <input\n            name=\"filter\"\n            id=\"search-ingredient\"\n            type=\"radio\"\n            data-testid=\"ingredient-search-radio\"\n          />\n        </label>\n        <label htmlFor=\"search-nome\">\n          Nome:\n          <input\n            name=\"filter\"\n            id=\"search-nome\"\n            type=\"radio\"\n            data-testid=\"name-search-radio\"\n          />\n        </label>\n        <label htmlFor=\"search-first-letter\">\n          Primeira Letra:\n          <input\n            name=\"filter\"\n            id=\"search-first-letter\"\n            type=\"radio\"\n            data-testid=\"first-letter-search-radio\"\n          />\n        </label>\n        <button\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n        >\n          Buscar\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  query: state.searchBarReducer.query,\n  selectedFilter: state.searchBarReducer.selectedFilter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  queryAction: (query) => dispatch(updateQuery(query)),\n  selectedFilterAction: (filter) => dispatch(updateSelectedFilter(filter)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n"]},"metadata":{},"sourceType":"module"}