{"ast":null,"code":"import _classCallCheck from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/rafael/Documents/projects/Recipes-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import FoodCard from'../components/FoodCard';import{fetchFoodAreaSuccess,fetchFoodList,fetchSearchFoodArea}from'../redux/actions/foodActions';import Header from'../components/Header';import Footer from'../components/Footer';import'../ExploreIngredients.css';var ExploreFoodByArea=/*#__PURE__*/function(_Component){_inherits(ExploreFoodByArea,_Component);var _super=_createSuper(ExploreFoodByArea);function ExploreFoodByArea(){var _this;_classCallCheck(this,ExploreFoodByArea);_this=_super.call(this);_this.handleFoodByArea=_this.handleFoodByArea.bind(_assertThisInitialized(_this));return _this;}_createClass(ExploreFoodByArea,[{key:\"componentDidMount\",value:function componentDidMount(){var _this$props=this.props,fetchFoodArea=_this$props.fetchFoodArea,actionFetchFoodList=_this$props.actionFetchFoodList;fetchFoodArea();actionFetchFoodList('');}},{key:\"handleFoodByArea\",value:function handleFoodByArea(_ref){var target=_ref.target;var value=target.value;var _this$props2=this.props,actionFetchFoodList=_this$props2.actionFetchFoodList,actionFetchSearchFoodArea=_this$props2.actionFetchSearchFoodArea;if(value==='All'){actionFetchFoodList('');}else{actionFetchSearchFoodArea(value);}}},{key:\"render\",value:function render(){var _this$props3=this.props,foodArea=_this$props3.foodArea,foodCardsList=_this$props3.foodCardsList;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,{title:\"Explorar Origem\",search:true}),/*#__PURE__*/React.createElement(\"select\",{className:\"dropdown\",\"data-testid\":\"explore-by-area-dropdown\",onChange:this.handleFoodByArea},/*#__PURE__*/React.createElement(\"option\",{\"data-testid\":\"All-option\",value:\"All\"},\"All\"),foodArea&&foodArea.map(function(item,index){return/*#__PURE__*/React.createElement(\"option\",{key:index,\"data-testid\":\"\".concat(item.strArea,\"-option\"),value:item.strArea},item.strArea);})),/*#__PURE__*/React.createElement(\"div\",{className:\"card-list-container\"},foodCardsList&&foodCardsList.map(function(item,index){return/*#__PURE__*/React.createElement(FoodCard,{key:item.idMeal,food:item,index:index});})),/*#__PURE__*/React.createElement(Footer,null));}}]);return ExploreFoodByArea;}(Component);var mapStateToProps=function mapStateToProps(state){return{foodArea:state.foodReducer.foodArea,foodCardsList:state.foodReducer.foodCardsList};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchFoodArea:function fetchFoodArea(){return dispatch(fetchFoodAreaSuccess());},actionFetchFoodList:function actionFetchFoodList(name){return dispatch(fetchFoodList(name));},actionFetchSearchFoodArea:function actionFetchSearchFoodArea(area){return dispatch(fetchSearchFoodArea(area));}};};export default connect(mapStateToProps,mapDispatchToProps)(ExploreFoodByArea);","map":{"version":3,"sources":["/home/rafael/Documents/projects/Recipes-App/src/pages/ExploreFoodByArea.js"],"names":["React","Component","connect","FoodCard","fetchFoodAreaSuccess","fetchFoodList","fetchSearchFoodArea","Header","Footer","ExploreFoodByArea","handleFoodByArea","bind","props","fetchFoodArea","actionFetchFoodList","target","value","actionFetchSearchFoodArea","foodArea","foodCardsList","map","item","index","strArea","idMeal","mapStateToProps","state","foodReducer","mapDispatchToProps","dispatch","name","area"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FoodCard from '../components/FoodCard';\nimport { fetchFoodAreaSuccess, fetchFoodList,\n  fetchSearchFoodArea } from '../redux/actions/foodActions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../ExploreIngredients.css';\n\nclass ExploreFoodByArea extends Component {\n  constructor() {\n    super();\n\n    this.handleFoodByArea = this.handleFoodByArea.bind(this);\n  }\n\n  componentDidMount() {\n    const { fetchFoodArea, actionFetchFoodList } = this.props;\n    fetchFoodArea();\n    actionFetchFoodList('');\n  }\n\n  handleFoodByArea({ target }) {\n    const { value } = target;\n    const { actionFetchFoodList,\n      actionFetchSearchFoodArea } = this.props;\n\n    if (value === 'All') {\n      actionFetchFoodList('');\n    } else {\n      actionFetchSearchFoodArea(value);\n    }\n  }\n\n  render() {\n    const { foodArea, foodCardsList } = this.props;\n    return (\n      <div>\n        <Header title=\"Explorar Origem\" search />\n        <select\n          className=\"dropdown\"\n          data-testid=\"explore-by-area-dropdown\"\n          onChange={ this.handleFoodByArea }\n        >\n          <option\n            data-testid=\"All-option\"\n            value=\"All\"\n          >\n            All\n          </option>\n          { foodArea && foodArea.map((item, index) => (\n            <option\n              key={ index }\n              data-testid={ `${item.strArea}-option` }\n              value={ item.strArea }\n            >\n              { item.strArea }\n            </option>\n          )) }\n        </select>\n        <div className=\"card-list-container\">\n          { foodCardsList && foodCardsList.map((item, index) => (\n            <FoodCard key={ item.idMeal } food={ item } index={ index } />)) }\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodArea: state.foodReducer.foodArea,\n  foodCardsList: state.foodReducer.foodCardsList,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchFoodArea: () => dispatch(fetchFoodAreaSuccess()),\n  actionFetchFoodList: (name) => dispatch(fetchFoodList(name)),\n  actionFetchSearchFoodArea: (area) => dispatch(fetchSearchFoodArea(area)),\n});\n\nExploreFoodByArea.propTypes = {\n  foodArea: PropTypes.arrayOf(PropTypes.object),\n  fetchFoodArea: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreFoodByArea);\n"]},"metadata":{},"sourceType":"module"}