{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documents/projects/sd-011-project-recipes-app/src/components/IngredientesFoodInProgress.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../Footer.css';\nimport { saveDoneRecipe } from '../redux/actions/foodActions';\n\nclass IngredientesFoodInProgress extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredientsArrayList: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n    };\n    this.handleOnchange = this.handleOnchange.bind(this);\n    this.saveInLocalStorage = this.saveInLocalStorage.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      foodDetails\n    } = this.props;\n\n    if (!Object.is(prevProps.foodDetails, foodDetails)) {\n      this.markedBox();\n    }\n  }\n\n  handleOnchange({\n    target\n  }) {\n    const {\n      checked,\n      value\n    } = target;\n\n    if (checked) {\n      this.setState(previousState => ({\n        ingredientsArrayList: [...previousState.ingredientsArrayList, Number(value)]\n      }), () => this.saveInLocalStorage());\n    } else {\n      this.setState(previousState => ({\n        ingredientsArrayList: previousState.ingredientsArrayList.filter(box => box !== Number(value))\n      }), () => this.saveInLocalStorage());\n    }\n  }\n\n  saveInLocalStorage() {\n    const {\n      foodDetails\n    } = this.props;\n    const {\n      ingredientsArrayList\n    } = this.state;\n    let inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (!inProgressRecipes) {\n      inProgressRecipes = {\n        cocktails: {},\n        meals: {}\n      };\n    }\n\n    inProgressRecipes.meals[foodDetails.idMeal] = ingredientsArrayList;\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  } // ableButton(){\n  // }\n\n\n  markedBox() {\n    const {\n      foodDetails\n    } = this.props;\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (inProgressRecipes && Object.keys(inProgressRecipes.meals).find(meal => Number(meal) === Number(foodDetails.idMeal))) {\n      this.setState({\n        ingredientsArrayList: inProgressRecipes.meals[foodDetails.idMeal]\n      });\n    } else {\n      this.setState({\n        ingredientsArrayList: []\n      });\n    }\n  }\n\n  saveInDoneRecipes() {}\n\n  render() {\n    console.log('qualquer coisa');\n    const {\n      foodDetails\n    } = this.props;\n    const {\n      ingredientsArrayList\n    } = this.state;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(foodDetails));\n\n    if (array[0].length > 0) {\n      ingredients = array[0].filter(item => item[0].includes('strIngredient')).filter(item => item[1]).map((item, index) => ({\n        name: item[1],\n        checked: ingredientsArrayList.some(item => item === index)\n      }));\n      measurements = array[0].filter(item => item[0].includes('strMeasure')).filter(item => item[1]).map(item => item[1]);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \" \", console.log(ingredients), ingredients.map((item, index) => {\n      return item.name ? /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: `${index}-check-ingredients`,\n        className: ingredientsArrayList.some(item => item === index) ? 'checked-button' : '',\n        key: index,\n        \"data-testid\": `${index}-ingredient-step`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: ingredientsArrayList.some(item => item === index) // checked={ item.checked }\n        ,\n        onChange: this.handleOnchange,\n        value: index,\n        id: `${index}-check-ingredients`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      }), `${item.name} - ${measurements[index]}`) : '';\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/receitas-feitas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"finish-recipe\",\n      type: \"button\",\n      \"data-testid\": \"finish-recipe-btn\",\n      disabled: ingredientsArrayList.length !== ingredients.length,\n      onClick: this.saveInDoneRecipes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, ' ', \"Finalizar Receita\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  foodDetails: state.foodReducer.foodDetails\n});\n\nconst mapDispatchToProps = dispatch => ({\n  saveDoneRecipes: id => dispatch(saveDoneRecipe(id))\n});\n\nIngredientesFoodInProgress.propTypes = {\n  foodDetails: PropTypes.shape({\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    strYoutube: PropTypes.string,\n    idMeal: PropTypes.string\n  }).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientesFoodInProgress);","map":{"version":3,"sources":["/home/rafael/Documents/projects/sd-011-project-recipes-app/src/components/IngredientesFoodInProgress.js"],"names":["React","Component","Link","connect","PropTypes","saveDoneRecipe","IngredientesFoodInProgress","constructor","state","ingredientsArrayList","handleOnchange","bind","saveInLocalStorage","componentDidUpdate","prevProps","foodDetails","props","Object","is","markedBox","target","checked","value","setState","previousState","Number","filter","box","inProgressRecipes","JSON","parse","localStorage","getItem","cocktails","meals","idMeal","setItem","stringify","keys","find","meal","saveInDoneRecipes","render","console","log","ingredients","measurements","array","Array","of","entries","length","item","includes","map","index","name","some","mapStateToProps","foodReducer","mapDispatchToProps","dispatch","saveDoneRecipes","id","propTypes","shape","strMealThumb","string","strMeal","strCategory","strInstructions","strYoutube","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../Footer.css';\nimport { saveDoneRecipe } from '../redux/actions/foodActions';\n\nclass IngredientesFoodInProgress extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredientsArrayList: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19],\n    };\n    this.handleOnchange = this.handleOnchange.bind(this);\n    this.saveInLocalStorage = this.saveInLocalStorage.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { foodDetails } = this.props;\n    if (!Object.is(prevProps.foodDetails, foodDetails)) {\n      this.markedBox();\n    }\n  }\n\n  handleOnchange({ target }) {\n    const { checked, value } = target;\n    if (checked) {\n      this.setState((previousState) => ({\n        ingredientsArrayList: [...previousState.ingredientsArrayList, Number(value)],\n      }), () => this.saveInLocalStorage());\n    } else {\n      this.setState((previousState) => ({\n        ingredientsArrayList: previousState.ingredientsArrayList\n          .filter((box) => box !== Number(value)),\n      }), () => this.saveInLocalStorage());\n    }\n  }\n\n  saveInLocalStorage() {\n    const { foodDetails } = this.props;\n    const { ingredientsArrayList } = this.state;\n    let inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (!inProgressRecipes) {\n      inProgressRecipes = {\n        cocktails: {},\n        meals: {},\n      };\n    }\n    inProgressRecipes.meals[foodDetails.idMeal] = ingredientsArrayList;\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  }\n\n  // ableButton(){\n\n  // }\n\n  markedBox() {\n    const { foodDetails } = this.props;\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (inProgressRecipes && Object.keys(inProgressRecipes.meals)\n      .find((meal) => Number(meal) === Number(foodDetails.idMeal))) {\n      this.setState({\n        ingredientsArrayList: inProgressRecipes.meals[foodDetails.idMeal],\n      });\n    }else { \n      this.setState({\n        ingredientsArrayList: [],\n      })\n    }\n    \n  }\n\n  saveInDoneRecipes(){\n\n  }\n\n  render() {\n    console.log('qualquer coisa');\n    const { foodDetails } = this.props;\n    const { ingredientsArrayList } = this.state;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(foodDetails));\n    if (array[0].length > 0) {\n      ingredients = array[0].filter((item) => item[0].includes('strIngredient'))\n        .filter((item) => item[1]).map((item, index) => ({name: item[1], checked: ingredientsArrayList.some((item) => item === index)}));\n      measurements = array[0].filter((item) => item[0].includes('strMeasure'))\n        .filter((item) => item[1]).map((item) => item[1]);\n    }\n    return (\n      <>\n        <ul> {console.log(ingredients)}\n          { ingredients\n            .map((item, index) => {\n              return (item.name\n                ? (\n                  <label\n                    htmlFor={ `${index}-check-ingredients` }\n                    className={ingredientsArrayList.some((item) => item === index) ? 'checked-button' : '' }\n                    key={ index }\n                    data-testid={ `${index}-ingredient-step` }\n                  >\n                    <input\n                      type=\"checkbox\"\n                      checked={ ingredientsArrayList.some((item) => item === index) }\n                      // checked={ item.checked }\n                      onChange={ this.handleOnchange }\n                      value={ index }\n                      id={ `${index}-check-ingredients` }\n                    />\n                    {`${item.name} - ${measurements[index]}`}\n                  </label>\n                )\n                : '')\n            })}\n        </ul>\n        <Link to=\"/receitas-feitas\">\n        <button\n          className=\"finish-recipe\"\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n          disabled={ ingredientsArrayList.length !== ingredients.length }\n          onClick={ this.saveInDoneRecipes }\n        >\n          {' '}\n          Finalizar Receita\n        </button>\n      </Link>\n    </>);\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodDetails: state.foodReducer.foodDetails,\n});\n\nconst mapDispatchToProps = (dispatch) =>({\n  saveDoneRecipes: (id) => dispatch(saveDoneRecipe(id)),\n});\n\nIngredientesFoodInProgress.propTypes = {\n  foodDetails: PropTypes.shape({\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    strYoutube: PropTypes.string,\n    idMeal: PropTypes.string,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientesFoodInProgress);\n"]},"metadata":{},"sourceType":"module"}