{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documents/projects/sd-011-project-recipes-app/src/components/IngredientesFoodInProgress.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../Footer.css';\n\nclass IngredientesFoodInProgress extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredientsArrayList: []\n    };\n    this.handleOnchange = this.handleOnchange.bind(this);\n    this.saveInLocalStorage = this.saveInLocalStorage.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      foodDetails\n    } = this.props;\n\n    if (!Object.is(prevProps.foodDetails, foodDetails)) {\n      this.markedBox();\n    }\n  }\n\n  handleOnchange({\n    target\n  }) {\n    const {\n      checked,\n      value\n    } = target;\n\n    if (checked) {\n      this.setState(previousState => ({\n        ingredientsArrayList: [...previousState.ingredientsArrayList, Number(value)]\n      }), () => this.saveInLocalStorage());\n    } else {\n      this.setState(previousState => ({\n        ingredientsArrayList: previousState.ingredientsArrayList.filter(box => box !== Number(value))\n      }), () => this.saveInLocalStorage());\n    }\n  }\n\n  saveInLocalStorage() {\n    const {\n      foodDetails\n    } = this.props;\n    const {\n      ingredientsArrayList\n    } = this.state;\n    let inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (!inProgressRecipes) {\n      inProgressRecipes = {\n        cocktails: {},\n        meals: {}\n      };\n    }\n\n    inProgressRecipes.meals[foodDetails.idMeal] = ingredientsArrayList;\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  } // ableButton(){\n  // }\n\n\n  markedBox() {\n    const {\n      foodDetails\n    } = this.props;\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (inProgressRecipes && Object.keys(inProgressRecipes.meals).find(meal => Number(meal) === Number(foodDetails.idMeal))) {\n      this.setState({\n        ingredientsArrayList: inProgressRecipes.meals[foodDetails.idMeal]\n      });\n    }\n  }\n\n  render() {\n    const {\n      foodDetails\n    } = this.props;\n    const {\n      ingredientsArrayList\n    } = this.state;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(foodDetails));\n\n    if (array[0].length > 0) {\n      ingredients = array[0].filter(item => item[0].includes('strIngredient')).filter(item => item[1]).map(item => item[1]);\n      measurements = array[0].filter(item => item[0].includes('strMeasure')).filter(item => item[1]).map(item => item[1]);\n    }\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, ingredients.map((item, index) => item ? /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: `${index}-check-ingredients`,\n      className: ingredientsArrayList.find(item => item === index) ? 'checked-button' : '',\n      key: index,\n      \"data-testid\": `${index}-ingredient-step`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleOnchange,\n      checked: ingredientsArrayList.some(item => item === index),\n      value: index,\n      required: true,\n      id: `${index}-check-ingredients`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }), `${item} - ${measurements[index]}`) : '')), /*#__PURE__*/React.createElement(Link, {\n      to: \"/receitas-feitas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"finish-recipe\",\n      type: \"button\",\n      \"data-testid\": \"finish-recipe-btn\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, ' ', \"Finalizar Receita\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  foodDetails: state.foodReducer.foodDetails\n});\n\nIngredientesFoodInProgress.propTypes = {\n  foodDetails: PropTypes.shape({\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    strYoutube: PropTypes.string,\n    idMeal: PropTypes.string\n  }).isRequired\n};\nexport default connect(mapStateToProps)(IngredientesFoodInProgress);","map":{"version":3,"sources":["/home/rafael/Documents/projects/sd-011-project-recipes-app/src/components/IngredientesFoodInProgress.js"],"names":["React","Component","Link","connect","PropTypes","IngredientesFoodInProgress","constructor","state","ingredientsArrayList","handleOnchange","bind","saveInLocalStorage","componentDidUpdate","prevProps","foodDetails","props","Object","is","markedBox","target","checked","value","setState","previousState","Number","filter","box","inProgressRecipes","JSON","parse","localStorage","getItem","cocktails","meals","idMeal","setItem","stringify","keys","find","meal","render","ingredients","measurements","array","Array","of","entries","length","item","includes","map","index","some","mapStateToProps","foodReducer","propTypes","shape","strMealThumb","string","strMeal","strCategory","strInstructions","strYoutube","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../Footer.css';\n\nclass IngredientesFoodInProgress extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredientsArrayList: [],\n    };\n    this.handleOnchange = this.handleOnchange.bind(this);\n    this.saveInLocalStorage = this.saveInLocalStorage.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { foodDetails } = this.props;\n    if (!Object.is(prevProps.foodDetails, foodDetails)) {\n      this.markedBox();\n    }\n  }\n\n  handleOnchange({ target }) {\n    const { checked, value } = target;\n    if (checked) {\n      this.setState((previousState) => ({\n        ingredientsArrayList: [...previousState.ingredientsArrayList, Number(value)],\n      }), () => this.saveInLocalStorage());\n    } else {\n      this.setState((previousState) => ({\n        ingredientsArrayList: previousState.ingredientsArrayList\n          .filter((box) => box !== Number(value)),\n      }), () => this.saveInLocalStorage());\n    }\n  }\n\n  saveInLocalStorage() {\n    const { foodDetails } = this.props;\n    const { ingredientsArrayList } = this.state;\n    let inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (!inProgressRecipes) {\n      inProgressRecipes = {\n        cocktails: {},\n        meals: {},\n      };\n    }\n    inProgressRecipes.meals[foodDetails.idMeal] = ingredientsArrayList;\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  }\n\n  // ableButton(){\n\n  // }\n\n  markedBox() {\n    const { foodDetails } = this.props;\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (inProgressRecipes && Object.keys(inProgressRecipes.meals)\n      .find((meal) => Number(meal) === Number(foodDetails.idMeal))) {\n      this.setState({\n        ingredientsArrayList: inProgressRecipes.meals[foodDetails.idMeal],\n      });\n    }\n  }\n\n  render() {\n    const { foodDetails } = this.props;\n    const { ingredientsArrayList } = this.state;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(foodDetails));\n    if (array[0].length > 0) {\n      ingredients = array[0].filter((item) => item[0].includes('strIngredient'))\n        .filter((item) => item[1]).map((item) => item[1]);\n      measurements = array[0].filter((item) => item[0].includes('strMeasure'))\n        .filter((item) => item[1]).map((item) => item[1]);\n    }\n    return (\n      <form>\n        <ul>\n          { ingredients\n            .map((item, index) => (item\n              ? (\n                <label\n                  htmlFor={ `${index}-check-ingredients` }\n                  className={ingredientsArrayList.find((item) => item === index) ? 'checked-button' : '' }\n                  key={ index }\n                  data-testid={ `${index}-ingredient-step` }\n                >\n                  <input\n                    type=\"checkbox\"\n                    onChange={ this.handleOnchange }\n                    checked={ ingredientsArrayList.some((item) => item === index) }\n                    value={ index }\n                    required\n                    id={ `${index}-check-ingredients` }\n                  />\n                  {`${item} - ${measurements[index]}`}\n                </label>\n              )\n              : ''))}\n        </ul>\n        <Link to=\"/receitas-feitas\">\n        <button\n          className=\"finish-recipe\"\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n          disabled\n        >\n          {' '}\n          Finalizar Receita\n        </button>\n      </Link>\n    </form>);\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodDetails: state.foodReducer.foodDetails,\n});\n\nIngredientesFoodInProgress.propTypes = {\n  foodDetails: PropTypes.shape({\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    strYoutube: PropTypes.string,\n    idMeal: PropTypes.string,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps)(IngredientesFoodInProgress);\n"]},"metadata":{},"sourceType":"module"}